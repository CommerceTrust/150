html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0;text-decoration:none}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}mark{background:#ff0;color:#000}small{font-size:15px;font-size:.75rem}sub,sup{font-size:10px;font-size:.5rem;line-height:0;position:relative;vertical-align:baseline}sup{top:-10px;top:-.5rem}sub{bottom:-5px;bottom:-.25rem}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-moz-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*{-moz-box-sizing:border-box;box-sizing:border-box;margin:0}*::after,*::before{-moz-box-sizing:border-box;box-sizing:border-box}[class*=__items]{list-style:none;margin:0}img,iframe,embed{width:100%}.container{background-color:#fff;margin:0 auto;max-width:1200px}[class*=col-]{display:table-cell;vertical-align:middle}[class*=__container]{margin:0 auto;max-width:1200px}[class*=col-1-12]{width:8.333333333333332%}[class*=col-2-12]{width:16.666666666666664%}[class*=col-3-12]{width:25%}[class*=col-4-12]{width:33.33333333333333%}[class*=col-5-12]{width:41.66666666666667%}[class*=col-6-12]{width:50%}[class*=col-7-12]{width:58.333333333333336%}[class*=col-8-12]{width:66.66666666666666%}[class*=col-9-12]{width:75%}[class*=col-10-12]{width:83.33333333333334%}[class*=col-11-12]{width:91.66666666666666%}[class*=col-12-12]{width:100%}.test--col-2-12{background-color:#f00}html{font-size:20px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}body{color:#666;font-family:sans-serif,sans-serif;line-height:1.5;margin:0}[class*=__heading]{color:#267e64;font-family:serif,serif;font-size:50px;font-size:2.5rem;font-weight:400;line-height:1;margin-bottom:40px;margin-bottom:2rem}a{text-decoration:none;color:#267e64}a:hover{color:#455652;text-decoration:none}[class*=__button]{border:2px solid #267e64;color:#267e64;display:inline-block;padding:10px 20px;padding:.5rem 1rem}[class*=__button]:hover{background-color:#267e64;color:#fff;text-decoration:none}[class*=content]>*{margin-bottom:30px;margin-bottom:1.5rem}.splash-page{background-color:#f8f5e4}.header{background-color:#fff;display:table;overflow:hidden;padding:20px 40px;padding:1rem 2rem;width:100%}.header__logo--col-4-12{width:20%}.header__social-nav--col-8-12{text-align:right}.banner-splash{background:url(img/Commerce_150_hero-1.jpg) no-repeat center center;-moz-background-size:cover;background-size:cover;height:350px;width:100%}.main{background-color:#f8f5e4;padding-top:30px;padding-top:1.5rem;width:100%}.main__content--col-8-12{display:block;margin:0 auto}.main__heading{color:#267e64;font-size:40px;font-size:2rem}.main__button{border:2px solid #267e64;color:#267e64;display:inline-block;padding:10px 20px;padding:.5rem 1rem}.main__button:hover{background-color:#267e64;color:#eceee6;text-decoration:none}.footer{padding-top:40px;padding-top:2rem}.footer p{font-size:11px;color:#999;text-align:right}.icon{position:relative;display:inline-block;width:25px;height:25px;overflow:hidden}.icon__cnt{width:100%;height:100%;background:inherit;fill:inherit;-webkit-transform:translateX(0);-moz-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0);-ms-transform:translate(.5px,-.3px)}.icon--m{width:50px;height:50px}.icon--l{width:100px;height:100px}.icon--xl{width:150px;height:150px}.icon--xxl{width:200px;height:200px}.icon__spinner{position:absolute;top:0;left:0;width:100%;height:100%}.icon--ei-spinner .icon__spinner,.icon--ei-spinner-2 .icon__spinner{-webkit-animation:spin 1s steps(12) infinite;-moz-animation:spin 1s steps(12) infinite;-o-animation:spin 1s steps(12) infinite;animation:spin 1s steps(12) infinite}.icon--ei-spinner-3 .icon__spinner{-webkit-animation:spin 1.5s linear infinite;-moz-animation:spin 1.5s linear infinite;-o-animation:spin 1.5s linear infinite;animation:spin 1.5s linear infinite}.icon--ei-sc-facebook{fill:#267e64}.icon--ei-sc-github{fill:#267e64}.icon--ei-sc-google-plus{fill:#267e64}.icon--ei-sc-instagram{fill:#267e64}.icon--ei-sc-linkedin{fill:#267e64}.icon--ei-sc-odnoklassniki{fill:#267e64}.icon--ei-sc-skype{fill:#267e64}.icon--ei-sc-soundcloud{fill:#267e64}.icon--ei-sc-tumblr{fill:#267e64}.icon--ei-sc-twitter{fill:#267e64}.icon--ei-sc-vimeo{fill:#267e64}.icon--ei-sc-vk{fill:#267e64}.icon--ei-sc-youtube{fill:#267e64}@-moz-keyframes spin{100%{-moz-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-o-keyframes spin{100%{-o-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{100%{-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);transform:rotate(360deg)}}@media only screen and (max-width:550px){.header{display:block}.header__logo--col-4-12{width:70%}.header__social-nav--col-8-12{display:inline-block;text-align:center;width:100%}.main__heading{line-height:1}}@media only screen and (min-width:400px) and (max-width:1050px){.header__logo--col-4-12{width:50%}.header__social-nav--col-8-12{display:inline-block;width:100%}.banner-splash{height:250px}}@media only screen and (max-width:650px){.banner-splash{height:150px}}@media only screen and (max-width:875px){.main__content--col-8-12{width:80%}}@media only screen and (max-width:450px){.main__heading{text-align:center}}@media only screen and (max-width:725px){.main__heading span{display:inline-block}}/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */