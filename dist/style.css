/* normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
  text-decoration: none;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 15px;
  font-size: 0.75rem;
}
sub,
sup {
  font-size: 10px;
  font-size: 0.5rem;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -10px;
  top: -0.5rem;
}
sub {
  bottom: -5px;
  bottom: -0.25rem;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -moz-box-sizing: content-box;
       box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
       box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
* {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  margin: 0;
}
*::after,
*::before {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
}
[class*='__items'] {
  list-style: none;
  margin: 0;
}
img,
iframe,
embed {
  width: 100%;
}
.container {
  background-color: #fff;
  margin: 0 auto;
  max-width: 1200px;
}
[class*='col-'] {
  display: table-cell;
  vertical-align: middle;
}
[class*='__container'] {
  margin: 0 auto;
  max-width: 1200px;
}
[class*=col-1-12] {
  width: 8.333333333333332%;
}
[class*=col-2-12] {
  width: 16.666666666666664%;
}
[class*=col-3-12] {
  width: 25%;
}
[class*=col-4-12] {
  width: 33.33333333333333%;
}
[class*=col-5-12] {
  width: 41.66666666666667%;
}
[class*=col-6-12] {
  width: 50%;
}
[class*=col-7-12] {
  width: 58.333333333333336%;
}
[class*=col-8-12] {
  width: 66.66666666666666%;
}
[class*=col-9-12] {
  width: 75%;
}
[class*=col-10-12] {
  width: 83.33333333333334%;
}
[class*=col-11-12] {
  width: 91.66666666666666%;
}
[class*=col-12-12] {
  width: 100%;
}
.test--col-2-12 {
  background-color: #f00;
}
html {
  font-size: 20px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
body {
  color: #666;
  font-family: News Cycle , sans-serif;
  line-height: 1.5;
  margin: 0;
}
[class*='__heading'] {
  color: #267e64;
  font-family: Playfair Display , serif;
  font-size: 50px;
  font-size: 2.5rem;
  font-weight: normal;
  line-height: 1;
  margin-bottom: 40px;
  margin-bottom: 2rem;
}
a {
  text-decoration: none;
  color: #267e64;
}
a:hover {
  color: #455652;
  text-decoration: none;
}
[class*='__button'] {
  border: 2px solid #267e64;
  color: #267e64;
  display: inline-block;
  padding: 10px 20px;
  padding: 0.5rem 1rem;
}
[class*='__button']:hover {
  background-color: #267e64;
  color: #fff;
  text-decoration: none;
}
[class*='content'] > * {
  margin-bottom: 30px;
  margin-bottom: 1.5rem;
}
#drawer {
  background-color: #134a3b;
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 200px;
  z-index: 2;
  -webkit-transform: translateX(200px);
     -moz-transform: translateX(200px);
      -ms-transform: translateX(200px);
       -o-transform: translateX(200px);
          transform: translateX(200px);
  -webkit-transition: -webkit-transform 0.5s ease-in-out;
     -moz-transition: -moz-transform 0.5s ease-in-out;
       -o-transition: -o-transform 0.5s ease-in-out;
          transition: transform 0.5s ease-in-out;
}
#drawer.slide {
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
}
#drawer a {
  border-bottom: 1px solid #fff;
  color: #fff;
  display: block;
  padding: 15px 0;
  padding: 0.75rem 0;
  text-align: center;
}
#drawer a:hover {
  background-color: #455652;
  color: #fff;
}
#toggle {
  margin-right: 0;
  -webkit-transition: margin-right 0.5s ease-in-out;
     -moz-transition: margin-right 0.5s ease-in-out;
       -o-transition: margin-right 0.5s ease-in-out;
          transition: margin-right 0.5s ease-in-out;
}
#toggle.move {
  margin-right: 200px;
}
.footer {
  padding-top: 40px;
  padding-top: 2rem;
}
.footer p {
  font-size: 11px;
  color: #999;
  text-align: center;
}
.splash-page {
  background-color: #f8f5e4;
}
.header {
  background-color: #fff;
  display: table;
  overflow: hidden;
  padding: 20px 40px;
  padding: 1rem 2rem;
  width: 100%;
}
.header__logo--col-4-12 {
  width: 20%;
}
.header__social-nav--col-8-12 {
  text-align: right;
}
.banner-splash {
  background: url("img/Commerce_150_hero-1.jpg") no-repeat center center;
  -moz-background-size: cover;
       background-size: cover;
  height: 350px;
  width: 100%;
}
.main {
  background-color: #f8f5e4;
  padding-top: 30px;
  padding-top: 1.5rem;
  width: 100%;
}
.main__sidebar-content--col-2-12 {
  padding: 0 20px;
  padding: 0 1rem;
  vertical-align: top;
}
.main__sidebar-media {
  text-align: center;
}
.main__content--col-6-12 {
  padding: 0 20px;
  padding: 0 1rem;
}
.main__heading {
  color: #267e64;
  font-size: 40px;
  font-size: 2rem;
}
.main__button {
  border: 2px solid #267e64;
  color: #267e64;
  display: inline-block;
  padding: 10px 20px;
  padding: 0.5rem 1rem;
  text-align: center;
  width: 100%;
}
.main__button:hover {
  background-color: #267e64;
  color: #eceee6;
  text-decoration: none;
}
.timeline {
  position: relative;
}
.dsk-not-supported,
.dsk-supported {
  background: #ad9d71;
  background: -webkit-radial-gradient(center, ellipse, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  background: -moz-radial-gradient(center, ellipse, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  background: -o-radial-gradient(center, ellipse, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  background: radial-gradient(ellipse at center, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  -moz-background-size: 100% 100%;
       background-size: 100% 100%;
}
.dsk-not-supported {
  color: #fff;
  text-shadow: 1px 1px 0px rgba(0,0,0,0.2);
  padding: 1px 0;
}
.dsk-not-supported .step {
  width: 800px;
  margin: 20px auto;
  background: rgba(0,0,0,0.2);
  padding: 20px;
  -moz-border-radius: 5px;
       border-radius: 5px;
}
.dsk-not-supported .year {
  background: none;
  padding: 0;
  -webkit-filter: none;
          filter: none;
  _-webkit-filter: none;
  _        filter: none;
}
.dsk-not-supported .dsk-info {
  padding-bottom: 20px;
}
.dsk-not-supported .dsk-info h2 {
  display: none;
}
.dsk-not-supported .dsk-circle {
  font-size: 36px;
  color: rgba(255,255,255,0.8);
  text-shadow: 1px 1px 1px rgba(0,0,0,0.2);
}
.dsk-supported {
  position: relative;
  width: 100%;
  min-width: 100px;
  margin: 0 auto;
  height: 550px;
  overflow: hidden;
}
.dsk-supported .dsk-linewrapper {
  height: 120px;
  height: 6rem;
  bottom: 20%;
  width: 100%;
  background: rgba(255,255,255,0.3);
  -moz-box-shadow: 0 1px rgba(255,255,255,0.15) inset;
       box-shadow: 0 1px rgba(255,255,255,0.15) inset;
  position: absolute;
  bottom: 20%;
  color: #fff;
}
.dsk-supported .dsk-wrapper {
  outline: none;
  overflow: visible !important;
}
.dsk-supported .dsk-circle {
  background: #fff;
  -moz-border-radius: 50%;
       border-radius: 50%;
  -moz-box-shadow: 0 0 2px rgba(0,0,0,0.1);
       box-shadow: 0 0 2px rgba(0,0,0,0.1);
  cursor: pointer;
  width: 20px;
  width: 1rem;
  height: 20px;
  height: 1rem;
  position: relative;
  -webkit-transition: all 1s ease-in;
     -moz-transition: all 1s ease-in;
       -o-transition: all 1s ease-in;
          transition: all 1s ease-in;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.dsk-supported .dsk-circle-date {
  color: #fff;
  font-family: Playfair Display , serif;
  font-weight: 400;
  -webkit-transition: all 1s ease-in;
     -moz-transition: all 1s ease-in;
       -o-transition: all 1s ease-in;
          transition: all 1s ease-in;
  -webkit-transform: translateX(-1rem);
     -moz-transform: translateX(-1rem);
      -ms-transform: translateX(-1rem);
       -o-transform: translateX(-1rem);
          transform: translateX(-1rem);
}
.dsk-supported .active .dsk-circle {
  background: #333;
  -moz-background-clip: padding-box;
       background-clip: padding-box;
}
.dsk-supported .active .dsk-content {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transition: all 0s linear 1s;
     -moz-transition: all 0s linear 1s;
       -o-transition: all 0s linear 1s;
          transition: all 0s linear 1s;
}
.dsk-supported .active .dsk-circle-date {
  color: #333;
}
.dsk-supported .zoom .dsk-content {
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-transform: scale(0.5);
     -moz-transform: scale(0.5);
      -ms-transform: scale(0.5);
       -o-transform: scale(0.5);
          transform: scale(0.5);
  -webkit-transition: all 0.25s ease-in-out 0s;
     -moz-transition: all 0.25s ease-in-out 0s;
       -o-transition: all 0.25s ease-in-out 0s;
          transition: all 0.25s ease-in-out 0s;
}
.dsk-supported .zoom.active .dsk-content {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transform: scale(1);
     -moz-transform: scale(1);
      -ms-transform: scale(1);
       -o-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all 0.25s ease-in-out 1s;
     -moz-transition: all 0.25s ease-in-out 1s;
       -o-transition: all 0.25s ease-in-out 1s;
          transition: all 0.25s ease-in-out 1s;
}
.dsk-supported .fade .dsk-content {
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-transform: scale(1);
     -moz-transform: scale(1);
      -ms-transform: scale(1);
       -o-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all 0.25s ease-in-out 0s;
     -moz-transition: all 0.25s ease-in-out 0s;
       -o-transition: all 0.25s ease-in-out 0s;
          transition: all 0.25s ease-in-out 0s;
}
.dsk-supported .fade.active .dsk-content {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transform: scale(1);
     -moz-transform: scale(1);
      -ms-transform: scale(1);
       -o-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all 0.25s ease-in-out 1s;
     -moz-transition: all 0.25s ease-in-out 1s;
       -o-transition: all 0.25s ease-in-out 1s;
          transition: all 0.25s ease-in-out 1s;
}
.dsk-supported .step {
  width: 400px;
  position: relative;
}
.dsk-supported .dsk-nav {
  position: absolute;
  top: 30%;
  right: 10px;
  width: 30px;
}
.dsk-supported .dsk-nav span {
  background: url("img/prev.png") no-repeat center center rgba(255,255,255,0.3);
  -moz-border-radius: 3px;
       border-radius: 3px;
  -moz-box-shadow: 0 1px rgba(255,255,255,0.25) inset;
       box-shadow: 0 1px rgba(255,255,255,0.25) inset;
  cursor: pointer;
  display: inline-block;
  width: 30px;
  height: 30px;
  margin: 0 1px;
  -webkit-transition: background-color 0.3s ease-in;
     -moz-transition: background-color 0.3s ease-in;
       -o-transition: background-color 0.3s ease-in;
          transition: background-color 0.3s ease-in;
}
.dsk-supported .dsk-nav span:hover {
  background-color: rgba(255,255,255,0.5);
}
.dsk-supported .dsk-nav .dsk-pre {
  -moz-border-radius: 3px 0 0 3px;
       border-radius: 3px 0 0 3px;
}
.dsk-supported .dsk-nav .dsk-next {
  -moz-border-radius: 0 3px 3px 0;
       border-radius: 0 3px 3px 0;
  background-image: url("img/next.png");
}
.dsk-supported .dsk-nav .dsk-autoplay {
  background-image: url("img/play.png");
}
.dsk-supported .dsk-nav .playing {
  background-image: url("img/pause.png");
}
.dsk-supported .dsk-content {
  position: absolute;
  top: -550px;
  min-height: 600px;
  width: 800px;
  left: -200px;
  opacity: 0;
  filter: alpha(opacity=0);
  display: table;
}
.dsk-supported .no-image {
  text-align: center;
}
.dsk-supported .dsk-info {
  display: table-cell;
  vertical-align: middle;
  width: 50%;
}
.dsk-supported .dsk-info .date__heading {
  color: #333;
  margin: 0 0 20px 0;
  font-weight: normal;
}
.dsk-supported .dsk-info p {
  color: #333;
  font-size: 30px;
  font-size: 1.5rem;
  margin: 0;
}
.dsk-supported .dsk-year-info {
  font-size: 24px;
  padding: 10px;
}
.dsk-supported img {
  width: 100%;
  height: auto;
}
.dsk-supported .media {
  display: table-cell;
  vertical-align: middle;
  height: 500px;
  width: 50%;
}
.dsk-fullscreen {
  width: 100%;
  height: 100%;
}
.footer-timeline {
  padding-top: 40px;
  padding-top: 2rem;
  position: absolute;
  bottom: 30px;
  bottom: 1.5rem;
  left: 50%;
  -webkit-transform: translateX(-50%);
     -moz-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
       -o-transform: translateX(-50%);
          transform: translateX(-50%);
}
.footer-timeline p {
  font-size: 11px;
  color: #fff;
  text-align: right;
}
.icon {
  position: relative;
  display: inline-block;
  width: 25px;
  height: 25px;
  overflow: hidden;
}
.icon__cnt {
  width: 100%;
  height: 100%;
  background: inherit;
  fill: inherit;
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -ms-transform: translate(0.5px, -0.3px);
}
.icon--m {
  width: 50px;
  height: 50px;
}
.icon--l {
  width: 100px;
  height: 100px;
}
.icon--xl {
  width: 150px;
  height: 150px;
}
.icon--xxl {
  width: 200px;
  height: 200px;
}
.icon__spinner {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.icon--ei-spinner .icon__spinner,
.icon--ei-spinner-2 .icon__spinner {
  -webkit-animation: spin 1s steps(12) infinite;
     -moz-animation: spin 1s steps(12) infinite;
       -o-animation: spin 1s steps(12) infinite;
          animation: spin 1s steps(12) infinite;
}
.icon--ei-spinner-3 .icon__spinner {
  -webkit-animation: spin 1.5s linear infinite;
     -moz-animation: spin 1.5s linear infinite;
       -o-animation: spin 1.5s linear infinite;
          animation: spin 1.5s linear infinite;
}
.icon--ei-sc-facebook {
  fill: #267e64;
}
.icon--ei-sc-github {
  fill: #267e64;
}
.icon--ei-sc-google-plus {
  fill: #267e64;
}
.icon--ei-sc-instagram {
  fill: #267e64;
}
.icon--ei-sc-linkedin {
  fill: #267e64;
}
.icon--ei-sc-odnoklassniki {
  fill: #267e64;
}
.icon--ei-sc-skype {
  fill: #267e64;
}
.icon--ei-sc-soundcloud {
  fill: #267e64;
}
.icon--ei-sc-tumblr {
  fill: #267e64;
}
.icon--ei-sc-twitter {
  fill: #267e64;
}
.icon--ei-sc-vimeo {
  fill: #267e64;
}
.icon--ei-sc-vk {
  fill: #267e64;
}
.icon--ei-sc-youtube {
  fill: #267e64;
}
.icon--ei-navicon {
  fill: #267e64;
}
@-moz-keyframes spin {
  100% {
    -moz-transform: rotate(360deg);
         transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@-o-keyframes spin {
  100% {
    -o-transform: rotate(360deg);
       transform: rotate(360deg);
  }
}
@keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
       -moz-transform: rotate(360deg);
         -o-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.mfp-bg {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1042;
  overflow: hidden;
  position: fixed;
  background: #0b0b0b;
  opacity: 0.8;
  filter: alpha(opacity=80);
}
.mfp-wrap {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1043;
  position: fixed;
  outline: none !important;
  -webkit-backface-visibility: hidden;
}
.mfp-container {
  text-align: center;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  padding: 0 8px;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.mfp-container:before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}
.mfp-align-top .mfp-container:before {
  display: none;
}
.mfp-content {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  margin: 0 auto;
  text-align: left;
  z-index: 1045;
}
.mfp-inline-holder .mfp-content,
.mfp-ajax-holder .mfp-content {
  width: 100%;
  cursor: auto;
}
.mfp-ajax-cur {
  cursor: progress;
}
.mfp-zoom-out-cur,
.mfp-zoom-out-cur .mfp-image-holder .mfp-close {
  cursor: -moz-zoom-out;
  cursor: -webkit-zoom-out;
  cursor: zoom-out;
}
.mfp-zoom {
  cursor: pointer;
  cursor: -webkit-zoom-in;
  cursor: -moz-zoom-in;
  cursor: zoom-in;
}
.mfp-auto-cursor .mfp-content {
  cursor: auto;
}
.mfp-close,
.mfp-arrow,
.mfp-preloader,
.mfp-counter {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none;
}
.mfp-loading.mfp-figure {
  display: none;
}
.mfp-hide {
  display: none !important;
}
.mfp-preloader {
  color: #ccc;
  position: absolute;
  top: 50%;
  width: auto;
  text-align: center;
  margin-top: -0.8em;
  left: 8px;
  right: 8px;
  z-index: 1044;
}
.mfp-preloader a {
  color: #ccc;
}
.mfp-preloader a:hover {
  color: #fff;
}
.mfp-s-ready .mfp-preloader {
  display: none;
}
.mfp-s-error .mfp-content {
  display: none;
}
button.mfp-close,
button.mfp-arrow {
  overflow: visible;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none;
  display: block;
  outline: none;
  padding: 0;
  z-index: 1046;
  -moz-box-shadow: none;
       box-shadow: none;
}
button::-moz-focus-inner {
  padding: 0;
  border: 0;
}
.mfp-close {
  width: 44px;
  height: 44px;
  line-height: 44px;
  position: absolute;
  right: 0;
  top: 0;
  text-decoration: none;
  text-align: center;
  opacity: 0.65;
  filter: alpha(opacity=65);
  padding: 0 0 18px 10px;
  color: #fff;
  font-style: normal;
  font-size: 28px;
  font-family: Arial, Baskerville, monospace;
}
.mfp-close:hover,
.mfp-close:focus {
  opacity: 1;
  filter: alpha(opacity=100);
}
.mfp-close:active {
  top: 1px;
}
.mfp-close-btn-in .mfp-close {
  color: #333;
}
.mfp-image-holder .mfp-close,
.mfp-iframe-holder .mfp-close {
  color: #fff;
  right: -6px;
  text-align: right;
  padding-right: 6px;
  width: 100%;
}
.mfp-counter {
  position: absolute;
  top: 0;
  right: 0;
  color: #ccc;
  font-size: 12px;
  line-height: 18px;
  white-space: nowrap;
}
.mfp-arrow {
  position: absolute;
  opacity: 0.65;
  filter: alpha(opacity=65);
  margin: 0;
  top: 50%;
  margin-top: -55px;
  padding: 0;
  width: 90px;
  height: 110px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}
.mfp-arrow:active {
  margin-top: -54px;
}
.mfp-arrow:hover,
.mfp-arrow:focus {
  opacity: 1;
  filter: alpha(opacity=100);
}
.mfp-arrow:before,
.mfp-arrow:after,
.mfp-arrow .mfp-b,
.mfp-arrow .mfp-a {
  content: '';
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  left: 0;
  top: 0;
  margin-top: 35px;
  margin-left: 35px;
  border: medium inset transparent;
}
.mfp-arrow:after,
.mfp-arrow .mfp-a {
  border-top-width: 13px;
  border-bottom-width: 13px;
  top: 8px;
}
.mfp-arrow:before,
.mfp-arrow .mfp-b {
  border-top-width: 21px;
  border-bottom-width: 21px;
  opacity: 0.7;
  filter: alpha(opacity=70);
}
.mfp-arrow-left {
  left: 0;
}
.mfp-arrow-left:after,
.mfp-arrow-left .mfp-a {
  border-right: 17px solid #fff;
  margin-left: 31px;
}
.mfp-arrow-left:before,
.mfp-arrow-left .mfp-b {
  margin-left: 25px;
  border-right: 27px solid #3f3f3f;
}
.mfp-arrow-right {
  right: 0;
}
.mfp-arrow-right:after,
.mfp-arrow-right .mfp-a {
  border-left: 17px solid #fff;
  margin-left: 39px;
}
.mfp-arrow-right:before,
.mfp-arrow-right .mfp-b {
  border-left: 27px solid #3f3f3f;
}
.mfp-iframe-holder {
  padding-top: 40px;
  padding-bottom: 40px;
}
.mfp-iframe-holder .mfp-content {
  line-height: 0;
  width: 100%;
  max-width: 900px;
}
.mfp-iframe-holder .mfp-close {
  top: -40px;
}
.mfp-iframe-scaler {
  width: 100%;
  height: 0;
  overflow: hidden;
  padding-top: 56.25%;
}
.mfp-iframe-scaler iframe {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -moz-box-shadow: 0 0 8px rgba(0,0,0,0.6);
       box-shadow: 0 0 8px rgba(0,0,0,0.6);
  background: #000;
}
img.mfp-img {
  width: auto;
  max-width: 100%;
  height: auto;
  display: block;
  line-height: 0;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 40px 0 40px;
  margin: 0 auto;
}
.mfp-figure {
  line-height: 0;
}
.mfp-figure:after {
  content: '';
  position: absolute;
  left: 0;
  top: 40px;
  bottom: 40px;
  display: block;
  right: 0;
  width: auto;
  height: auto;
  z-index: -1;
  -moz-box-shadow: 0 0 8px rgba(0,0,0,0.6);
       box-shadow: 0 0 8px rgba(0,0,0,0.6);
  background: #444;
}
.mfp-figure small {
  color: #bdbdbd;
  display: block;
  font-size: 12px;
  line-height: 14px;
}
.mfp-figure figure {
  margin: 0;
}
.mfp-bottom-bar {
  margin-top: -36px;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  cursor: auto;
}
.mfp-title {
  text-align: left;
  line-height: 18px;
  color: #f3f3f3;
  word-wrap: break-word;
  padding-right: 36px;
}
.mfp-image-holder .mfp-content {
  max-width: 100%;
}
.mfp-gallery .mfp-image-holder .mfp-figure {
  cursor: pointer;
}
.mfp-ie7 .mfp-img {
  padding: 0;
}
.mfp-ie7 .mfp-bottom-bar {
  width: 600px;
  left: 50%;
  margin-left: -300px;
  margin-top: 5px;
  padding-bottom: 5px;
}
.mfp-ie7 .mfp-container {
  padding: 0;
}
.mfp-ie7 .mfp-content {
  padding-top: 44px;
}
.mfp-ie7 .mfp-close {
  top: 0;
  right: 0;
  padding-top: 0;
}

@media only screen and (max-width: 550px) {
  .header {
    display: block;
  }
  .header__logo--col-4-12 {
    width: 70%;
  }
  .header__social-nav--col-8-12 {
    display: inline-block;
    text-align: center;
    width: 100%;
  }
  .main__heading {
    line-height: 1;
  }
}

@media only screen and (min-width: 400px) and (max-width: 1050px) {
  .header__logo--col-4-12 {
    width: 50%;
  }
  .header__social-nav--col-8-12 {
    display: inline-block;
    width: 100%;
  }
  .banner-splash {
    height: 250px;
  }
}

@media only screen and (max-width: 650px) {
  .banner-splash {
    height: 150px;
  }
}

@media only screen and (max-width: 890px) {
  .main__sidebar-content--col-2-12 {
    width: 40%;
  }
  .main__content--col-6-12 {
    width: 60%;
  }
}

@media only screen and (max-width: 690px) {
  .main__sidebar-content--col-2-12 {
    display: block;
    width: 100%;
  }
  .main__sidebar-media p {
    display: inline-block;
    width: 33%;
  }
  .main__content--col-6-12 {
    display: block;
    width: 100%;
  }
}

@media only screen and (max-width: 450px) {
  .main__heading {
    text-align: center;
  }
}

@media only screen and (max-width: 725px) {
  .main__heading span {
    display: inline-block;
  }
}

@media only screen and (min-width: 1050px) {
  .dsk-supported .dsk-content {
    top: -550px;
    min-height: 600px;
    width: 1000px;
    left: -300px;
  }
}

@media only screen and (max-width: 400px) {
  .dsk-supported .dsk-content {
    top: -1000px;
  }
}

@media screen, (max-width: 650px) {
  .dsk-supported {
    height: 400px;
  }
}

@media screen and (max-width: 800px) and (orientation: landscape), screen and (max-height: 300px) {
  .mfp-img-mobile .mfp-image-holder {
    padding-left: 0;
    padding-right: 0;
  }
  .mfp-img-mobile img.mfp-img {
    padding: 0;
  }
  .mfp-img-mobile .mfp-figure:after {
    top: 0;
    bottom: 0;
  }
  .mfp-img-mobile .mfp-figure small {
    display: inline;
    margin-left: 5px;
  }
  .mfp-img-mobile .mfp-bottom-bar {
    background: rgba(0,0,0,0.6);
    bottom: 0;
    margin: 0;
    top: auto;
    padding: 3px 5px;
    position: fixed;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  .mfp-img-mobile .mfp-bottom-bar:empty {
    padding: 0;
  }
  .mfp-img-mobile .mfp-counter {
    right: 5px;
    top: 3px;
  }
  .mfp-img-mobile .mfp-close {
    top: 0;
    right: 0;
    width: 35px;
    height: 35px;
    line-height: 35px;
    background: rgba(0,0,0,0.6);
    position: fixed;
    text-align: center;
    padding: 0;
  }
}

@media all and (max-width: 900px) {
  .mfp-arrow {
    -webkit-transform: scale(0.75);
    -moz-transform: scale(0.75);
     -ms-transform: scale(0.75);
      -o-transform: scale(0.75);
         transform: scale(0.75);
  }
  .mfp-arrow-left {
    -webkit-transform-origin: 0;
    -moz-transform-origin: 0;
     -ms-transform-origin: 0;
      -o-transform-origin: 0;
         transform-origin: 0;
  }
  .mfp-arrow-right {
    -webkit-transform-origin: 100%;
    -moz-transform-origin: 100%;
     -ms-transform-origin: 100%;
      -o-transform-origin: 100%;
         transform-origin: 100%;
  }
  .mfp-container {
    padding-left: 6px;
    padding-right: 6px;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */