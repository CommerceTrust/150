/* normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
  text-decoration: none;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 15px;
  font-size: 0.75rem;
}
sub,
sup {
  font-size: 10px;
  font-size: 0.5rem;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -10px;
  top: -0.5rem;
}
sub {
  bottom: -5px;
  bottom: -0.25rem;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -moz-box-sizing: content-box;
       box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
       box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
* {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  margin: 0;
}
*::after,
*::before {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
}
[class*='__items'] {
  list-style: none;
  margin: 0;
}
img,
iframe,
embed {
  width: 100%;
}
.container {
  background-color: #fff;
  margin: 0 auto;
  max-width: 1200px;
}
[class*='col-'] {
  display: table-cell;
  vertical-align: middle;
}
[class*='__container'] {
  margin: 0 auto;
  max-width: 1200px;
}
[class*=col-1-12] {
  width: 8.333333333333332%;
}
[class*=col-2-12] {
  width: 16.666666666666664%;
}
[class*=col-3-12] {
  width: 25%;
}
[class*=col-4-12] {
  width: 33.33333333333333%;
}
[class*=col-5-12] {
  width: 41.66666666666667%;
}
[class*=col-6-12] {
  width: 50%;
}
[class*=col-7-12] {
  width: 58.333333333333336%;
}
[class*=col-8-12] {
  width: 66.66666666666666%;
}
[class*=col-9-12] {
  width: 75%;
}
[class*=col-10-12] {
  width: 83.33333333333334%;
}
[class*=col-11-12] {
  width: 91.66666666666666%;
}
[class*=col-12-12] {
  width: 100%;
}
.test--col-2-12 {
  background-color: #f00;
}
html {
  font-size: 20px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
body {
  color: #666;
  font-family: News Cycle , sans-serif;
  line-height: 1.5;
  margin: 0;
}
[class*='__heading'] {
  color: #267e64;
  font-family: Playfair Display , serif;
  font-size: 50px;
  font-size: 2.5rem;
  font-weight: normal;
  line-height: 1;
  margin-bottom: 40px;
  margin-bottom: 2rem;
}
a {
  text-decoration: none;
  color: #267e64;
}
a:hover {
  color: #455652;
  text-decoration: none;
}
[class*='__button'] {
  border: 2px solid #267e64;
  color: #267e64;
  display: inline-block;
  padding: 10px 20px;
  padding: 0.5rem 1rem;
}
[class*='__button']:hover {
  background-color: #267e64;
  color: #fff;
  text-decoration: none;
}
[class*='content'] > * {
  margin-bottom: 30px;
  margin-bottom: 1.5rem;
}
#drawer {
  background-color: #134a3b;
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 200px;
  z-index: 2;
  -webkit-transform: translateX(200px);
     -moz-transform: translateX(200px);
      -ms-transform: translateX(200px);
       -o-transform: translateX(200px);
          transform: translateX(200px);
  -webkit-transition: -webkit-transform 0.5s ease-in-out;
     -moz-transition: -moz-transform 0.5s ease-in-out;
       -o-transition: -o-transform 0.5s ease-in-out;
          transition: transform 0.5s ease-in-out;
}
#drawer.slide {
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
      -ms-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
}
#drawer a {
  border-bottom: 1px solid #fff;
  color: #fff;
  display: block;
  padding: 15px 0;
  padding: 0.75rem 0;
  text-align: center;
}
#drawer a:hover {
  background-color: #455652;
  color: #fff;
}
#toggle {
  margin-right: 0;
  -webkit-transition: margin-right 0.5s ease-in-out;
     -moz-transition: margin-right 0.5s ease-in-out;
       -o-transition: margin-right 0.5s ease-in-out;
          transition: margin-right 0.5s ease-in-out;
}
#toggle.move {
  margin-right: 200px;
}
.footer {
  padding-top: 40px;
  padding-top: 2rem;
}
.footer p {
  font-size: 11px;
  color: #999;
  text-align: center;
}
.splash-page {
  background-color: #f8f5e4;
}
.header {
  background-color: #fff;
  display: table;
  overflow: hidden;
  padding: 20px 40px;
  padding: 1rem 2rem;
  width: 100%;
}
.header__logo--col-4-12 {
  width: 20%;
}
.header__social-nav--col-8-12 {
  text-align: right;
}
.banner-splash {
  background: url("img/Commerce_150_hero-1.jpg") no-repeat center center;
  -moz-background-size: cover;
       background-size: cover;
  height: 350px;
  width: 100%;
}
.main {
  background-color: #f8f5e4;
  padding-top: 30px;
  padding-top: 1.5rem;
  width: 100%;
}
.main__sidebar-content--col-2-12 {
  padding: 0 20px;
  padding: 0 1rem;
  vertical-align: top;
}
.main__sidebar-media {
  text-align: center;
}
.main__content--col-6-12 {
  padding: 0 20px;
  padding: 0 1rem;
}
.main__heading {
  color: #267e64;
  font-size: 40px;
  font-size: 2rem;
}
.main__button {
  border: 2px solid #267e64;
  color: #267e64;
  display: inline-block;
  padding: 10px 20px;
  padding: 0.5rem 1rem;
  text-align: center;
  width: 100%;
}
.main__button:hover {
  background-color: #267e64;
  color: #eceee6;
  text-decoration: none;
}
html {
  overflow-x: hidden;
}
.timeline {
  position: relative;
  overflow-x: hidden;
}
.dsk-not-supported,
.dsk-supported {
  background: #ad9d71;
  background: -webkit-radial-gradient(center, ellipse, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  background: -moz-radial-gradient(center, ellipse, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  background: -o-radial-gradient(center, ellipse, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  background: radial-gradient(ellipse at center, #c9c190 0%, #ad9d71 55%, #89825c 100%);
  -moz-background-size: 100% 100%;
       background-size: 100% 100%;
}
.dsk-not-supported {
  color: #333;
  padding: 1px 0;
}
.dsk-not-supported .step {
  width: 100%;
  margin: 20px auto;
  padding: 20px;
}
.dsk-not-supported .dsk-circle-date {
  background: none;
  padding: 0;
  -webkit-filter: none;
          filter: none;
  _-webkit-filter: none;
  _        filter: none;
  font-family: Playfair Display , serif;
  font-weight: 400;
}
.dsk-not-supported .dsk-info {
  padding-bottom: 20px;
}
.dsk-not-supported .dsk-info h2 {
  display: none;
}
.dsk-not-supported .dsk-circle {
  font-size: 36px;
  color: rgba(255,255,255,0.8);
  text-shadow: 1px 1px 1px rgba(0,0,0,0.2);
}
.dsk-supported {
  position: relative;
  width: 100%;
  min-width: 100px;
  margin: 0 auto;
  height: 550px;
  overflow: hidden;
}
.dsk-supported .dsk-linewrapper {
  height: 120px;
  height: 6rem;
  bottom: 20%;
  width: 100%;
  background: rgba(255,255,255,0.3);
  -moz-box-shadow: 0 1px rgba(255,255,255,0.15) inset;
       box-shadow: 0 1px rgba(255,255,255,0.15) inset;
  position: absolute;
  bottom: 20%;
  color: #fff;
}
.dsk-supported .dsk-wrapper {
  outline: none;
  overflow: visible !important;
}
.dsk-supported .dsk-circle {
  background: #fff;
  -moz-border-radius: 50%;
       border-radius: 50%;
  -moz-box-shadow: 0 0 2px rgba(0,0,0,0.1);
       box-shadow: 0 0 2px rgba(0,0,0,0.1);
  cursor: pointer;
  width: 20px;
  width: 1rem;
  height: 20px;
  height: 1rem;
  position: relative;
  -webkit-transition: all 1s ease-in;
     -moz-transition: all 1s ease-in;
       -o-transition: all 1s ease-in;
          transition: all 1s ease-in;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.dsk-supported .dsk-circle-date {
  color: #fff;
  font-family: Playfair Display , serif;
  font-weight: 400;
  -webkit-transition: all 1s ease-in;
     -moz-transition: all 1s ease-in;
       -o-transition: all 1s ease-in;
          transition: all 1s ease-in;
  -webkit-transform: translateX(-1rem);
     -moz-transform: translateX(-1rem);
      -ms-transform: translateX(-1rem);
       -o-transform: translateX(-1rem);
          transform: translateX(-1rem);
}
.dsk-supported .active .dsk-circle {
  background: #333;
  -moz-background-clip: padding-box;
       background-clip: padding-box;
}
.dsk-supported .active .dsk-content {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transition: all 0s ease-in-out 0s;
     -moz-transition: all 0s ease-in-out 0s;
       -o-transition: all 0s ease-in-out 0s;
          transition: all 0s ease-in-out 0s;
}
.dsk-supported .active .dsk-circle-date {
  color: #333;
}
.dsk-supported .zoom .dsk-content {
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-transform: scale(0.5);
     -moz-transform: scale(0.5);
      -ms-transform: scale(0.5);
       -o-transform: scale(0.5);
          transform: scale(0.5);
  -webkit-transition: all 0s ease-in-out 0s;
     -moz-transition: all 0s ease-in-out 0s;
       -o-transition: all 0s ease-in-out 0s;
          transition: all 0s ease-in-out 0s;
}
.dsk-supported .zoom.active .dsk-content {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transform: scale(1);
     -moz-transform: scale(1);
      -ms-transform: scale(1);
       -o-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all 0.25s ease-in-out 0.25s;
     -moz-transition: all 0.25s ease-in-out 0.25s;
       -o-transition: all 0.25s ease-in-out 0.25s;
          transition: all 0.25s ease-in-out 0.25s;
}
.dsk-supported .fade .dsk-content {
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-transform: scale(1);
     -moz-transform: scale(1);
      -ms-transform: scale(1);
       -o-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all 0s ease-in-out 0s;
     -moz-transition: all 0s ease-in-out 0s;
       -o-transition: all 0s ease-in-out 0s;
          transition: all 0s ease-in-out 0s;
}
.dsk-supported .fade.active .dsk-content {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transform: scale(1);
     -moz-transform: scale(1);
      -ms-transform: scale(1);
       -o-transform: scale(1);
          transform: scale(1);
  -webkit-transition: all 0.25s ease-in-out 0.25s;
     -moz-transition: all 0.25s ease-in-out 0.25s;
       -o-transition: all 0.25s ease-in-out 0.25s;
          transition: all 0.25s ease-in-out 0.25s;
}
.dsk-supported .step {
  width: 400px;
  position: relative;
}
.dsk-supported .dsk-nav {
  position: absolute;
  top: 30%;
  right: 10px;
  width: 30px;
}
.dsk-supported .dsk-nav span {
  background: url("img/prev.png") no-repeat center center rgba(255,255,255,0.3);
  -moz-border-radius: 3px;
       border-radius: 3px;
  -moz-box-shadow: 0 1px rgba(255,255,255,0.25) inset;
       box-shadow: 0 1px rgba(255,255,255,0.25) inset;
  cursor: pointer;
  display: inline-block;
  width: 30px;
  height: 30px;
  margin: 0 1px;
  -webkit-transition: background-color 0.3s ease-in;
     -moz-transition: background-color 0.3s ease-in;
       -o-transition: background-color 0.3s ease-in;
          transition: background-color 0.3s ease-in;
}
.dsk-supported .dsk-nav span:hover {
  background-color: rgba(255,255,255,0.5);
}
.dsk-supported .dsk-nav .dsk-pre {
  -moz-border-radius: 3px 0 0 3px;
       border-radius: 3px 0 0 3px;
}
.dsk-supported .dsk-nav .dsk-next {
  -moz-border-radius: 0 3px 3px 0;
       border-radius: 0 3px 3px 0;
  background-image: url("img/next.png");
}
.dsk-supported .dsk-nav .dsk-autoplay {
  background-image: url("img/play.png");
}
.dsk-supported .dsk-nav .playing {
  background-image: url("img/pause.png");
}
.dsk-supported .dsk-content {
  position: absolute;
  top: -550px;
  min-height: 600px;
  width: 800px;
  left: -200px;
  opacity: 0;
  filter: alpha(opacity=0);
  display: table;
}
.dsk-supported .no-image {
  text-align: center;
}
.dsk-supported .dsk-info {
  display: table-cell;
  vertical-align: middle;
  padding-right: 20px;
  width: 50%;
}
.dsk-supported .dsk-info .date__heading {
  color: #333;
  margin: 0 0 20px 0;
  font-weight: normal;
}
.dsk-supported .dsk-info p {
  color: #333;
  font-size: 25px;
  font-size: 1.25rem;
  margin: 0;
}
.dsk-supported .dsk-year-info {
  font-size: 24px;
  padding: 10px;
}
.dsk-supported img {
  width: 100%;
  height: auto;
}
.dsk-supported .media {
  display: table-cell;
  vertical-align: middle;
  height: 500px;
  width: 50%;
}
.dsk-fullscreen {
  width: 100%;
  height: 100%;
}
.footer-timeline {
  padding-top: 40px;
  padding-top: 2rem;
  position: absolute;
  bottom: 30px;
  bottom: 1.5rem;
  left: 50%;
  -webkit-transform: translateX(-50%);
     -moz-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
       -o-transform: translateX(-50%);
          transform: translateX(-50%);
}
.footer-timeline p {
  font-size: 11px;
  color: #fff;
  text-align: right;
}
#step-0 p {
  display: block;
}
#step-0 .mobile-only {
  display: none;
}
#back-to-top {
  display: none;
}
.read-more-link {
  color: #134a3b;
  fill: #134a3b;
}
.read-more-link > .icon--ei-external-link {
  left: -5px;
}
.read-more-link:hover {
  fill: #455652;
}
.icon {
  position: relative;
  display: inline-block;
  width: 25px;
  height: 25px;
  overflow: hidden;
}
.icon__cnt {
  width: 100%;
  height: 100%;
  background: inherit;
  fill: inherit;
  -webkit-transform: translateX(0);
     -moz-transform: translateX(0);
       -o-transform: translateX(0);
          transform: translateX(0);
  -ms-transform: translate(0.5px, -0.3px);
}
.icon--m {
  width: 50px;
  height: 50px;
}
.icon--l {
  width: 100px;
  height: 100px;
}
.icon--xl {
  width: 150px;
  height: 150px;
}
.icon--xxl {
  width: 200px;
  height: 200px;
}
.icon__spinner {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.icon--ei-spinner .icon__spinner,
.icon--ei-spinner-2 .icon__spinner {
  -webkit-animation: spin 1s steps(12) infinite;
     -moz-animation: spin 1s steps(12) infinite;
       -o-animation: spin 1s steps(12) infinite;
          animation: spin 1s steps(12) infinite;
}
.icon--ei-spinner-3 .icon__spinner {
  -webkit-animation: spin 1.5s linear infinite;
     -moz-animation: spin 1.5s linear infinite;
       -o-animation: spin 1.5s linear infinite;
          animation: spin 1.5s linear infinite;
}
.icon--ei-sc-facebook {
  fill: #267e64;
}
.icon--ei-sc-github {
  fill: #267e64;
}
.icon--ei-sc-google-plus {
  fill: #267e64;
}
.icon--ei-sc-instagram {
  fill: #267e64;
}
.icon--ei-sc-linkedin {
  fill: #267e64;
}
.icon--ei-sc-odnoklassniki {
  fill: #267e64;
}
.icon--ei-sc-skype {
  fill: #267e64;
}
.icon--ei-sc-soundcloud {
  fill: #267e64;
}
.icon--ei-sc-tumblr {
  fill: #267e64;
}
.icon--ei-sc-twitter {
  fill: #267e64;
}
.icon--ei-sc-vimeo {
  fill: #267e64;
}
.icon--ei-sc-vk {
  fill: #267e64;
}
.icon--ei-sc-youtube {
  fill: #267e64;
}
.icon--ei-navicon {
  fill: #267e64;
}
@-moz-keyframes spin {
  100% {
    -moz-transform: rotate(360deg);
         transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@-o-keyframes spin {
  100% {
    -o-transform: rotate(360deg);
       transform: rotate(360deg);
  }
}
@keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
       -moz-transform: rotate(360deg);
         -o-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.mfp-bg {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1042;
  overflow: hidden;
  position: fixed;
  background: #0b0b0b;
  opacity: 0.8;
  filter: alpha(opacity=80);
}
.mfp-wrap {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1043;
  position: fixed;
  outline: none !important;
  -webkit-backface-visibility: hidden;
}
.mfp-container {
  text-align: center;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  padding: 0 8px;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.mfp-container:before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}
.mfp-align-top .mfp-container:before {
  display: none;
}
.mfp-content {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  margin: 0 auto;
  text-align: left;
  z-index: 1045;
}
.mfp-inline-holder .mfp-content,
.mfp-ajax-holder .mfp-content {
  width: 100%;
  cursor: auto;
}
.mfp-ajax-cur {
  cursor: progress;
}
.mfp-zoom-out-cur,
.mfp-zoom-out-cur .mfp-image-holder .mfp-close {
  cursor: -moz-zoom-out;
  cursor: -webkit-zoom-out;
  cursor: zoom-out;
}
.mfp-zoom {
  cursor: pointer;
  cursor: -webkit-zoom-in;
  cursor: -moz-zoom-in;
  cursor: zoom-in;
}
.mfp-auto-cursor .mfp-content {
  cursor: auto;
}
.mfp-close,
.mfp-arrow,
.mfp-preloader,
.mfp-counter {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none;
}
.mfp-loading.mfp-figure {
  display: none;
}
.mfp-hide {
  display: none !important;
}
.mfp-preloader {
  color: #ccc;
  position: absolute;
  top: 50%;
  width: auto;
  text-align: center;
  margin-top: -0.8em;
  left: 8px;
  right: 8px;
  z-index: 1044;
}
.mfp-preloader a {
  color: #ccc;
}
.mfp-preloader a:hover {
  color: #fff;
}
.mfp-s-ready .mfp-preloader {
  display: none;
}
.mfp-s-error .mfp-content {
  display: none;
}
button.mfp-close,
button.mfp-arrow {
  overflow: visible;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none;
  display: block;
  outline: none;
  padding: 0;
  z-index: 1046;
  -moz-box-shadow: none;
       box-shadow: none;
}
button::-moz-focus-inner {
  padding: 0;
  border: 0;
}
.mfp-close {
  width: 44px;
  height: 44px;
  line-height: 44px;
  position: absolute;
  right: 0;
  top: 0;
  text-decoration: none;
  text-align: center;
  opacity: 0.65;
  filter: alpha(opacity=65);
  padding: 0 0 18px 10px;
  color: #fff;
  font-style: normal;
  font-size: 28px;
  font-family: Arial, Baskerville, monospace;
}
.mfp-close:hover,
.mfp-close:focus {
  opacity: 1;
  filter: alpha(opacity=100);
}
.mfp-close:active {
  top: 1px;
}
.mfp-close-btn-in .mfp-close {
  color: #333;
}
.mfp-image-holder .mfp-close,
.mfp-iframe-holder .mfp-close {
  color: #fff;
  right: -6px;
  text-align: right;
  padding-right: 6px;
  width: 100%;
}
.mfp-counter {
  position: absolute;
  top: 0;
  right: 0;
  color: #ccc;
  font-size: 12px;
  line-height: 18px;
  white-space: nowrap;
}
.mfp-arrow {
  position: absolute;
  opacity: 0.65;
  filter: alpha(opacity=65);
  margin: 0;
  top: 50%;
  margin-top: -55px;
  padding: 0;
  width: 90px;
  height: 110px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}
.mfp-arrow:active {
  margin-top: -54px;
}
.mfp-arrow:hover,
.mfp-arrow:focus {
  opacity: 1;
  filter: alpha(opacity=100);
}
.mfp-arrow:before,
.mfp-arrow:after,
.mfp-arrow .mfp-b,
.mfp-arrow .mfp-a {
  content: '';
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  left: 0;
  top: 0;
  margin-top: 35px;
  margin-left: 35px;
  border: medium inset transparent;
}
.mfp-arrow:after,
.mfp-arrow .mfp-a {
  border-top-width: 13px;
  border-bottom-width: 13px;
  top: 8px;
}
.mfp-arrow:before,
.mfp-arrow .mfp-b {
  border-top-width: 21px;
  border-bottom-width: 21px;
  opacity: 0.7;
  filter: alpha(opacity=70);
}
.mfp-arrow-left {
  left: 0;
}
.mfp-arrow-left:after,
.mfp-arrow-left .mfp-a {
  border-right: 17px solid #fff;
  margin-left: 31px;
}
.mfp-arrow-left:before,
.mfp-arrow-left .mfp-b {
  margin-left: 25px;
  border-right: 27px solid #3f3f3f;
}
.mfp-arrow-right {
  right: 0;
}
.mfp-arrow-right:after,
.mfp-arrow-right .mfp-a {
  border-left: 17px solid #fff;
  margin-left: 39px;
}
.mfp-arrow-right:before,
.mfp-arrow-right .mfp-b {
  border-left: 27px solid #3f3f3f;
}
.mfp-iframe-holder {
  padding-top: 40px;
  padding-bottom: 40px;
}
.mfp-iframe-holder .mfp-content {
  line-height: 0;
  width: 100%;
  max-width: 900px;
}
.mfp-iframe-holder .mfp-close {
  top: -40px;
}
.mfp-iframe-scaler {
  width: 100%;
  height: 0;
  overflow: hidden;
  padding-top: 56.25%;
}
.mfp-iframe-scaler iframe {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -moz-box-shadow: 0 0 8px rgba(0,0,0,0.6);
       box-shadow: 0 0 8px rgba(0,0,0,0.6);
  background: #000;
}
img.mfp-img {
  width: auto;
  max-width: 100%;
  height: auto;
  display: block;
  line-height: 0;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 40px 0 40px;
  margin: 0 auto;
}
.mfp-figure {
  line-height: 0;
}
.mfp-figure:after {
  content: '';
  position: absolute;
  left: 0;
  top: 40px;
  bottom: 40px;
  display: block;
  right: 0;
  width: auto;
  height: auto;
  z-index: -1;
  -moz-box-shadow: 0 0 8px rgba(0,0,0,0.6);
       box-shadow: 0 0 8px rgba(0,0,0,0.6);
  background: #444;
}
.mfp-figure small {
  color: #bdbdbd;
  display: block;
  font-size: 12px;
  line-height: 14px;
}
.mfp-figure figure {
  margin: 0;
}
.mfp-bottom-bar {
  margin-top: -36px;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  cursor: auto;
}
.mfp-title {
  text-align: left;
  line-height: 18px;
  color: #f3f3f3;
  word-wrap: break-word;
  padding-right: 36px;
}
.mfp-image-holder .mfp-content {
  max-width: 100%;
}
.mfp-gallery .mfp-image-holder .mfp-figure {
  cursor: pointer;
}
.mfp-ie7 .mfp-img {
  padding: 0;
}
.mfp-ie7 .mfp-bottom-bar {
  width: 600px;
  left: 50%;
  margin-left: -300px;
  margin-top: 5px;
  padding-bottom: 5px;
}
.mfp-ie7 .mfp-container {
  padding: 0;
}
.mfp-ie7 .mfp-content {
  padding-top: 44px;
}
.mfp-ie7 .mfp-close {
  top: 0;
  right: 0;
  padding-top: 0;
}

@media only screen and (max-width: 550px) {
  .header {
    display: block;
  }
  .header__logo--col-4-12 {
    width: 70%;
  }
  .header__social-nav--col-8-12 {
    display: inline-block;
    text-align: center;
    width: 100%;
  }
  .main__heading {
    line-height: 1;
  }
}

@media only screen and (min-width: 400px) and (max-width: 1050px) {
  .header__logo--col-4-12 {
    width: 50%;
  }
  .header__social-nav--col-8-12 {
    display: inline-block;
    width: 100%;
  }
  .banner-splash {
    height: 250px;
  }
  .footer-timeline {
    bottom: 0.5rem;
  }
}

@media only screen and (max-width: 650px) {
  .banner-splash {
    height: 150px;
  }
}

@media only screen and (max-width: 890px) {
  .main__sidebar-content--col-2-12 {
    width: 40%;
  }
  .main__content--col-6-12 {
    width: 60%;
  }
}

@media only screen and (max-width: 690px) {
  .main__sidebar-content--col-2-12 {
    display: block;
    width: 100%;
  }
  .main__sidebar-media p {
    display: inline-block;
    width: 33%;
  }
  .main__content--col-6-12 {
    display: block;
    width: 100%;
  }
}

@media only screen and (max-width: 450px) {
  .main__heading {
    text-align: center;
  }
}

@media only screen and (max-width: 725px) {
  .main__heading span {
    display: inline-block;
  }
}

@media only screen and (min-width: 1050px) {
  .dsk-supported .dsk-content {
    top: -550px;
    min-height: 600px;
    width: 1000px;
    left: -300px;
  }
}

@media only screen and (max-width: 400px) {
  .dsk-supported .dsk-content {
    top: -1000px;
  }
  .dsk-supported .dsk-info {
    display: table-row;
  }
  .dsk-supported .media {
    display: table-row;
  }
  .footer-timeline p {
    text-align: center;
  }
  #step-0 p {
    display: none;
  }
  #step-0 .mobile-only {
    display: block;
  }
  #back-to-top {
    display: block;
    position: fixed;
    bottom: 0px;
    right: 0px;
    fill: #134a3b;
  }
}

@media screen, (max-width: 650px) {
  .dsk-supported {
    height: 400px;
  }
}

@media screen and (max-width: 800px) and (orientation: landscape), screen and (max-height: 300px) {
  .mfp-img-mobile .mfp-image-holder {
    padding-left: 0;
    padding-right: 0;
  }
  .mfp-img-mobile img.mfp-img {
    padding: 0;
  }
  .mfp-img-mobile .mfp-figure:after {
    top: 0;
    bottom: 0;
  }
  .mfp-img-mobile .mfp-figure small {
    display: inline;
    margin-left: 5px;
  }
  .mfp-img-mobile .mfp-bottom-bar {
    background: rgba(0,0,0,0.6);
    bottom: 0;
    margin: 0;
    top: auto;
    padding: 3px 5px;
    position: fixed;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  .mfp-img-mobile .mfp-bottom-bar:empty {
    padding: 0;
  }
  .mfp-img-mobile .mfp-counter {
    right: 5px;
    top: 3px;
  }
  .mfp-img-mobile .mfp-close {
    top: 0;
    right: 0;
    width: 35px;
    height: 35px;
    line-height: 35px;
    background: rgba(0,0,0,0.6);
    position: fixed;
    text-align: center;
    padding: 0;
  }
}

@media all and (max-width: 900px) {
  .mfp-arrow {
    -webkit-transform: scale(0.75);
    -moz-transform: scale(0.75);
     -ms-transform: scale(0.75);
      -o-transform: scale(0.75);
         transform: scale(0.75);
  }
  .mfp-arrow-left {
    -webkit-transform-origin: 0;
    -moz-transform-origin: 0;
     -ms-transform-origin: 0;
      -o-transform-origin: 0;
         transform-origin: 0;
  }
  .mfp-arrow-right {
    -webkit-transform-origin: 100%;
    -moz-transform-origin: 100%;
     -ms-transform-origin: 100%;
      -o-transform-origin: 100%;
         transform-origin: 100%;
  }
  .mfp-container {
    padding-left: 6px;
    padding-right: 6px;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2UvYmFzZS9fcmVzZXQuc3R5bCIsInN0eWxlLmNzcyIsIi9zb3VyY2UvYmFzZS9nbG9iYWwuc3R5bCIsIi9zb3VyY2UvYmFzZS9pbWFnZXMuc3R5bCIsIi9zb3VyY2UvYmFzZS9sYXlvdXQuc3R5bCIsIi9zb3VyY2UvYmFzZS90eXBvZ3JhcGh5LnN0eWwiLCIvc291cmNlL21vZHVsZXMvZHJhd2VyLnN0eWwiLCIvc291cmNlL21vZHVsZXMvZm9vdGVyLnN0eWwiLCIvc291cmNlL21vZHVsZXMvc3BsYXNoLnN0eWwiLCIvc291cmNlL21vZHVsZXMvdGltZWxpbmUuc3R5bCIsIi9zb3VyY2UvdmVuZG9yL2V2aWxpY29ucy9ldmlsLWljb25zLnN0eWwiLCIvc291cmNlL3ZlbmRvci9tYWduaWZpYy9tYWduaWZpYy5zdHlsIiwiL3NvdXJjZS9iYXNlL19ydXB0dXJlLnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkVBQUE7QUFRQTtFQUNFLHdCQUFBO0VBQ0EsMkJBQUE7RUFDQSwrQkFBQTtDQ05EO0FEWUQ7RUFDRSxVQUFBO0NDVkQ7QURzQkQ7Ozs7Ozs7Ozs7Ozs7RUFhRSxlQUFBO0NDcEJEO0FEMkJEOzs7O0VBSUUsc0JBQUE7RUFDQSx5QkFBQTtDQ3pCRDtBRGdDRDtFQUNFLGNBQUE7RUFDQSxVQUFBO0NDOUJEO0FEcUNEOztFQUVFLGNBQUE7Q0NuQ0Q7QUQ4Q0Q7RUFDRSw4QkFBQTtDQzVDRDtBRDhDQzs7RUFFRSxXQUFBO0VBQ0Esc0JBQUE7Q0M1Q0g7QURxREQ7RUFDRSwwQkFBQTtDQ25ERDtBRHlERDs7RUFFRSxrQkFBQTtDQ3ZERDtBRDZERDtFQUNFLG1CQUFBO0NDM0REO0FEMEVEO0VBQ0UsaUJBQUE7RUFDQSxZQUFBO0NDeEVEO0FEOEVEO0VBQ0UsZ0JBQUE7RUFBQSxtQkFBQTtDQzVFRDtBRGtGRDs7RUFFRSxnQkFBQTtFQUFBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7Q0NoRkQ7QURrRkQ7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QUFBO0lBQ0EsWUFBQTtJQUNBLGFBQUE7SUFDQSxrQkFBQTtJQUNBLDRCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxtQkFBQTtJQUNBLFdBQUE7R1ZrM0JEO0NBQ0Y7O0FVaDNCK0I7RUFDOUI7SUFDRSwrQkFBQTtJQUNBLDRCQUFBO0tBQUEsMkJBQUE7TUFBQSwwQkFBQTtTQUFBLHVCQUFBO0dWazNCRDtFVWgzQkQ7SUFDRSw0QkFBQTtJQUNBLHlCQUFBO0tBQUEsd0JBQUE7TUFBQSx1QkFBQTtTQUFBLG9CQUFBO0dWazNCRDtFVWgzQkQ7SUFDRSwrQkFBQTtJQUNBLDRCQUFBO0tBQUEsMkJBQUE7TUFBQSwwQkFBQTtTQUFBLHVCQUFBO0dWazNCRDtFVWgzQkQ7SUFDRSxrQkFBQTtJQUNBLG1CQUFBO0dWazNCRDtDQUNGOztBQXVCRCx5aWhFQUF5aWhFIiwiZmlsZSI6Ijxuby1vdXRwdXQ+Iiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5cbmh0bWxcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWYgLy8gMVxuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJSAvLyAyXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJSAvLyAyXG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHlcbiAgbWFyZ2luOiAwXG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5XG4gIGRpc3BsYXk6IGJsb2NrXG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW9cbiAgZGlzcGxheTogaW5saW5lLWJsb2NrIC8vIDFcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lIC8vIDJcblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSlcbiAgZGlzcGxheTogbm9uZVxuICBoZWlnaHQ6IDBcblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cblxuW2hpZGRlbl0sXG50ZW1wbGF0ZVxuICBkaXNwbGF5OiBub25lXG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpblxuICogICAgYW4gYWN0aXZlL2hvdmVyIHN0YXRlLlxuICovXG5cbmFcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgLy8gMVxuXG4gICY6YWN0aXZlLFxuICAmOmhvdmVyXG4gICAgb3V0bGluZTogMCAvLyAyXG4gICAgdGV4dC1kZWNvcmF0aW9uIG5vbmVcblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdXG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWRcblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZ1xuICBmb250LXdlaWdodDogYm9sZFxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm5cbiAgZm9udC1zdHlsZTogaXRhbGljXG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbi8vIGgxXG4vLyAgIGZvbnQtc2l6ZTogMmVtXG4vLyAgIG1hcmdpbjogMC42N2VtIDBcblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmtcbiAgYmFja2dyb3VuZDogI2ZmMFxuICBjb2xvcjogIzAwMFxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsXG4gIGZvbnQtc2l6ZTogLjc1cmVtXG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cFxuICBmb250LXNpemU6IC41cmVtXG4gIGxpbmUtaGVpZ2h0OiAwXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmVcblxuc3VwXG4gIHRvcDogLTAuNXJlbVxuXG5zdWJcbiAgYm90dG9tOiAtMC4yNXJlbVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZ1xuICBib3JkZXI6IDBcblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KVxuICBvdmVyZmxvdzogaGlkZGVuXG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlXG4gIG1hcmdpbjogMWVtIDQwcHhcblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHJcbiAgYm94LXNpemluZzogY29udGVudC1ib3hcbiAgaGVpZ2h0OiAwXG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlXG4gIG92ZXJmbG93OiBhdXRvXG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZVxuICBmb250LXNpemU6IDFlbVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhXG4gIGNvbG9yOiBpbmhlcml0IC8vIDFcbiAgZm9udDogaW5oZXJpdCAvLyAyXG4gIG1hcmdpbjogMCAvLyAzXG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxuYnV0dG9uXG4gIG92ZXJmbG93OiB2aXNpYmxlXG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0XG4gIHRleHQtdHJhbnNmb3JtOiBub25lXG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8vIDFcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl1cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b24gLy8gMlxuICBjdXJzb3I6IHBvaW50ZXIgLy8gM1xuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdXG4gIGN1cnNvcjogZGVmYXVsdFxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lclxuICBib3JkZXI6IDBcbiAgcGFkZGluZzogMFxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWxcblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXVxuICBib3gtc2l6aW5nOiBib3JkZXItYm94IC8vIDFcbiAgcGFkZGluZzogMCAvLyAyXG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b25cbiAgaGVpZ2h0OiBhdXRvXG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl1cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQgLy8gMVxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveCAvLyAyXG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb25cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lXG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzBcbiAgbWFyZ2luOiAwIDJweFxuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kXG4gIGJvcmRlcjogMCAvLyAxXG4gIHBhZGRpbmc6IDAgLy8gMlxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxudGV4dGFyZWFcbiAgb3ZlcmZsb3c6IGF1dG9cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5vcHRncm91cFxuICBmb250LXdlaWdodDogYm9sZFxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG5cbnRhYmxlXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2VcbiAgYm9yZGVyLXNwYWNpbmc6IDBcblxudGQsXG50aFxuICBwYWRkaW5nOiAwXG4iLCIvKiBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbn1cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogMC41cmVtO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5zdXAge1xuICB0b3A6IC0wLjVyZW07XG59XG5zdWIge1xuICBib3R0b206IC0wLjI1cmVtO1xufVxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIG1hcmdpbjogMDtcbn1cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMDtcbn1cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG59XG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5bY2xhc3MqPSdfX2l0ZW1zJ10ge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG59XG5pbWcsXG5pZnJhbWUsXG5lbWJlZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbn1cbltjbGFzcyo9J2NvbC0nXSB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5bY2xhc3MqPSdfX2NvbnRhaW5lciddIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogMTIwMHB4O1xufVxuW2NsYXNzKj1jb2wtMS0xMl0ge1xuICB3aWR0aDogOC4zMzMzMzMzMzMzMzMzMzIlO1xufVxuW2NsYXNzKj1jb2wtMi0xMl0ge1xuICB3aWR0aDogMTYuNjY2NjY2NjY2NjY2NjY0JTtcbn1cbltjbGFzcyo9Y29sLTMtMTJdIHtcbiAgd2lkdGg6IDI1JTtcbn1cbltjbGFzcyo9Y29sLTQtMTJdIHtcbiAgd2lkdGg6IDMzLjMzMzMzMzMzMzMzMzMzJTtcbn1cbltjbGFzcyo9Y29sLTUtMTJdIHtcbiAgd2lkdGg6IDQxLjY2NjY2NjY2NjY2NjY3JTtcbn1cbltjbGFzcyo9Y29sLTYtMTJdIHtcbiAgd2lkdGg6IDUwJTtcbn1cbltjbGFzcyo9Y29sLTctMTJdIHtcbiAgd2lkdGg6IDU4LjMzMzMzMzMzMzMzMzMzNiU7XG59XG5bY2xhc3MqPWNvbC04LTEyXSB7XG4gIHdpZHRoOiA2Ni42NjY2NjY2NjY2NjY2NiU7XG59XG5bY2xhc3MqPWNvbC05LTEyXSB7XG4gIHdpZHRoOiA3NSU7XG59XG5bY2xhc3MqPWNvbC0xMC0xMl0ge1xuICB3aWR0aDogODMuMzMzMzMzMzMzMzMzMzQlO1xufVxuW2NsYXNzKj1jb2wtMTEtMTJdIHtcbiAgd2lkdGg6IDkxLjY2NjY2NjY2NjY2NjY2JTtcbn1cbltjbGFzcyo9Y29sLTEyLTEyXSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnRlc3QtLWNvbC0yLTEyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwMDtcbn1cbmh0bWwge1xuICBmb250LXNpemU6IDIwcHg7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuYm9keSB7XG4gIGNvbG9yOiAjNjY2O1xuICBmb250LWZhbWlseTogTmV3cyBDeWNsZSAsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbjogMDtcbn1cbltjbGFzcyo9J19faGVhZGluZyddIHtcbiAgY29sb3I6ICMyNjdlNjQ7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5ICwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMjY3ZTY0O1xufVxuYTpob3ZlciB7XG4gIGNvbG9yOiAjNDU1NjUyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5bY2xhc3MqPSdfX2J1dHRvbiddIHtcbiAgYm9yZGVyOiAycHggc29saWQgIzI2N2U2NDtcbiAgY29sb3I6ICMyNjdlNjQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XG59XG5bY2xhc3MqPSdfX2J1dHRvbiddOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI2N2U2NDtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbltjbGFzcyo9J2NvbnRlbnQnXSA+ICoge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG59XG4jZHJhd2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzNGEzYjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAyMDBweDtcbiAgei1pbmRleDogMjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMHB4KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXMgZWFzZS1pbi1vdXQ7XG59XG4jZHJhd2VyLnNsaWRlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xufVxuI2RyYXdlciBhIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmZmY7XG4gIGNvbG9yOiAjZmZmO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMC43NXJlbSAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4jZHJhd2VyIGE6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDU1NjUyO1xuICBjb2xvcjogI2ZmZjtcbn1cbiN0b2dnbGUge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIHRyYW5zaXRpb246IG1hcmdpbi1yaWdodCAwLjVzIGVhc2UtaW4tb3V0O1xufVxuI3RvZ2dsZS5tb3ZlIHtcbiAgbWFyZ2luLXJpZ2h0OiAyMDBweDtcbn1cbi5mb290ZXIge1xuICBwYWRkaW5nLXRvcDogMnJlbTtcbn1cbi5mb290ZXIgcCB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgY29sb3I6ICM5OTk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5zcGxhc2gtcGFnZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY1ZTQ7XG59XG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogdGFibGU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDFyZW0gMnJlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4uaGVhZGVyX19sb2dvLS1jb2wtNC0xMiB7XG4gIHdpZHRoOiAyMCU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQwMHB4KSBhbmQgKG1heC13aWR0aDogMTA1MHB4KSB7XG4gIC5oZWFkZXJfX2xvZ28tLWNvbC00LTEyIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gIC5oZWFkZXJfX2xvZ28tLWNvbC00LTEyIHtcbiAgICB3aWR0aDogNzAlO1xuICB9XG59XG4uaGVhZGVyX19zb2NpYWwtbmF2LS1jb2wtOC0xMiB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MDBweCkgYW5kIChtYXgtd2lkdGg6IDEwNTBweCkge1xuICAuaGVhZGVyX19zb2NpYWwtbmF2LS1jb2wtOC0xMiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gIC5oZWFkZXJfX3NvY2lhbC1uYXYtLWNvbC04LTEyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4uYmFubmVyLXNwbGFzaCB7XG4gIGJhY2tncm91bmQ6IHVybChcImltZy9Db21tZXJjZV8xNTBfaGVyby0xLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiAzNTBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQwMHB4KSBhbmQgKG1heC13aWR0aDogMTA1MHB4KSB7XG4gIC5iYW5uZXItc3BsYXNoIHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5iYW5uZXItc3BsYXNoIHtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICB9XG59XG4ubWFpbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY1ZTQ7XG4gIHBhZGRpbmctdG9wOiAxLjVyZW07XG4gIHdpZHRoOiAxMDAlO1xufVxuLm1haW5fX3NpZGViYXItY29udGVudC0tY29sLTItMTIge1xuICBwYWRkaW5nOiAwIDFyZW07XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDg5MHB4KSB7XG4gIC5tYWluX19zaWRlYmFyLWNvbnRlbnQtLWNvbC0yLTEyIHtcbiAgICB3aWR0aDogNDAlO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY5MHB4KSB7XG4gIC5tYWluX19zaWRlYmFyLWNvbnRlbnQtLWNvbC0yLTEyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLm1haW5fX3NpZGViYXItbWVkaWEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY5MHB4KSB7XG4gIC5tYWluX19zaWRlYmFyLW1lZGlhIHAge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMzMlO1xuICB9XG59XG4ubWFpbl9fY29udGVudC0tY29sLTYtMTIge1xuICBwYWRkaW5nOiAwIDFyZW07XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDg5MHB4KSB7XG4gIC5tYWluX19jb250ZW50LS1jb2wtNi0xMiB7XG4gICAgd2lkdGg6IDYwJTtcbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2OTBweCkge1xuICAubWFpbl9fY29udGVudC0tY29sLTYtMTIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4ubWFpbl9faGVhZGluZyB7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBmb250LXNpemU6IDJyZW07XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gIC5tYWluX19oZWFkaW5nIHtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NTBweCkge1xuICAubWFpbl9faGVhZGluZyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcyNXB4KSB7XG4gIC5tYWluX19oZWFkaW5nIHNwYW4ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuLm1haW5fX2J1dHRvbiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMyNjdlNjQ7XG4gIGNvbG9yOiAjMjY3ZTY0O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuLm1haW5fX2J1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNjdlNjQ7XG4gIGNvbG9yOiAjZWNlZWU2O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5odG1sIHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuLnRpbWVsaW5lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG59XG4uZHNrLW5vdC1zdXBwb3J0ZWQsXG4uZHNrLXN1cHBvcnRlZCB7XG4gIGJhY2tncm91bmQ6ICNhZDlkNzE7XG4gIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudChlbGxpcHNlIGF0IGNlbnRlciwgI2M5YzE5MCAwJSwgI2FkOWQ3MSA1NSUsICM4OTgyNWMgMTAwJSk7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlO1xufVxuLmRzay1ub3Qtc3VwcG9ydGVkIHtcbiAgY29sb3I6ICMzMzM7XG4gIHBhZGRpbmc6IDFweCAwO1xufVxuLmRzay1ub3Qtc3VwcG9ydGVkIC5zdGVwIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuLmRzay1ub3Qtc3VwcG9ydGVkIC5kc2stY2lyY2xlLWRhdGUge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBmaWx0ZXI6IG5vbmU7XG4gIF9maWx0ZXI6IG5vbmU7XG4gIGZvbnQtZmFtaWx5OiBQbGF5ZmFpciBEaXNwbGF5ICwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4uZHNrLW5vdC1zdXBwb3J0ZWQgLmRzay1pbmZvIHtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG59XG4uZHNrLW5vdC1zdXBwb3J0ZWQgLmRzay1pbmZvIGgyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5kc2stbm90LXN1cHBvcnRlZCAuZHNrLWNpcmNsZSB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC44KTtcbiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMCwwLDAsMC4yKTtcbn1cbi5kc2stc3VwcG9ydGVkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiAxMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGhlaWdodDogNTUwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uZHNrLXN1cHBvcnRlZCAuZHNrLWxpbmV3cmFwcGVyIHtcbiAgaGVpZ2h0OiA2cmVtO1xuICBib3R0b206IDIwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LDI1NSwyNTUsMC4zKTtcbiAgYm94LXNoYWRvdzogMCAxcHggcmdiYSgyNTUsMjU1LDI1NSwwLjE1KSBpbnNldDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDIwJTtcbiAgY29sb3I6ICNmZmY7XG59XG4uZHNrLXN1cHBvcnRlZCAuZHNrLXdyYXBwZXIge1xuICBvdXRsaW5lOiBub25lO1xuICBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50O1xufVxuLmRzay1zdXBwb3J0ZWQgLmRzay1jaXJjbGUge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJveC1zaGFkb3c6IDAgMCAycHggcmdiYSgwLDAsMCwwLjEpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHdpZHRoOiAxcmVtO1xuICBoZWlnaHQ6IDFyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogYWxsIDFzIGVhc2UtaW47XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuLmRzay1zdXBwb3J0ZWQgLmRzay1jaXJjbGUtZGF0ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LWZhbWlseTogUGxheWZhaXIgRGlzcGxheSAsIHNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMXMgZWFzZS1pbjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xcmVtKTtcbn1cbi5kc2stc3VwcG9ydGVkIC5hY3RpdmUgLmRzay1jaXJjbGUge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xufVxuLmRzay1zdXBwb3J0ZWQgLmFjdGl2ZSAuZHNrLWNvbnRlbnQge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2l0aW9uOiBhbGwgMHMgZWFzZS1pbi1vdXQgMHM7XG59XG4uZHNrLXN1cHBvcnRlZCAuYWN0aXZlIC5kc2stY2lyY2xlLWRhdGUge1xuICBjb2xvcjogIzMzMztcbn1cbi5kc2stc3VwcG9ydGVkIC56b29tIC5kc2stY29udGVudCB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgdHJhbnNpdGlvbjogYWxsIDBzIGVhc2UtaW4tb3V0IDBzO1xufVxuLmRzay1zdXBwb3J0ZWQgLnpvb20uYWN0aXZlIC5kc2stY29udGVudCB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dCAwLjI1cztcbn1cbi5kc2stc3VwcG9ydGVkIC5mYWRlIC5kc2stY29udGVudCB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIHRyYW5zaXRpb246IGFsbCAwcyBlYXNlLWluLW91dCAwcztcbn1cbi5kc2stc3VwcG9ydGVkIC5mYWRlLmFjdGl2ZSAuZHNrLWNvbnRlbnQge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQgMC4yNXM7XG59XG4uZHNrLXN1cHBvcnRlZCAuc3RlcCB7XG4gIHdpZHRoOiA0MDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmRzay1zdXBwb3J0ZWQgLmRzay1uYXYge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMzAlO1xuICByaWdodDogMTBweDtcbiAgd2lkdGg6IDMwcHg7XG59XG4uZHNrLXN1cHBvcnRlZCAuZHNrLW5hdiBzcGFuIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiaW1nL3ByZXYucG5nXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIHJnYmEoMjU1LDI1NSwyNTUsMC4zKTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3gtc2hhZG93OiAwIDFweCByZ2JhKDI1NSwyNTUsMjU1LDAuMjUpIGluc2V0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMzBweDtcbiAgbWFyZ2luOiAwIDFweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW47XG59XG4uZHNrLXN1cHBvcnRlZCAuZHNrLW5hdiBzcGFuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjUpO1xufVxuLmRzay1zdXBwb3J0ZWQgLmRzay1uYXYgLmRzay1wcmUge1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbn1cbi5kc2stc3VwcG9ydGVkIC5kc2stbmF2IC5kc2stbmV4dCB7XG4gIGJvcmRlci1yYWRpdXM6IDAgM3B4IDNweCAwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJpbWcvbmV4dC5wbmdcIik7XG59XG4uZHNrLXN1cHBvcnRlZCAuZHNrLW5hdiAuZHNrLWF1dG9wbGF5IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaW1nL3BsYXkucG5nXCIpO1xufVxuLmRzay1zdXBwb3J0ZWQgLmRzay1uYXYgLnBsYXlpbmcge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJpbWcvcGF1c2UucG5nXCIpO1xufVxuLmRzay1zdXBwb3J0ZWQgLmRzay1jb250ZW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC01NTBweDtcbiAgbWluLWhlaWdodDogNjAwcHg7XG4gIHdpZHRoOiA4MDBweDtcbiAgbGVmdDogLTIwMHB4O1xuICBvcGFjaXR5OiAwO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTA1MHB4KSB7XG4gIC5kc2stc3VwcG9ydGVkIC5kc2stY29udGVudCB7XG4gICAgdG9wOiAtNTUwcHg7XG4gICAgbWluLWhlaWdodDogNjAwcHg7XG4gICAgd2lkdGg6IDEwMDBweDtcbiAgICBsZWZ0OiAtMzAwcHg7XG4gIH1cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgLmRzay1zdXBwb3J0ZWQgLmRzay1jb250ZW50IHtcbiAgICB0b3A6IC0xMDAwcHg7XG4gIH1cbn1cbi5kc2stc3VwcG9ydGVkIC5uby1pbWFnZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5kc2stc3VwcG9ydGVkIC5kc2staW5mbyB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHdpZHRoOiA1MCU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIC5kc2stc3VwcG9ydGVkIC5kc2staW5mbyB7XG4gICAgZGlzcGxheTogdGFibGUtcm93O1xuICB9XG59XG4uZHNrLXN1cHBvcnRlZCAuZHNrLWluZm8gLmRhdGVfX2hlYWRpbmcge1xuICBjb2xvcjogIzMzMztcbiAgbWFyZ2luOiAwIDAgMjBweCAwO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuLmRzay1zdXBwb3J0ZWQgLmRzay1pbmZvIHAge1xuICBjb2xvcjogIzMzMztcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBtYXJnaW46IDA7XG59XG4uZHNrLXN1cHBvcnRlZCAuZHNrLXllYXItaW5mbyB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgcGFkZGluZzogMTBweDtcbn1cbi5kc2stc3VwcG9ydGVkIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG4uZHNrLXN1cHBvcnRlZCAubWVkaWEge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBoZWlnaHQ6IDUwMHB4O1xuICB3aWR0aDogNTAlO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAuZHNrLXN1cHBvcnRlZCAubWVkaWEge1xuICAgIGRpc3BsYXk6IHRhYmxlLXJvdztcbiAgfVxufVxuLmRzay1mdWxsc2NyZWVuIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbkBtZWRpYSBzY3JlZW4sIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5kc2stc3VwcG9ydGVkIHtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICB9XG59XG4uZm9vdGVyLXRpbWVsaW5lIHtcbiAgcGFkZGluZy10b3A6IDJyZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAxLjVyZW07XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MDBweCkgYW5kIChtYXgtd2lkdGg6IDEwNTBweCkge1xuICAuZm9vdGVyLXRpbWVsaW5lIHtcbiAgICBib3R0b206IDAuNXJlbTtcbiAgfVxufVxuLmZvb3Rlci10aW1lbGluZSBwIHtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIC5mb290ZXItdGltZWxpbmUgcCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG4jc3RlcC0wIHAge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgI3N0ZXAtMCBwIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4jc3RlcC0wIC5tb2JpbGUtb25seSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICNzdGVwLTAgLm1vYmlsZS1vbmx5IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuI2JhY2stdG8tdG9wIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgI2JhY2stdG8tdG9wIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgcmlnaHQ6IDBweDtcbiAgICBmaWxsOiAjMTM0YTNiO1xuICB9XG59XG4ucmVhZC1tb3JlLWxpbmsge1xuICBjb2xvcjogIzEzNGEzYjtcbiAgZmlsbDogIzEzNGEzYjtcbn1cbi5yZWFkLW1vcmUtbGluayA+IC5pY29uLS1laS1leHRlcm5hbC1saW5rIHtcbiAgbGVmdDogLTVweDtcbn1cbi5yZWFkLW1vcmUtbGluazpob3ZlciB7XG4gIGZpbGw6ICM0NTU2NTI7XG59XG4uaWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMjVweDtcbiAgaGVpZ2h0OiAyNXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmljb25fX2NudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG4gIGZpbGw6IGluaGVyaXQ7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKDAuNXB4LCAtMC4zcHgpO1xufVxuLmljb24tLW0ge1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuLmljb24tLWwge1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMTAwcHg7XG59XG4uaWNvbi0teGwge1xuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogMTUwcHg7XG59XG4uaWNvbi0teHhsIHtcbiAgd2lkdGg6IDIwMHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xufVxuLmljb25fX3NwaW5uZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5pY29uLS1laS1zcGlubmVyIC5pY29uX19zcGlubmVyLFxuLmljb24tLWVpLXNwaW5uZXItMiAuaWNvbl9fc3Bpbm5lciB7XG4gIGFuaW1hdGlvbjogc3BpbiAxcyBzdGVwcygxMikgaW5maW5pdGU7XG59XG4uaWNvbi0tZWktc3Bpbm5lci0zIC5pY29uX19zcGlubmVyIHtcbiAgYW5pbWF0aW9uOiBzcGluIDEuNXMgbGluZWFyIGluZmluaXRlO1xufVxuLmljb24tLWVpLXNjLWZhY2Vib29rIHtcbiAgZmlsbDogIzI2N2U2NDtcbn1cbi5pY29uLS1laS1zYy1naXRodWIge1xuICBmaWxsOiAjMjY3ZTY0O1xufVxuLmljb24tLWVpLXNjLWdvb2dsZS1wbHVzIHtcbiAgZmlsbDogIzI2N2U2NDtcbn1cbi5pY29uLS1laS1zYy1pbnN0YWdyYW0ge1xuICBmaWxsOiAjMjY3ZTY0O1xufVxuLmljb24tLWVpLXNjLWxpbmtlZGluIHtcbiAgZmlsbDogIzI2N2U2NDtcbn1cbi5pY29uLS1laS1zYy1vZG5va2xhc3NuaWtpIHtcbiAgZmlsbDogIzI2N2U2NDtcbn1cbi5pY29uLS1laS1zYy1za3lwZSB7XG4gIGZpbGw6ICMyNjdlNjQ7XG59XG4uaWNvbi0tZWktc2Mtc291bmRjbG91ZCB7XG4gIGZpbGw6ICMyNjdlNjQ7XG59XG4uaWNvbi0tZWktc2MtdHVtYmxyIHtcbiAgZmlsbDogIzI2N2U2NDtcbn1cbi5pY29uLS1laS1zYy10d2l0dGVyIHtcbiAgZmlsbDogIzI2N2U2NDtcbn1cbi5pY29uLS1laS1zYy12aW1lbyB7XG4gIGZpbGw6ICMyNjdlNjQ7XG59XG4uaWNvbi0tZWktc2Mtdmsge1xuICBmaWxsOiAjMjY3ZTY0O1xufVxuLmljb24tLWVpLXNjLXlvdXR1YmUge1xuICBmaWxsOiAjMjY3ZTY0O1xufVxuLmljb24tLWVpLW5hdmljb24ge1xuICBmaWxsOiAjMjY3ZTY0O1xufVxuQC1tb3ota2V5ZnJhbWVzIHNwaW4ge1xuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgc3BpbiB7XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cbkAtby1rZXlmcmFtZXMgc3BpbiB7XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgc3BpbiB7XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cbi5tZnAtYmcge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwNDI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYmFja2dyb3VuZDogIzBiMGIwYjtcbiAgb3BhY2l0eTogMC44O1xufVxuLm1mcC13cmFwIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB6LWluZGV4OiAxMDQzO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG59XG4ubWZwLWNvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHBhZGRpbmc6IDAgOHB4O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbi5tZnAtY29udGFpbmVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi5tZnAtYWxpZ24tdG9wIC5tZnAtY29udGFpbmVyOmJlZm9yZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ubWZwLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHotaW5kZXg6IDEwNDU7XG59XG4ubWZwLWlubGluZS1ob2xkZXIgLm1mcC1jb250ZW50LFxuLm1mcC1hamF4LWhvbGRlciAubWZwLWNvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgY3Vyc29yOiBhdXRvO1xufVxuLm1mcC1hamF4LWN1ciB7XG4gIGN1cnNvcjogcHJvZ3Jlc3M7XG59XG4ubWZwLXpvb20tb3V0LWN1cixcbi5tZnAtem9vbS1vdXQtY3VyIC5tZnAtaW1hZ2UtaG9sZGVyIC5tZnAtY2xvc2Uge1xuICBjdXJzb3I6IC1tb3otem9vbS1vdXQ7XG4gIGN1cnNvcjogLXdlYmtpdC16b29tLW91dDtcbiAgY3Vyc29yOiB6b29tLW91dDtcbn1cbi5tZnAtem9vbSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY3Vyc29yOiAtd2Via2l0LXpvb20taW47XG4gIGN1cnNvcjogLW1vei16b29tLWluO1xuICBjdXJzb3I6IHpvb20taW47XG59XG4ubWZwLWF1dG8tY3Vyc29yIC5tZnAtY29udGVudCB7XG4gIGN1cnNvcjogYXV0bztcbn1cbi5tZnAtY2xvc2UsXG4ubWZwLWFycm93LFxuLm1mcC1wcmVsb2FkZXIsXG4ubWZwLWNvdW50ZXIge1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cbi5tZnAtbG9hZGluZy5tZnAtZmlndXJlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5tZnAtaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cbi5tZnAtcHJlbG9hZGVyIHtcbiAgY29sb3I6ICNjY2M7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHdpZHRoOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IC0wLjhlbTtcbiAgbGVmdDogOHB4O1xuICByaWdodDogOHB4O1xuICB6LWluZGV4OiAxMDQ0O1xufVxuLm1mcC1wcmVsb2FkZXIgYSB7XG4gIGNvbG9yOiAjY2NjO1xufVxuLm1mcC1wcmVsb2FkZXIgYTpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xufVxuLm1mcC1zLXJlYWR5IC5tZnAtcHJlbG9hZGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5tZnAtcy1lcnJvciAubWZwLWNvbnRlbnQge1xuICBkaXNwbGF5OiBub25lO1xufVxuYnV0dG9uLm1mcC1jbG9zZSxcbmJ1dHRvbi5tZnAtYXJyb3cge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdXRsaW5lOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICB6LWluZGV4OiAxMDQ2O1xuICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG59XG4ubWZwLWNsb3NlIHtcbiAgd2lkdGg6IDQ0cHg7XG4gIGhlaWdodDogNDRweDtcbiAgbGluZS1oZWlnaHQ6IDQ0cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG9wYWNpdHk6IDAuNjU7XG4gIHBhZGRpbmc6IDAgMCAxOHB4IDEwcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBCYXNrZXJ2aWxsZSwgbW9ub3NwYWNlO1xufVxuLm1mcC1jbG9zZTpob3Zlcixcbi5tZnAtY2xvc2U6Zm9jdXMge1xuICBvcGFjaXR5OiAxO1xufVxuLm1mcC1jbG9zZTphY3RpdmUge1xuICB0b3A6IDFweDtcbn1cbi5tZnAtY2xvc2UtYnRuLWluIC5tZnAtY2xvc2Uge1xuICBjb2xvcjogIzMzMztcbn1cbi5tZnAtaW1hZ2UtaG9sZGVyIC5tZnAtY2xvc2UsXG4ubWZwLWlmcmFtZS1ob2xkZXIgLm1mcC1jbG9zZSB7XG4gIGNvbG9yOiAjZmZmO1xuICByaWdodDogLTZweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmctcmlnaHQ6IDZweDtcbiAgd2lkdGg6IDEwMCU7XG59XG4ubWZwLWNvdW50ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGNvbG9yOiAjY2NjO1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuLm1mcC1hcnJvdyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3BhY2l0eTogMC42NTtcbiAgbWFyZ2luOiAwO1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLXRvcDogLTU1cHg7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiA5MHB4O1xuICBoZWlnaHQ6IDExMHB4O1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwwLDAsMCk7XG59XG4ubWZwLWFycm93OmFjdGl2ZSB7XG4gIG1hcmdpbi10b3A6IC01NHB4O1xufVxuLm1mcC1hcnJvdzpob3Zlcixcbi5tZnAtYXJyb3c6Zm9jdXMge1xuICBvcGFjaXR5OiAxO1xufVxuLm1mcC1hcnJvdzpiZWZvcmUsXG4ubWZwLWFycm93OmFmdGVyLFxuLm1mcC1hcnJvdyAubWZwLWIsXG4ubWZwLWFycm93IC5tZnAtYSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG1hcmdpbi10b3A6IDM1cHg7XG4gIG1hcmdpbi1sZWZ0OiAzNXB4O1xuICBib3JkZXI6IG1lZGl1bSBpbnNldCB0cmFuc3BhcmVudDtcbn1cbi5tZnAtYXJyb3c6YWZ0ZXIsXG4ubWZwLWFycm93IC5tZnAtYSB7XG4gIGJvcmRlci10b3Atd2lkdGg6IDEzcHg7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDEzcHg7XG4gIHRvcDogOHB4O1xufVxuLm1mcC1hcnJvdzpiZWZvcmUsXG4ubWZwLWFycm93IC5tZnAtYiB7XG4gIGJvcmRlci10b3Atd2lkdGg6IDIxcHg7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDIxcHg7XG4gIG9wYWNpdHk6IDAuNztcbn1cbi5tZnAtYXJyb3ctbGVmdCB7XG4gIGxlZnQ6IDA7XG59XG4ubWZwLWFycm93LWxlZnQ6YWZ0ZXIsXG4ubWZwLWFycm93LWxlZnQgLm1mcC1hIHtcbiAgYm9yZGVyLXJpZ2h0OiAxN3B4IHNvbGlkICNmZmY7XG4gIG1hcmdpbi1sZWZ0OiAzMXB4O1xufVxuLm1mcC1hcnJvdy1sZWZ0OmJlZm9yZSxcbi5tZnAtYXJyb3ctbGVmdCAubWZwLWIge1xuICBtYXJnaW4tbGVmdDogMjVweDtcbiAgYm9yZGVyLXJpZ2h0OiAyN3B4IHNvbGlkICMzZjNmM2Y7XG59XG4ubWZwLWFycm93LXJpZ2h0IHtcbiAgcmlnaHQ6IDA7XG59XG4ubWZwLWFycm93LXJpZ2h0OmFmdGVyLFxuLm1mcC1hcnJvdy1yaWdodCAubWZwLWEge1xuICBib3JkZXItbGVmdDogMTdweCBzb2xpZCAjZmZmO1xuICBtYXJnaW4tbGVmdDogMzlweDtcbn1cbi5tZnAtYXJyb3ctcmlnaHQ6YmVmb3JlLFxuLm1mcC1hcnJvdy1yaWdodCAubWZwLWIge1xuICBib3JkZXItbGVmdDogMjdweCBzb2xpZCAjM2YzZjNmO1xufVxuLm1mcC1pZnJhbWUtaG9sZGVyIHtcbiAgcGFkZGluZy10b3A6IDQwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA0MHB4O1xufVxuLm1mcC1pZnJhbWUtaG9sZGVyIC5tZnAtY29udGVudCB7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA5MDBweDtcbn1cbi5tZnAtaWZyYW1lLWhvbGRlciAubWZwLWNsb3NlIHtcbiAgdG9wOiAtNDBweDtcbn1cbi5tZnAtaWZyYW1lLXNjYWxlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmctdG9wOiA1Ni4yNSU7XG59XG4ubWZwLWlmcmFtZS1zY2FsZXIgaWZyYW1lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3gtc2hhZG93OiAwIDAgOHB4IHJnYmEoMCwwLDAsMC42KTtcbiAgYmFja2dyb3VuZDogIzAwMDtcbn1cbmltZy5tZnAtaW1nIHtcbiAgd2lkdGg6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiA0MHB4IDAgNDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4ubWZwLWZpZ3VyZSB7XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuLm1mcC1maWd1cmU6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDQwcHg7XG4gIGJvdHRvbTogNDBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICB6LWluZGV4OiAtMTtcbiAgYm94LXNoYWRvdzogMCAwIDhweCByZ2JhKDAsMCwwLDAuNik7XG4gIGJhY2tncm91bmQ6ICM0NDQ7XG59XG4ubWZwLWZpZ3VyZSBzbWFsbCB7XG4gIGNvbG9yOiAjYmRiZGJkO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMTRweDtcbn1cbi5tZnAtZmlndXJlIGZpZ3VyZSB7XG4gIG1hcmdpbjogMDtcbn1cbi5tZnAtYm90dG9tLWJhciB7XG4gIG1hcmdpbi10b3A6IC0zNnB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTAwJTtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGN1cnNvcjogYXV0bztcbn1cbi5tZnAtdGl0bGUge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgY29sb3I6ICNmM2YzZjM7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgcGFkZGluZy1yaWdodDogMzZweDtcbn1cbi5tZnAtaW1hZ2UtaG9sZGVyIC5tZnAtY29udGVudCB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi5tZnAtZ2FsbGVyeSAubWZwLWltYWdlLWhvbGRlciAubWZwLWZpZ3VyZSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDgwMHB4KSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpLCBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiAzMDBweCkge1xuICAubWZwLWltZy1tb2JpbGUgLm1mcC1pbWFnZS1ob2xkZXIge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICB9XG4gIC5tZnAtaW1nLW1vYmlsZSBpbWcubWZwLWltZyB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAubWZwLWltZy1tb2JpbGUgLm1mcC1maWd1cmU6YWZ0ZXIge1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gIH1cbiAgLm1mcC1pbWctbW9iaWxlIC5tZnAtZmlndXJlIHNtYWxsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgfVxuICAubWZwLWltZy1tb2JpbGUgLm1mcC1ib3R0b20tYmFyIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLDAuNik7XG4gICAgYm90dG9tOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICB0b3A6IGF1dG87XG4gICAgcGFkZGluZzogM3B4IDVweDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG4gIC5tZnAtaW1nLW1vYmlsZSAubWZwLWJvdHRvbS1iYXI6ZW1wdHkge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgLm1mcC1pbWctbW9iaWxlIC5tZnAtY291bnRlciB7XG4gICAgcmlnaHQ6IDVweDtcbiAgICB0b3A6IDNweDtcbiAgfVxuICAubWZwLWltZy1tb2JpbGUgLm1mcC1jbG9zZSB7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHdpZHRoOiAzNXB4O1xuICAgIGhlaWdodDogMzVweDtcbiAgICBsaW5lLWhlaWdodDogMzVweDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLDAuNik7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAubWZwLWFycm93IHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC43NSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjc1KTtcbiAgfVxuICAubWZwLWFycm93LWxlZnQge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogMDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwO1xuICB9XG4gIC5tZnAtYXJyb3ctcmlnaHQge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogMTAwJTtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxMDAlO1xuICB9XG4gIC5tZnAtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA2cHg7XG4gIH1cbn1cbi5tZnAtaWU3IC5tZnAtaW1nIHtcbiAgcGFkZGluZzogMDtcbn1cbi5tZnAtaWU3IC5tZnAtYm90dG9tLWJhciB7XG4gIHdpZHRoOiA2MDBweDtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTMwMHB4O1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIHBhZGRpbmctYm90dG9tOiA1cHg7XG59XG4ubWZwLWllNyAubWZwLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDA7XG59XG4ubWZwLWllNyAubWZwLWNvbnRlbnQge1xuICBwYWRkaW5nLXRvcDogNDRweDtcbn1cbi5tZnAtaWU3IC5tZnAtY2xvc2Uge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBwYWRkaW5nLXRvcDogMDtcbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltSmhjMlV2WDNKbGMyVjBMbk4wZVd3aUxDSmlZWE5sTDJkc2IySmhiQzV6ZEhsc0lpd2lZbUZ6WlM5cGJXRm5aWE11YzNSNWJDSXNJbUpoYzJVdmJHRjViM1YwTG5OMGVXd2lMQ0ppWVhObEwzUjVjRzluY21Gd2FIa3VjM1I1YkNJc0ltMXZaSFZzWlhNdlpISmhkMlZ5TG5OMGVXd2lMQ0p0YjJSMWJHVnpMMlp2YjNSbGNpNXpkSGxzSWl3aWJXOWtkV3hsY3k5emNHeGhjMmd1YzNSNWJDSXNJbUpoYzJVdlgzSjFjSFIxY21VdWMzUjViQ0lzSW0xdlpIVnNaWE12ZEdsdFpXeHBibVV1YzNSNWJDSXNJblpsYm1SdmNpOWxkbWxzYVdOdmJuTXZaWFpwYkMxcFkyOXVjeTV6ZEhsc0lpd2lkbVZ1Wkc5eUwyMWhaMjVwWm1sakwyMWhaMjVwWm1sakxuTjBlV3dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRlJRVHRGUVVORkxHRkJRV0VzVjBGQllqdEZRVU5CTEhOQ1FVRnpRaXhMUVVGMFFqdEZRVU5CTERCQ1FVRXdRaXhMUVVFeFFqczdRVUZOUmp0RlFVTkZMRkZCUVZFc1JVRkJVanM3UVVGWlJqdEJRVUZSTzBGQlEwODdRVUZEVXp0QlFVTlpPMEZCUTFFN1FVRkRVVHRCUVVOUk8wRkJRMUU3UVVGRFRUdEJRVU5OTzBGQlEwczdRVUZEVXp0RlFVVTFSaXhUUVVGVExFMUJRVlE3TzBGQlQwWTdRVUZCVFR0QlFVTlJPMEZCUTFVN1JVRkZkRUlzVTBGQlV5eGhRVUZVTzBWQlEwRXNaMEpCUVdkQ0xGTkJRV2hDT3p0QlFVOUdPMFZCUTBVc1UwRkJVeXhMUVVGVU8wVkJRMEVzVVVGQlVTeEZRVUZTT3p0QlFVOUdPMEZCUVZNN1JVRkZVQ3hUUVVGVExFdEJRVlE3TzBGQlYwWTdSVUZEUlN4clFrRkJhMElzV1VGQmJFSTdPMEZCUlVFN1FVRkJVenRGUVVWUUxGTkJRVk1zUlVGQlZEdEZRVU5CTEdsQ1FVRm5RaXhMUVVGb1FqczdRVUZUU2p0RlFVTkZMR1ZCUVdVc1YwRkJaanM3UVVGTlJqdEJRVUZGTzBWQlJVRXNZVUZCWVN4TFFVRmlPenRCUVUxR08wVkJRMFVzV1VGQldTeFBRVUZhT3p0QlFXVkdPMFZCUTBVc1dVRkJXU3hMUVVGYU8wVkJRMEVzVDBGQlR5eExRVUZRT3p0QlFVMUdPMFZCUTBVc1YwRkJWeXhSUVVGWU96dEJRVTFHTzBGQlFVazdSVUZGUml4WFFVRlhMRTlCUVZnN1JVRkRRU3hoUVVGaExFVkJRV0k3UlVGRFFTeFZRVUZWTEZOQlFWWTdSVUZEUVN4blFrRkJaMElzVTBGQmFFSTdPMEZCUlVZN1JVRkRSU3hMUVVGTExGRkJRVXc3TzBGQlJVWTdSVUZEUlN4UlFVRlJMRk5CUVZJN08wRkJVMFk3UlVGRFJTeFJRVUZSTEVWQlFWSTdPMEZCVFVZN1JVRkRSU3hWUVVGVkxFOUJRVlk3TzBGQlUwWTdSVUZEUlN4UlFVRlJMRk5CUVZJN08wRkJUVVk3UlVGRFJTeFpRVUZaTEZsQlFWbzdSVUZEUVN4UlFVRlJMRVZCUVZJN08wRkJUVVk3UlVGRFJTeFZRVUZWTEV0QlFWWTdPMEZCVFVZN1FVRkJTenRCUVVOTE8wRkJRMHM3UlVGRllpeGhRVUZ6UWl4eFFrRkJkRUk3UlVGRFFTeFhRVUZYTEVsQlFWZzdPMEZCYVVKR08wRkJRVTg3UVVGRFR6dEJRVU5WTzBGQlExRTdSVUZGT1VJc1QwRkJUeXhSUVVGUU8wVkJRMEVzVFVGQlRTeFJRVUZPTzBWQlEwRXNVVUZCVVN4RlFVRlNPenRCUVUxR08wVkJRMFVzVlVGQlZTeFJRVUZXT3p0QlFWTkdPMEZCUVU4N1JVRkZUQ3huUWtGQlowSXNTMEZCYUVJN08wRkJWVVk3UVVGQlR6dEJRVU15UWp0QlFVTnhRanRGUVVWeVJDeHZRa0ZCYjBJc1QwRkJjRUk3UlVGRFFTeFJRVUZSTEZGQlFWSTdPMEZCVFVZN1FVRkJhVUk3UlVGRlppeFJRVUZSTEZGQlFWSTdPMEZCVFVZN1FVRkJlVUk3UlVGRmRrSXNVVUZCVVN4RlFVRlNPMFZCUTBFc1UwRkJVeXhGUVVGVU96dEJRVTlHTzBWQlEwVXNZVUZCWVN4UFFVRmlPenRCUVZWR08wRkJRWFZDTzBWQlJYSkNMRmxCUVZrc1YwRkJXanRGUVVOQkxGTkJRVk1zUlVGQlZEczdRVUZSUmp0QlFVRm5SRHRGUVVVNVF5eFJRVUZSTEV0QlFWSTdPMEZCVDBZN1JVRkRSU3h2UWtGQmIwSXNWVUZCY0VJN1JVRkRRU3haUVVGWkxGbEJRVm83TzBGQlVVWTdRVUZCYlVRN1JVRkZha1FzYjBKQlFXOUNMRXRCUVhCQ096dEJRVTFHTzBWQlEwVXNVVUZCVVN4clFrRkJVanRGUVVOQkxGRkJRVkVzVFVGQlVqdEZRVU5CTEZOQlFWTXNjMEpCUVZRN08wRkJUMFk3UlVGRFJTeFJRVUZSTEVWQlFWSTdSVUZEUVN4VFFVRlRMRVZCUVZRN08wRkJUVVk3UlVGRFJTeFZRVUZWTEV0QlFWWTdPMEZCVDBZN1JVRkRSU3hoUVVGaExFdEJRV0k3TzBGQlUwWTdSVUZEUlN4cFFrRkJhVUlzVTBGQmFrSTdSVUZEUVN4blFrRkJaMElzUlVGQmFFSTdPMEZCUlVZN1FVRkJSenRGUVVWRUxGTkJRVk1zUlVGQlZEczdRVU0zV0VZN1JVRkRSU3haUVVGWkxGZEJRVm83UlVGRFFTeFJRVUZQTEVWQlFWQTdPMEZCUlVFN1FVRkJVenRGUVVWUUxGbEJRVmtzVjBGQldqczdRVUZMU2p0RlFVTkZMRmxCUVZrc1MwRkJXanRGUVVOQkxGRkJRVkVzUlVGQlVqczdRVU5hUmp0QlFVRkxPMEZCUVZFN1JVRkRXQ3hQUVVGUExFdEJRVkE3TzBGRFJrWTdSVUZEUlN4clFrRkJhMElzUzBGQmJFSTdSVUZEUVN4UlFVRlJMRTlCUVZJN1JVRkRRU3hYUVVGWExFOUJRVmc3TzBGQlNVWTdSVUZEUlN4VFFVRlRMRmRCUVZRN1JVRkRRU3huUWtGQlowSXNUMEZCYUVJN08wRkJTMFk3UlVGRFJTeFJRVUZSTEU5QlFWSTdSVUZEUVN4WFFVRlhMRTlCUVZnN08wRkJVVUU3UlVGRFJTeFBRVUZ4UWl4dFFrRkJja0k3TzBGQlJFWTdSVUZEUlN4UFFVRnhRaXh2UWtGQmNrSTdPMEZCUkVZN1JVRkRSU3hQUVVGeFFpeEpRVUZ5UWpzN1FVRkVSanRGUVVORkxFOUJRWEZDTEcxQ1FVRnlRanM3UVVGRVJqdEZRVU5GTEU5QlFYRkNMRzFDUVVGeVFqczdRVUZFUmp0RlFVTkZMRTlCUVhGQ0xFbEJRWEpDT3p0QlFVUkdPMFZCUTBVc1QwRkJjVUlzYjBKQlFYSkNPenRCUVVSR08wVkJRMFVzVDBGQmNVSXNiVUpCUVhKQ096dEJRVVJHTzBWQlEwVXNUMEZCY1VJc1NVRkJja0k3TzBGQlJFWTdSVUZEUlN4UFFVRnhRaXh0UWtGQmNrSTdPMEZCUkVZN1JVRkRSU3hQUVVGeFFpeHRRa0ZCY2tJN08wRkJSRVk3UlVGRFJTeFBRVUZ4UWl4TFFVRnlRanM3UVVGclFrbzdSVUZEUlN4clFrRkJhVUlzUzBGQmFrSTdPMEZEVmtZN1JVRkRSU3hYUVVGWExFdEJRVmc3UlVGRFFTeDVRa0ZCZVVJc1ZVRkJla0k3UlVGRFFTeDNRa0ZCZDBJc1dVRkJlRUk3TzBGQlIwWTdSVUZEUlN4UFFVRk5MRXRCUVU0N1JVRkRRU3hoUVVGclFpeDNRa0ZCYkVJN1JVRkRRU3hoUVVGWkxFbEJRVm83UlVGRFFTeFJRVUZQTEVWQlFWQTdPMEZCUjBZN1JVRkRSU3hQUVVGTkxGRkJRVTQ3UlVGRFFTeGhRVUZ0UWl4NVFrRkJia0k3UlVGRFFTeFhRVUZWTEU5QlFWWTdSVUZEUVN4aFFVRlpMRTlCUVZvN1JVRkRRU3hoUVVGWkxFVkJRVm83UlVGRFFTeGxRVUZqTEV0QlFXUTdPMEZCU1VZN1JVRkRSU3hwUWtGQmFVSXNTMEZCYWtJN1JVRkRRU3hQUVVGUExGRkJRVkE3TzBGQlJVRTdSVUZEUlN4UFFVRlBMRkZCUVZBN1JVRkRRU3hwUWtGQmFVSXNTMEZCYWtJN08wRkJTVW83UlVGRFJTeFJRVUZQTEd0Q1FVRlFPMFZCUTBFc1QwRkJUU3hSUVVGT08wVkJRMEVzVTBGQlVTeGhRVUZTTzBWQlEwRXNVMEZCVVN4WlFVRlNPenRCUVVWQk8wVkJRMFVzYTBKQlFXbENMRkZCUVdwQ08wVkJRMEVzVDBGQlRTeExRVUZPTzBWQlEwRXNhVUpCUVdsQ0xFdEJRV3BDT3p0QlFVMUdPMFZCUTBVc1pVRkJZeXhQUVVGa096dEJRMjVHU2p0RlFVTkZMR3RDUVVGcFFpeFJRVUZxUWp0RlFVTkJMRlZCUVZNc1UwRkJWRHRGUVVOQkxFOUJRVTBzUlVGQlRqdEZRVU5CTEV0QlFVa3NSVUZCU2p0RlFVVkJMRkZCUVU4c1MwRkJVRHRGUVVOQkxFOUJRVTBzVFVGQlRqdEZRVU5CTEZOQlFWRXNSVUZCVWp0RlFVVkJMRmRCUVRCQ0xHdENRVUV4UWp0RlFVTkJMRmxCUVZjc01rSkJRVmc3TzBGQlJVRTdSVUZEUlN4WFFVRnpRaXhqUVVGMFFqczdRVUZGUmp0RlFVTkZMR1ZCUVdNc1pVRkJaRHRGUVVOQkxFOUJRVTBzUzBGQlRqdEZRVU5CTEZOQlFWRXNUVUZCVWp0RlFVTkJMRk5CUVZFc1ZVRkJVanRGUVVOQkxGbEJRVmNzVDBGQldEczdRVUZGUVR0RlFVTkZMR3RDUVVGcFFpeFJRVUZxUWp0RlFVTkJMRTlCUVUwc1MwRkJUanM3UVVGSFRqdEZRVU5GTEdOQlFXRXNSVUZCWWp0RlFVVkJMRmxCUVZjc09FSkJRVmc3TzBGQlJVWTdSVUZEUlN4alFVRmhMRTFCUVdJN08wRkRiRU5HTzBWQlEwVXNZVUZCV1N4TFFVRmFPenRCUVVWQk8wVkJRMFVzVjBGQlZTeExRVUZXTzBWQlEwRXNUMEZCVFN4TFFVRk9PMFZCUTBFc1dVRkJWeXhQUVVGWU96dEJRMDVLTzBWQlEwVXNhMEpCUVdsQ0xGRkJRV3BDT3p0QlFVVkdPMFZCUTBVc2EwSkJRV2xDTEV0QlFXcENPMFZCUTBFc1UwRkJVU3hOUVVGU08wVkJRMEVzVlVGQlV5eFBRVUZVTzBWQlEwRXNVMEZCVVN4VlFVRlNPMFZCUTBFc1QwRkJUU3hMUVVGT096dEJRekpKVXp0QlFVRkJPMGxFZUVsUUxGTkJRVkVzVFVGQlVqczdPMEZCUlVZN1JVRkRSU3hQUVVGTkxFbEJRVTQ3TzBGRGNVbFBPMEZCUVVFN1NVUnNTVXdzVDBGQlRTeEpRVUZPT3pzN1FVTnJTVXM3UVVGQlFUdEpSQzlJVEN4UFFVRk5MRWxCUVU0N096dEJRVVZLTzBWQlEwVXNXVUZCVnl4TlFVRllPenRCUXpSSVR6dEJRVUZCTzBsRWVraE1MRk5CUVZFc1lVRkJVanRKUVVOQkxFOUJRVTBzUzBGQlRqczdPMEZEZDBoTE8wRkJRVUU3U1VSeVNFd3NVMEZCVVN4aFFVRlNPMGxCUTBFc1dVRkJWeXhQUVVGWU8wbEJRMEVzVDBGQlRTeExRVUZPT3pzN1FVRkhUanRGUVVORkxGbEJRVFJETERKRVFVRTFRenRGUVVOQkxHbENRVUZuUWl4TlFVRm9RanRGUVVOQkxGRkJRVThzVFVGQlVEdEZRVU5CTEU5QlFVMHNTMEZCVGpzN1FVTTBSMU03UVVGQlFUdEpSSHBIVUN4UlFVRlBMRTFCUVZBN096dEJRM2xIVHp0QlFVRkJPMGxFZEVkUUxGRkJRVThzVFVGQlVEczdPMEZCUlVvN1JVRkRSU3hyUWtGQmFVSXNVVUZCYWtJN1JVRkZRU3hoUVVGWkxFOUJRVm83UlVGRFFTeFBRVUZOTEV0QlFVNDdPMEZCU1VFN1JVRkRSU3hUUVVGUkxFOUJRVkk3UlVGRFFTeG5Ra0ZCWlN4SlFVRm1PenRCUXpCR1R6dEJRVUZCTzBsRWRrWk1MRTlCUVUwc1NVRkJUanM3TzBGRGRVWkxPMEZCUVVFN1NVUndSa3dzVTBGQlVTeE5RVUZTTzBsQlEwRXNUMEZCVFN4TFFVRk9PenM3UVVGRlNqdEZRVU5GTEZsQlFWY3NUMEZCV0RzN1FVTm5Sazg3UVVGQlFUdEpSRGRGU0N4VFFVRlJMR0ZCUVZJN1NVRkRRU3hQUVVGTkxFbEJRVTQ3T3p0QlFVVk9PMFZCUTBVc1UwRkJVU3hQUVVGU096dEJRM2xGVHp0QlFVRkJPMGxFZEVWTUxFOUJRVTBzU1VGQlRqczdPMEZEYzBWTE8wRkJRVUU3U1VSdVJVd3NVMEZCVVN4TlFVRlNPMGxCUTBFc1QwRkJUU3hMUVVGT096czdRVUZGU2p0RlFVTkZMRTlCUVUwc1VVRkJUanRGUVVOQkxGZEJRVlVzUzBGQlZqczdRVU00UkU4N1FVRkJRVHRKUkRORVRDeGhRVUZaTEVWQlFWbzdPenRCUXpKRVN6dEJRVUZCTzBsRWVFUk1MRmxCUVZjc1QwRkJXRHM3TzBGRGQwUkxPMEZCUVVFN1NVUndSRWdzVTBGQlVTeGhRVUZTT3pzN1FVRkZUanRGUVVORkxGRkJRVThzYTBKQlFWQTdSVUZEUVN4UFFVRk5MRkZCUVU0N1JVRkRRU3hUUVVGUkxHRkJRVkk3UlVGRFFTeFRRVUZQTEZsQlFWQTdSVUZEUVN4WlFVRlhMRTlCUVZnN1JVRkRRU3hQUVVGTkxFdEJRVTQ3TzBGQlJVRTdSVUZEUlN4clFrRkJhVUlzVVVGQmFrSTdSVUZEUVN4UFFVRk5MRkZCUVU0N1JVRkRRU3hwUWtGQmFVSXNTMEZCYWtJN08wRkZNMFpPTzBWQlEwVXNXVUZCVnl4UFFVRllPenRCUVVWR08wVkJRMFVzVlVGQlV5eFRRVUZVTzBWQlEwRXNXVUZCVnl4UFFVRllPenRCUVVWR08wRkJRVzlDTzBWQlEyeENMRmxCUVZjc1VVRkJXRHRGUVVOQkxGbEJRV2RHTERCRlFVRm9SanRGUVVOQkxHbENRVUZuUWl4VlFVRm9RanM3UVVGSFJqdEZRVU5GTEU5QlFVMHNTMEZCVGp0RlFVVkJMRk5CUVZFc1RVRkJVanM3UVVGRlFUdEZRVU5GTEU5QlFVMHNTMEZCVGp0RlFVTkJMRkZCUVU4c1ZVRkJVRHRGUVVOQkxGTkJRVkVzUzBGQlVqczdRVUZGUmp0RlFVTkZMRmxCUVZjc1MwRkJXRHRGUVVOQkxGTkJRVkVzUlVGQlVqdEZRVU5CTEZGQlFVOHNTMEZCVUR0RlFVTkJMRk5CUVZFc1MwRkJVanRGUVVOQkxHRkJRVzFDTEhsQ1FVRnVRanRGUVVOQkxHRkJRVEJDTEVsQlFURkNPenRCUVVWR08wVkJRMFVzWjBKQlFXVXNTMEZCWmpzN1FVRkZRVHRGUVVORkxGTkJRVkVzUzBGQlVqczdRVUZGU2p0RlFVTkZMRmRCUVZVc1MwRkJWanRGUVVOQkxFOUJRWGxDTEhOQ1FVRjZRanRGUVVOQkxHRkJRVmtzTkVKQlFWbzdPMEZCUjBvN1JVRkRSU3hWUVVGVExGTkJRVlE3UlVGRFFTeFBRVUZOTEV0QlFVNDdSVUZEUVN4WFFVRlZMRTFCUVZZN1JVRkRRU3hSUVVGUExFOUJRVkE3UlVGRFFTeFJRVUZQTEUxQlFWQTdSVUZEUVN4VlFVRlRMRTlCUVZRN08wRkJSMEU3UlVGRFJTeFJRVUZQTEV0QlFWQTdSVUZEUVN4UlFVRlBMRWxCUVZBN1JVRkRRU3hQUVVGTkxFdEJRVTQ3UlVGRFFTeFpRVUU0UWl4elFrRkJPVUk3UlVGRFFTeFpRVUZYTEcxRFFVRllPMFZCUTBFc1ZVRkJVeXhUUVVGVU8wVkJRMEVzVVVGQlR5eEpRVUZRTzBWQlEwRXNUMEZCVFN4TFFVRk9PenRCUVVWR08wVkJRMFVzVTBGQlVTeExRVUZTTzBWQlEwRXNWVUZCVXl4dFFrRkJWRHM3UVVGSFJqdEZRVU5GTEZsQlFWY3NTMEZCV0R0RlFVTkJMR1ZCUVdNc1NVRkJaRHRGUVVOQkxGbEJRVmNzZDBKQlFWZzdSVUZEUVN4UlFVRlBMRkZCUVZBN1JVRkRRU3hQUVVGTkxFdEJRVTQ3UlVGRFFTeFJRVUZSTEV0QlFWSTdSVUZEUVN4VlFVRlRMRk5CUVZRN1JVRkRRU3haUVVGWExHVkJRVmc3UlVGRFFTeGhRVUZaTEV0QlFWbzdPMEZCUlVZN1JVRkRSU3hQUVVGTkxFdEJRVTQ3UlVGRFFTeGhRVUZ0UWl4NVFrRkJia0k3UlVGRFFTeGhRVUV3UWl4SlFVRXhRanRGUVVOQkxGbEJRVmNzWlVGQldEdEZRVU5CTEZkQlFUQkNMR3RDUVVFeFFqczdRVUZIUVR0RlFVTkZMRmxCUVZjc1MwRkJXRHRGUVVOQkxHbENRVUZuUWl4WlFVRm9RanM3UVVGSlJqdEZRVU5GTEZOQlFWRXNSVUZCVWp0RlFVTkJMRmxCUVZjc2MwSkJRVmc3TzBGQlIwWTdSVUZEUlN4UFFVRk5MRXRCUVU0N08wRkJSMFk3UlVGRFJTeFRRVUZSTEVWQlFWSTdSVUZEUVN4WFFVRnRRaXhYUVVGdVFqdEZRVU5CTEZsQlFWY3NjMEpCUVZnN08wRkJSVVk3UlVGRFNTeFRRVUZSTEVWQlFWSTdSVUZEUVN4WFFVRnBRaXhUUVVGcVFqdEZRVU5CTEZsQlFWY3NORUpCUVZnN08wRkJSMG83UlVGRFJTeFRRVUZSTEVWQlFWSTdSVUZEUVN4WFFVRnBRaXhUUVVGcVFqdEZRVU5CTEZsQlFWY3NjMEpCUVZnN08wRkJSVVk3UlVGRFNTeFRRVUZSTEVWQlFWSTdSVUZEUVN4WFFVRnBRaXhUUVVGcVFqdEZRVU5CTEZsQlFWY3NORUpCUVZnN08wRkJSVTQ3UlVGRFJTeFBRVUZOTEUxQlFVNDdSVUZEUVN4VlFVRlRMRk5CUVZRN08wRkJSVVk3UlVGRFJTeFZRVUZUTEZOQlFWUTdSVUZGUVN4TFFVRkpMRWxCUVVvN1JVRkRRU3hQUVVGTkxFdEJRVTQ3UlVGRFFTeFBRVUZOTEV0QlFVNDdPMEZCUlVFN1JVRkRSU3haUVVFeVFpeHJSVUZCTTBJN1JVRkRRU3hsUVVGakxFbEJRV1E3UlVGRFFTeFpRVUZYTEcxRFFVRllPMFZCUTBFc1VVRkJUeXhSUVVGUU8wVkJRMEVzVTBGQlVTeGhRVUZTTzBWQlEwRXNUMEZCVFN4TFFVRk9PMFZCUTBFc1VVRkJUeXhMUVVGUU8wVkJSVUVzVVVGQlR5eE5RVUZRTzBWQlEwRXNXVUZCVnl3NFFrRkJXRHM3UVVGRlFUdEZRVU5GTEd0Q1FVRnZReXh6UWtGQmNFTTdPMEZCUlVvN1JVRkRSU3hsUVVGakxGbEJRV1E3TzBGQlJVWTdSVUZEUlN4bFFVRmpMRmxCUVdRN1JVRkRRU3hyUWtGQmFVTXNiMEpCUVdwRE96dEJRVWRHTzBWQlEwVXNhMEpCUVdsRExHOUNRVUZxUXpzN1FVRkZSanRGUVVORkxHdENRVUZyUXl4eFFrRkJiRU03TzBGQlJVbzdSVUZEUlN4VlFVRlRMRk5CUVZRN1JVRkRRU3hMUVVGSkxFOUJRVW83UlVGRFFTeFpRVUZYTEUxQlFWZzdSVUZEUVN4UFFVRk5MRTFCUVU0N1JVRkRRU3hOUVVGTExFOUJRVXc3UlVGRFFTeFRRVUZSTEVWQlFWSTdSVUZEUVN4VFFVRlJMRTFCUVZJN08wRkVka05QTzBGQlFVRTdTVU13UTB3c1MwRkJTU3hQUVVGS08wbEJRMEVzV1VGQlZ5eE5RVUZZTzBsQlEwRXNUMEZCVFN4UFFVRk9PMGxCUTBFc1RVRkJTeXhQUVVGTU96czdRVVEzUTBzN1FVRkJRVHRKUTJkRVRDeExRVUZKTEZGQlFVbzdPenRCUVVWS08wVkJRMFVzV1VGQlZ5eFBRVUZZT3p0QlFVbEdPMFZCUTBVc1UwRkJVU3hYUVVGU08wVkJRMEVzWjBKQlFXVXNUMEZCWmp0RlFVTkJMR1ZCUVdNc1MwRkJaRHRGUVVWQkxFOUJRVTBzU1VGQlRqczdRVVExUkU4N1FVRkJRVHRKUXpoRVRDeFRRVUZSTEZWQlFWSTdPenRCUVVkR08wVkJRMFVzVDBGQlRTeExRVUZPTzBWQlEwRXNVVUZCVHl4WFFVRlFPMFZCUTBFc1lVRkJXU3hQUVVGYU96dEJRVVZHTzBWQlEwVXNUMEZCVFN4TFFVRk9PMFZCUTBFc1YwRkJWU3hSUVVGV08wVkJRMEVzVVVGQlR5eEZRVUZRT3p0QlFVVktPMFZCUTBVc1YwRkJWU3hMUVVGV08wVkJRMEVzVTBGQlVTeExRVUZTT3p0QlFVbEdPMFZCUTBVc1QwRkJUU3hMUVVGT08wVkJRMEVzVVVGQlR5eExRVUZRT3p0QlFVZEdPMFZCUTBVc1UwRkJVU3hYUVVGU08wVkJRMEVzWjBKQlFXVXNUMEZCWmp0RlFVTkJMRkZCUVU4c1RVRkJVRHRGUVVOQkxFOUJRVTBzU1VGQlRqczdRVVF4Ums4N1FVRkJRVHRKUXpaR1RDeFRRVUZSTEZWQlFWSTdPenRCUVZOT08wVkJRMFVzVDBGQlRTeExRVUZPTzBWQlEwRXNVVUZCVHl4TFFVRlFPenRCUVVjNFFqdEJRVU01UWp0SlFVTkZMRkZCUVU4c1RVRkJVRHM3TzBGQlJVbzdSVUZEUlN4aFFVRlpMRXRCUVZvN1JVRkRRU3hWUVVGVExGTkJRVlE3UlVGRFFTeFJRVUZQTEU5QlFWQTdSVUZEUVN4TlFVRkxMRWxCUVV3N1JVRkRRU3hYUVVGNVFpeHBRa0ZCZWtJN08wRkVjRWhUTzBGQlFVRTdTVU4xU0ZBc1VVRkJUeXhQUVVGUU96czdRVUZGUmp0RlFVTkZMRmRCUVZVc1MwRkJWanRGUVVOQkxFOUJRVTBzUzBGQlRqdEZRVU5CTEZsQlFWY3NUVUZCV0RzN1FVUTFTRTg3UVVGQlFUdEpReXRJVEN4WlFVRlhMRTlCUVZnN096dEJRVWRLTzBWQlEwVXNVMEZCVVN4TlFVRlNPenRCUkc1SlR6dEJRVUZCTzBsRGNVbE1MRk5CUVZFc1MwRkJVanM3TzBGQlJVbzdSVUZEUlN4VFFVRlJMRXRCUVZJN08wRkVlRWxQTzBGQlFVRTdTVU15U1V3c1UwRkJVU3hOUVVGU096czdRVUZGVGp0RlFVTkZMRk5CUVZFc1MwRkJVanM3UVVRNVNWTTdRVUZCUVR0SlEybEtVQ3hUUVVGUkxFMUJRVkk3U1VGRFFTeFZRVUZUTEUxQlFWUTdTVUZEUVN4UlFVRlBMRWxCUVZBN1NVRkRRU3hQUVVGTkxFbEJRVTQ3U1VGRFFTeE5RVUZMTEZGQlFVdzdPenRCUVVWS08wVkJRMFVzVDBGQlRTeFJRVUZPTzBWQlEwRXNUVUZCU3l4UlFVRk1PenRCUVVWQk8wVkJRMFVzVFVGQlN5eExRVUZNT3p0QlFVVkdPMFZCUTBVc1RVRkJTeXhSUVVGTU96dEJRelZUU2p0RlFVTkZMRlZCUVZNc1UwRkJWRHRGUVVOQkxGTkJRVkVzWVVGQlVqdEZRVU5CTEU5QlFVMHNTMEZCVGp0RlFVTkJMRkZCUVU4c1MwRkJVRHRGUVVOQkxGVkJRVk1zVDBGQlZEczdRVUZGUmp0RlFVTkZMRTlCUVUwc1MwRkJUanRGUVVOQkxGRkJRVThzUzBGQlVEdEZRVU5CTEZsQlFWY3NVVUZCV0R0RlFVTkJMRTFCUVVzc1VVRkJURHRGUVVOQkxGZEJRWE5DTEdOQlFYUkNPMFZCUTBFc1pVRkJiVU1zZVVKQlFXNURPenRCUVVWR08wVkJRMFVzVDBGQlRTeExRVUZPTzBWQlEwRXNVVUZCVHl4TFFVRlFPenRCUVVWR08wVkJRMFVzVDBGQlRTeE5RVUZPTzBWQlEwRXNVVUZCVHl4TlFVRlFPenRCUVVWR08wVkJRMFVzVDBGQlRTeE5RVUZPTzBWQlEwRXNVVUZCVHl4TlFVRlFPenRCUVVWR08wVkJRMFVzVDBGQlRTeE5RVUZPTzBWQlEwRXNVVUZCVHl4TlFVRlFPenRCUVVWR08wVkJRMFVzVlVGQlV5eFRRVUZVTzBWQlEwRXNTMEZCU1N4RlFVRktPMFZCUTBFc1RVRkJTeXhGUVVGTU8wVkJRMEVzVDBGQlRTeExRVUZPTzBWQlEwRXNVVUZCVHl4TFFVRlFPenRCUVVWR08wRkJRV2xETzBWQlJTOUNMRmRCUVZVc01rSkJRVlk3TzBGQlIwRTdSVUZEUlN4WFFVRlZMREJDUVVGV096dEJRVVZLTzBWQlEwVXNUVUZCYTBJc1VVRkJiRUk3TzBGQlJVWTdSVUZEUlN4TlFVRnJRaXhSUVVGc1FqczdRVUZGUmp0RlFVTkZMRTFCUVd0Q0xGRkJRV3hDT3p0QlFVVkdPMFZCUTBVc1RVRkJhMElzVVVGQmJFSTdPMEZCUlVZN1JVRkRSU3hOUVVGclFpeFJRVUZzUWpzN1FVRkZSanRGUVVORkxFMUJRV3RDTEZGQlFXeENPenRCUVVWR08wVkJRMFVzVFVGQmEwSXNVVUZCYkVJN08wRkJSVVk3UlVGRFJTeE5RVUZyUWl4UlFVRnNRanM3UVVGRlJqdEZRVU5GTEUxQlFXdENMRkZCUVd4Q096dEJRVVZHTzBWQlEwVXNUVUZCYTBJc1VVRkJiRUk3TzBGQlJVWTdSVUZEUlN4TlFVRnJRaXhSUVVGc1FqczdRVUZGUmp0RlFVTkZMRTFCUVd0Q0xGRkJRV3hDT3p0QlFVVkdPMFZCUTBVc1RVRkJhMElzVVVGQmJFSTdPMEZCUlVZN1JVRkRSU3hOUVVGclFpeFJRVUZzUWpzN1FVRXhSbE03UVVGRFZEdEpRVU5GTEZkQlFYVkNMR1ZCUVhaQ096czdRVUZHVHp0QlFVTlVPMGxCUTBVc1YwRkJkVUlzWlVGQmRrSTdPenRCUVVaUE8wRkJRMVE3U1VGRFJTeFhRVUYxUWl4bFFVRjJRanM3TzBGQlJrODdRVUZEVkR0SlFVTkZMRmRCUVhWQ0xHVkJRWFpDT3pzN1FVTklTanRGUVVORkxFdEJRVXNzUlVGQlREdEZRVU5CTEUxQlFVMHNSVUZCVGp0RlFVTkJMRTlCUVU4c1MwRkJVRHRGUVVOQkxGRkJRVkVzUzBGQlVqdEZRVU5CTEZOQlFWTXNTMEZCVkR0RlFVTkJMRlZCUVZVc1QwRkJWanRGUVVOQkxGVkJRVlVzVFVGQlZqdEZRVU5CTEZsQlFWa3NVVUZCV2p0RlFVTkJMRk5CUVZNc1NVRkJWRHM3UVVGSlJqdEZRVU5GTEV0QlFVc3NSVUZCVER0RlFVTkJMRTFCUVUwc1JVRkJUanRGUVVOQkxFOUJRVThzUzBGQlVEdEZRVU5CTEZGQlFWRXNTMEZCVWp0RlFVTkJMRk5CUVZNc1MwRkJWRHRGUVVOQkxGVkJRVlVzVFVGQlZqdEZRVU5CTEZOQlFWTXNaMEpCUVZRN1JVRkRRU3cyUWtGQk5rSXNUMEZCTjBJN08wRkJSVVk3UlVGRFJTeFpRVUZaTEU5QlFWbzdSVUZEUVN4VlFVRlZMRk5CUVZZN1JVRkRRU3hQUVVGUExFdEJRVkE3UlVGRFFTeFJRVUZSTEV0QlFWSTdSVUZEUVN4TlFVRk5MRVZCUVU0N1JVRkRRU3hMUVVGTExFVkJRVXc3UlVGRFFTeFRRVUZUTEUxQlFWUTdSVUZEUVN4dlFrRkJiMElzVjBGQmNFSTdSVUZEUVN4cFFrRkJhVUlzVjBGQmFrSTdSVUZEUVN4WlFVRlpMRmRCUVZvN08wRkJSVVk3UlVGRFJTeFRRVUZUTEVkQlFWUTdSVUZEUVN4VFFVRlRMR0ZCUVZRN1JVRkRRU3hSUVVGUkxFdEJRVkk3UlVGRFFTeG5Ra0ZCWjBJc1QwRkJhRUk3TzBGQlJVWTdSVUZEUlN4VFFVRlRMRXRCUVZRN08wRkJSVVk3UlVGRFJTeFZRVUZWTEZOQlFWWTdSVUZEUVN4VFFVRlRMR0ZCUVZRN1JVRkRRU3huUWtGQlowSXNUMEZCYUVJN1JVRkRRU3hSUVVGUkxFOUJRVkk3UlVGRFFTeFpRVUZaTEV0QlFWbzdSVUZEUVN4VFFVRlRMRXRCUVZRN08wRkJSVVk3UVVGQmFVTTdSVUZETDBJc1QwRkJUeXhMUVVGUU8wVkJRMEVzVVVGQlVTeExRVUZTT3p0QlFVVkdPMFZCUTBVc1VVRkJVU3hUUVVGU096dEJRVVZHTzBGQlFXMUNPMFZCUTJwQ0xGRkJRVkVzWTBGQlVqdEZRVU5CTEZGQlFWRXNhVUpCUVZJN1JVRkRRU3hSUVVGUkxGTkJRVkk3TzBGQlJVWTdSVUZEUlN4UlFVRlJMRkZCUVZJN1JVRkRRU3hSUVVGUkxHZENRVUZTTzBWQlEwRXNVVUZCVVN4aFFVRlNPMFZCUTBFc1VVRkJVU3hSUVVGU096dEJRVVZHTzBWQlEwVXNVVUZCVVN4TFFVRlNPenRCUVVWR08wRkJRVms3UVVGQldUdEJRVUZuUWp0RlFVTjBReXh4UWtGQmNVSXNTMEZCY2tJN1JVRkRRU3hyUWtGQmEwSXNTMEZCYkVJN1JVRkRRU3hoUVVGaExFdEJRV0k3TzBGQlJVWTdSVUZEUlN4VFFVRlRMRXRCUVZRN08wRkJSVVk3UlVGRFJTeFRRVUZUTEdkQ1FVRlVPenRCUVVWR08wVkJRMFVzVDBGQlR5eExRVUZRTzBWQlEwRXNWVUZCVlN4VFFVRldPMFZCUTBFc1MwRkJTeXhKUVVGTU8wVkJRMEVzVDBGQlR5eExRVUZRTzBWQlEwRXNXVUZCV1N4UFFVRmFPMFZCUTBFc1dVRkJXU3hQUVVGYU8wVkJRMEVzVFVGQlRTeEpRVUZPTzBWQlEwRXNUMEZCVHl4SlFVRlFPMFZCUTBFc1UwRkJVeXhMUVVGVU96dEJRVU5CTzBWQlEwVXNUMEZCVHl4TFFVRlFPenRCUVVOQk8wVkJRMFVzVDBGQlR5eExRVUZRT3p0QlFVVk9PMFZCUTBVc1UwRkJVeXhMUVVGVU96dEJRVVZHTzBWQlEwVXNVMEZCVXl4TFFVRlVPenRCUVVWR08wRkJRV3RDTzBWQlEyaENMRlZCUVZVc1VVRkJWanRGUVVOQkxGRkJRVkVzVVVGQlVqdEZRVU5CTEZsQlFWa3NXVUZCV2p0RlFVTkJMRkZCUVZFc1JVRkJVanRGUVVOQkxHOUNRVUZ2UWl4TFFVRndRanRGUVVOQkxGTkJRVk1zVFVGQlZEdEZRVU5CTEZOQlFWTXNTMEZCVkR0RlFVTkJMRk5CUVZNc1JVRkJWRHRGUVVOQkxGTkJRVk1zUzBGQlZEdEZRVU5CTEc5Q1FVRnZRaXhMUVVGd1FqdEZRVU5CTEZsQlFWa3NTMEZCV2pzN1FVRkRSanRGUVVORkxGTkJRVk1zUlVGQlZEdEZRVU5CTEZGQlFWRXNSVUZCVWpzN1FVRkZSanRGUVVORkxFOUJRVThzUzBGQlVEdEZRVU5CTEZGQlFWRXNTMEZCVWp0RlFVTkJMR0ZCUVdFc1MwRkJZanRGUVVOQkxGVkJRVlVzVTBGQlZqdEZRVU5CTEU5QlFVOHNSVUZCVUR0RlFVTkJMRXRCUVVzc1JVRkJURHRGUVVOQkxHbENRVUZwUWl4TFFVRnFRanRGUVVOQkxGbEJRVmtzVDBGQldqdEZRVU5CTEZOQlFWTXNTMEZCVkR0RlFVVkJMRk5CUVZNc1kwRkJWRHRGUVVOQkxFOUJRVThzUzBGQlVEdEZRVU5CTEZsQlFWa3NUMEZCV2p0RlFVTkJMRmRCUVZjc1MwRkJXRHRGUVVOQkxHRkJRV3RDTERoQ1FVRnNRanM3UVVGRFFUdEJRVUZyUWp0RlFVTm9RaXhUUVVGVExFVkJRVlE3TzBGQlIwWTdSVUZEUlN4TFFVRkxMRWxCUVV3N08wRkJSVW83UlVGRFJTeFBRVUZQTEV0QlFWQTdPMEZCUlVZN1FVRkJPRUk3UlVGRE5VSXNUMEZCVHl4TFFVRlFPMFZCUTBFc1QwRkJUeXhMUVVGUU8wVkJRMEVzV1VGQldTeE5RVUZhTzBWQlEwRXNaVUZCWlN4SlFVRm1PMFZCUTBFc1QwRkJUeXhMUVVGUU96dEJRVVZHTzBWQlEwVXNWVUZCVlN4VFFVRldPMFZCUTBFc1MwRkJTeXhGUVVGTU8wVkJRMEVzVDBGQlR5eEZRVUZRTzBWQlEwRXNUMEZCVHl4TFFVRlFPMFZCUTBFc1YwRkJWeXhMUVVGWU8wVkJRMEVzWVVGQllTeExRVUZpTzBWQlEwRXNZVUZCWVN4UFFVRmlPenRCUVVWR08wVkJRMFVzVlVGQlZTeFRRVUZXTzBWQlEwRXNVMEZCVXl4TFFVRlVPMFZCUlVFc1VVRkJVU3hGUVVGU08wVkJRMEVzUzBGQlN5eEpRVUZNTzBWQlEwRXNXVUZCV1N4TlFVRmFPMFZCUTBFc1UwRkJVeXhGUVVGVU8wVkJRMEVzVDBGQlR5eExRVUZRTzBWQlEwRXNVVUZCVVN4TlFVRlNPMFZCUTBFc05rSkJRVFJETEdOQlFUVkRPenRCUVVOQk8wVkJRMFVzV1VGQldTeE5RVUZhT3p0QlFVTkdPMEZCUVd0Q08wVkJRMmhDTEZOQlFWTXNSVUZCVkRzN1FVRkhSanRCUVVGdFFqdEJRVUZyUWp0QlFVRnRRanRGUVVOMFJDeFRRVUZUTEVkQlFWUTdSVUZEUVN4VFFVRlRMRTFCUVZRN1JVRkRRU3hQUVVGUExFVkJRVkE3UlVGRFFTeFJRVUZSTEVWQlFWSTdSVUZEUVN4VlFVRlZMRk5CUVZZN1JVRkRRU3hOUVVGTkxFVkJRVTQ3UlVGRFFTeExRVUZMTEVWQlFVdzdSVUZEUVN4WlFVRlpMRXRCUVZvN1JVRkRRU3hoUVVGaExFdEJRV0k3UlVGRFFTeFJRVUZSTEhsQ1FVRlNPenRCUVVOR08wRkJRV3RDTzBWQlEyaENMR3RDUVVGclFpeExRVUZzUWp0RlFVTkJMSEZDUVVGeFFpeExRVUZ5UWp0RlFVTkJMRXRCUVVzc1NVRkJURHM3UVVGRFJqdEJRVUZ0UWp0RlFVTnFRaXhyUWtGQmEwSXNTMEZCYkVJN1JVRkRRU3h4UWtGQmNVSXNTMEZCY2tJN1JVRkRRU3hUUVVGVExFbEJRVlE3TzBGQlJVbzdSVUZEUlN4TlFVRk5MRVZCUVU0N08wRkJRMEU3UVVGQmRVSTdSVUZEY2tJc1kwRkJZeXhuUWtGQlpEdEZRVU5CTEdGQlFXRXNTMEZCWWpzN1FVRkRSanRCUVVGM1FqdEZRVU4wUWl4aFFVRmhMRXRCUVdJN1JVRkRRU3hqUVVGakxHMUNRVUZrT3p0QlFVVktPMFZCUTBVc1QwRkJUeXhGUVVGUU96dEJRVU5CTzBGQlFYZENPMFZCUTNSQ0xHRkJRV0VzWjBKQlFXSTdSVUZEUVN4aFFVRmhMRXRCUVdJN08wRkJRMFk3UVVGQmVVSTdSVUZEZGtJc1lVRkJZU3h0UWtGQllqczdRVUZGU2p0RlFVTkZMR0ZCUVdFc1MwRkJZanRGUVVOQkxHZENRVUZuUWl4TFFVRm9RanM3UVVGRFFUdEZRVU5GTEdGQlFXRXNSVUZCWWp0RlFVTkJMRTlCUVU4c1MwRkJVRHRGUVVOQkxGZEJRVmNzVFVGQldEczdRVUZEUmp0RlFVTkZMRXRCUVVzc1RVRkJURHM3UVVGRlNqdEZRVU5GTEU5QlFVOHNTMEZCVUR0RlFVTkJMRkZCUVZFc1JVRkJVanRGUVVOQkxGVkJRVlVzVDBGQlZqdEZRVU5CTEdGQlFXRXNUMEZCWWpzN1FVRkRRVHRGUVVORkxGVkJRVlVzVTBGQlZqdEZRVU5CTEZOQlFWTXNUVUZCVkR0RlFVTkJMRXRCUVVzc1JVRkJURHRGUVVOQkxFMUJRVTBzUlVGQlRqdEZRVU5CTEU5QlFVOHNTMEZCVUR0RlFVTkJMRkZCUVZFc1MwRkJVanRGUVVOQkxGbEJRVmtzZDBKQlFWbzdSVUZEUVN4WlFVRlpMRXRCUVZvN08wRkJSMG83UlVGRFJTeFBRVUZQTEV0QlFWQTdSVUZEUVN4WFFVRlhMRXRCUVZnN1JVRkRRU3hSUVVGUkxFdEJRVkk3UlVGRFFTeFRRVUZUTEUxQlFWUTdSVUZEUVN4aFFVRmhMRVZCUVdJN1JVRkRRU3h2UWtGQmIwSXNWMEZCY0VJN1JVRkRRU3hwUWtGQmFVSXNWMEZCYWtJN1JVRkRRU3haUVVGWkxGZEJRVm83UlVGRFFTeFRRVUZUTEZsQlFWUTdSVUZEUVN4UlFVRlJMRTlCUVZJN08wRkJSMFk3UlVGRFJTeGhRVUZoTEVWQlFXSTdPMEZCUTBFN1JVRkRSU3hUUVVGVExFZEJRVlE3UlVGRFFTeFZRVUZWTEZOQlFWWTdSVUZEUVN4TlFVRk5MRVZCUVU0N1JVRkRRU3hMUVVGTExFdEJRVXc3UlVGRFFTeFJRVUZSTEV0QlFWSTdSVUZEUVN4VFFVRlRMRTFCUVZRN1JVRkRRU3hQUVVGUExFVkJRVkE3UlVGRFFTeFBRVUZQTEV0QlFWQTdSVUZEUVN4UlFVRlJMRXRCUVZJN1JVRkRRU3hUUVVGVExFZEJRVlE3UlVGRFFTeFpRVUZaTEhkQ1FVRmFPMFZCUTBFc1dVRkJXU3hMUVVGYU96dEJRVU5HTzBWQlEwVXNUMEZCVHl4UlFVRlFPMFZCUTBFc1UwRkJVeXhOUVVGVU8wVkJRMEVzVjBGQlZ5eExRVUZZTzBWQlEwRXNZVUZCWVN4TFFVRmlPenRCUVVOR08wVkJRMFVzVVVGQlVTeEZRVUZTT3p0QlFVVktPMFZCUTBVc1dVRkJXU3hOUVVGYU8wVkJRMEVzVlVGQlZTeFRRVUZXTzBWQlEwRXNTMEZCU3l4TFFVRk1PMFZCUTBFc1RVRkJUU3hGUVVGT08wVkJRMEVzVDBGQlR5eExRVUZRTzBWQlEwRXNVVUZCVVN4TFFVRlNPenRCUVVWR08wVkJRMFVzV1VGQldTeExRVUZhTzBWQlEwRXNZVUZCWVN4TFFVRmlPMFZCUTBFc1QwRkJUeXhSUVVGUU8wVkJRMEVzVjBGQlZ5eFhRVUZZTzBWQlEwRXNaVUZCWlN4TFFVRm1PenRCUVVWR08wVkJRMFVzVjBGQlZ5eExRVUZZT3p0QlFVVkdPMFZCUTBVc1VVRkJVU3hSUVVGU096dEJRVVU0Ump0QlFVazVSanRKUVVORkxHTkJRV01zUlVGQlpEdEpRVU5CTEdWQlFXVXNSVUZCWmpzN1FVRkRSanRKUVVORkxGTkJRVk1zUlVGQlZEczdRVUZEUmp0SlFVTkZMRXRCUVVzc1JVRkJURHRKUVVOQkxGRkJRVkVzUlVGQlVqczdRVUZEUmp0SlFVTkZMRk5CUVZNc1QwRkJWRHRKUVVOQkxHRkJRV0VzU1VGQllqczdRVUZEUmp0SlFVTkZMRmxCUVRaQ0xHZENRVUUzUWp0SlFVTkJMRkZCUVZFc1JVRkJVanRKUVVOQkxGRkJRVkVzUlVGQlVqdEpRVU5CTEV0QlFVc3NTMEZCVER0SlFVTkJMRk5CUVZNc1VVRkJWRHRKUVVOQkxGVkJRVlVzVFVGQlZqdEpRVU5CTEc5Q1FVRnZRaXhYUVVGd1FqdEpRVU5CTEdsQ1FVRnBRaXhYUVVGcVFqdEpRVU5CTEZsQlFWa3NWMEZCV2pzN1FVRkRRVHRKUVVORkxGTkJRVk1zUlVGQlZEczdRVUZEU2p0SlFVTkZMRTlCUVU4c1NVRkJVRHRKUVVOQkxFdEJRVXNzU1VGQlREczdRVUZEUmp0SlFVTkZMRXRCUVVzc1JVRkJURHRKUVVOQkxFOUJRVThzUlVGQlVEdEpRVU5CTEU5QlFVOHNTMEZCVUR0SlFVTkJMRkZCUVZFc1MwRkJVanRKUVVOQkxHRkJRV0VzUzBGQllqdEpRVU5CTEZsQlFUWkNMR2RDUVVFM1FqdEpRVU5CTEZWQlFWVXNUVUZCVmp0SlFVTkJMRmxCUVZrc1QwRkJXanRKUVVOQkxGTkJRVk1zUlVGQlZEczdPMEZCUnpSQ08wRkJRemxDTzBsQlEwVXNiVUpCUVRaQ0xGbEJRVGRDTzBsQlEwRXNWMEZCY1VJc1dVRkJja0k3TzBGQlJVWTdTVUZEUlN3d1FrRkJNRUlzUlVGQk1VSTdTVUZEUVN4clFrRkJhMElzUlVGQmJFSTdPMEZCUlVZN1NVRkRSU3d3UWtGQk1FSXNTMEZCTVVJN1NVRkRRU3hyUWtGQmEwSXNTMEZCYkVJN08wRkJSVVk3U1VGRFJTeGpRVUZqTEVsQlFXUTdTVUZEUVN4bFFVRmxMRWxCUVdZN096dEJRVWRLTzBWQlEwVXNVMEZCVXl4RlFVRlVPenRCUVVOR08wVkJRMFVzVDBGQlR5eE5RVUZRTzBWQlEwRXNUVUZCVFN4SlFVRk9PMFZCUTBFc1lVRkJZU3hQUVVGaU8wVkJRMEVzV1VGQldTeEpRVUZhTzBWQlEwRXNaMEpCUVdkQ0xFbEJRV2hDT3p0QlFVTkdPMFZCUTBVc1UwRkJVeXhGUVVGVU96dEJRVU5HTzBWQlEwVXNZVUZCWVN4TFFVRmlPenRCUVVOR08wVkJRMFVzUzBGQlN5eEZRVUZNTzBWQlEwRXNUMEZCVHl4RlFVRlFPMFZCUTBFc1lVRkJZU3hGUVVGaUlpd2labWxzWlNJNkluTjBlV3hsTG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxSVNCdWIzSnRZV3hwZW1VdVkzTnpJSFl6TGpBdU15QjhJRTFKVkNCTWFXTmxibk5sSUh3Z1oybDBhSFZpTG1OdmJTOXVaV052YkdGekwyNXZjbTFoYkdsNlpTNWpjM01nS2k5Y2JseHVMeW9xWEc0Z0tpQXhMaUJUWlhRZ1pHVm1ZWFZzZENCbWIyNTBJR1poYldsc2VTQjBieUJ6WVc1ekxYTmxjbWxtTGx4dUlDb2dNaTRnVUhKbGRtVnVkQ0JwVDFNZ1lXNWtJRWxGSUhSbGVIUWdjMmw2WlNCaFpHcDFjM1FnWVdaMFpYSWdaR1YyYVdObElHOXlhV1Z1ZEdGMGFXOXVJR05vWVc1blpTeGNiaUFxSUNBZ0lIZHBkR2h2ZFhRZ1pHbHpZV0pzYVc1bklIVnpaWElnZW05dmJTNWNiaUFxTDF4dVhHNW9kRzFzWEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJ6WVc1ekxYTmxjbWxtSUM4dklERmNiaUFnTFcxekxYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklERXdNQ1VnTHk4Z01seHVJQ0F0ZDJWaWEybDBMWFJsZUhRdGMybDZaUzFoWkdwMWMzUTZJREV3TUNVZ0x5OGdNbHh1WEc0dktpcGNiaUFxSUZKbGJXOTJaU0JrWldaaGRXeDBJRzFoY21kcGJpNWNiaUFxTDF4dVhHNWliMlI1WEc0Z0lHMWhjbWRwYmpvZ01GeHVYRzR2S2lCSVZFMU1OU0JrYVhOd2JHRjVJR1JsWm1sdWFYUnBiMjV6WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlFTnZjbkpsWTNRZ1lHSnNiMk5yWUNCa2FYTndiR0Y1SUc1dmRDQmtaV1pwYm1Wa0lHWnZjaUJoYm5rZ1NGUk5URFVnWld4bGJXVnVkQ0JwYmlCSlJTQTRMemt1WEc0Z0tpQkRiM0p5WldOMElHQmliRzlqYTJBZ1pHbHpjR3hoZVNCdWIzUWdaR1ZtYVc1bFpDQm1iM0lnWUdSbGRHRnBiSE5nSUc5eUlHQnpkVzF0WVhKNVlDQnBiaUJKUlNBeE1DOHhNVnh1SUNvZ1lXNWtJRVpwY21WbWIzZ3VYRzRnS2lCRGIzSnlaV04wSUdCaWJHOWphMkFnWkdsemNHeGhlU0J1YjNRZ1pHVm1hVzVsWkNCbWIzSWdZRzFoYVc1Z0lHbHVJRWxGSURFeExseHVJQ292WEc1Y2JtRnlkR2xqYkdVc1hHNWhjMmxrWlN4Y2JtUmxkR0ZwYkhNc1hHNW1hV2RqWVhCMGFXOXVMRnh1Wm1sbmRYSmxMRnh1Wm05dmRHVnlMRnh1YUdWaFpHVnlMRnh1YUdkeWIzVndMRnh1YldGcGJpeGNibTFsYm5Vc1hHNXVZWFlzWEc1elpXTjBhVzl1TEZ4dWMzVnRiV0Z5ZVZ4dUlDQmthWE53YkdGNU9pQmliRzlqYTF4dVhHNHZLaXBjYmlBcUlERXVJRU52Y25KbFkzUWdZR2x1YkdsdVpTMWliRzlqYTJBZ1pHbHpjR3hoZVNCdWIzUWdaR1ZtYVc1bFpDQnBiaUJKUlNBNEx6a3VYRzRnS2lBeUxpQk9iM0p0WVd4cGVtVWdkbVZ5ZEdsallXd2dZV3hwWjI1dFpXNTBJRzltSUdCd2NtOW5jbVZ6YzJBZ2FXNGdRMmh5YjIxbExDQkdhWEpsWm05NExDQmhibVFnVDNCbGNtRXVYRzRnS2k5Y2JseHVZWFZrYVc4c1hHNWpZVzUyWVhNc1hHNXdjbTluY21WemN5eGNiblpwWkdWdlhHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXlBdkx5QXhYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaU0F2THlBeVhHNWNiaThxS2x4dUlDb2dVSEpsZG1WdWRDQnRiMlJsY200Z1luSnZkM05sY25NZ1puSnZiU0JrYVhOd2JHRjVhVzVuSUdCaGRXUnBiMkFnZDJsMGFHOTFkQ0JqYjI1MGNtOXNjeTVjYmlBcUlGSmxiVzkyWlNCbGVHTmxjM01nYUdWcFoyaDBJR2x1SUdsUFV5QTFJR1JsZG1salpYTXVYRzRnS2k5Y2JseHVZWFZrYVc4NmJtOTBLRnRqYjI1MGNtOXNjMTBwWEc0Z0lHUnBjM0JzWVhrNklHNXZibVZjYmlBZ2FHVnBaMmgwT2lBd1hHNWNiaThxS2x4dUlDb2dRV1JrY21WemN5QmdXMmhwWkdSbGJsMWdJSE4wZVd4cGJtY2dibTkwSUhCeVpYTmxiblFnYVc0Z1NVVWdPQzg1THpFd0xseHVJQ29nU0dsa1pTQjBhR1VnWUhSbGJYQnNZWFJsWUNCbGJHVnRaVzUwSUdsdUlFbEZJRGd2T1M4eE1DOHhNU3dnVTJGbVlYSnBMQ0JoYm1RZ1JtbHlaV1p2ZUNBOElESXlMbHh1SUNvdlhHNWNibHRvYVdSa1pXNWRMRnh1ZEdWdGNHeGhkR1ZjYmlBZ1pHbHpjR3hoZVRvZ2JtOXVaVnh1WEc0dktpQk1hVzVyYzF4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9xWEc0Z0tpQXhMaUJTWlcxdmRtVWdkR2hsSUdkeVlYa2dZbUZqYTJkeWIzVnVaQ0JqYjJ4dmNpQm1jbTl0SUdGamRHbDJaU0JzYVc1cmN5QnBiaUJKUlNBeE1DNWNiaUFxSURJdUlFbHRjSEp2ZG1VZ2NtVmhaR0ZpYVd4cGRIa2diMllnWm05amRYTmxaQ0JsYkdWdFpXNTBjeUIzYUdWdUlIUm9aWGtnWVhKbElHRnNjMjhnYVc1Y2JpQXFJQ0FnSUdGdUlHRmpkR2wyWlM5b2IzWmxjaUJ6ZEdGMFpTNWNiaUFxTDF4dVhHNWhYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1MElDOHZJREZjYmx4dUlDQW1PbUZqZEdsMlpTeGNiaUFnSmpwb2IzWmxjbHh1SUNBZ0lHOTFkR3hwYm1VNklEQWdMeThnTWx4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJpQnViMjVsWEc1Y2JpOHFJRlJsZUhRdGJHVjJaV3dnYzJWdFlXNTBhV056WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ2MzUjViR2x1WnlCdWIzUWdjSEpsYzJWdWRDQnBiaUJKUlNBNEx6a3ZNVEF2TVRFc0lGTmhabUZ5YVN3Z1lXNWtJRU5vY205dFpTNWNiaUFxTDF4dVhHNWhZbUp5VzNScGRHeGxYVnh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ1pHOTBkR1ZrWEc1Y2JpOHFLbHh1SUNvZ1FXUmtjbVZ6Y3lCemRIbHNaU0J6WlhRZ2RHOGdZR0p2YkdSbGNtQWdhVzRnUm1seVpXWnZlQ0EwS3l3Z1UyRm1ZWEpwTENCaGJtUWdRMmh5YjIxbExseHVJQ292WEc1Y2JtSXNYRzV6ZEhKdmJtZGNiaUFnWm05dWRDMTNaV2xuYUhRNklHSnZiR1JjYmx4dUx5b3FYRzRnS2lCQlpHUnlaWE56SUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdVMkZtWVhKcElHRnVaQ0JEYUhKdmJXVXVYRzRnS2k5Y2JseHVaR1p1WEc0Z0lHWnZiblF0YzNSNWJHVTZJR2wwWVd4cFkxeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdkbUZ5YVdGaWJHVWdZR2d4WUNCbWIyNTBMWE5wZW1VZ1lXNWtJRzFoY21kcGJpQjNhWFJvYVc0Z1lITmxZM1JwYjI1Z0lHRnVaQ0JnWVhKMGFXTnNaV0JjYmlBcUlHTnZiblJsZUhSeklHbHVJRVpwY21WbWIzZ2dOQ3NzSUZOaFptRnlhU3dnWVc1a0lFTm9jbTl0WlM1Y2JpQXFMMXh1WEc0dkx5Qm9NVnh1THk4Z0lDQm1iMjUwTFhOcGVtVTZJREpsYlZ4dUx5OGdJQ0J0WVhKbmFXNDZJREF1TmpkbGJTQXdYRzVjYmk4cUtseHVJQ29nUVdSa2NtVnpjeUJ6ZEhsc2FXNW5JRzV2ZENCd2NtVnpaVzUwSUdsdUlFbEZJRGd2T1M1Y2JpQXFMMXh1WEc1dFlYSnJYRzRnSUdKaFkydG5jbTkxYm1RNklDTm1aakJjYmlBZ1kyOXNiM0k2SUNNd01EQmNibHh1THlvcVhHNGdLaUJCWkdSeVpYTnpJR2x1WTI5dWMybHpkR1Z1ZENCaGJtUWdkbUZ5YVdGaWJHVWdabTl1ZENCemFYcGxJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxTDF4dVhHNXpiV0ZzYkZ4dUlDQm1iMjUwTFhOcGVtVTZJQzQzTlhKbGJWeHVYRzR2S2lwY2JpQXFJRkJ5WlhabGJuUWdZSE4xWW1BZ1lXNWtJR0J6ZFhCZ0lHRm1abVZqZEdsdVp5QmdiR2x1WlMxb1pXbG5hSFJnSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVYRzV6ZFdJc1hHNXpkWEJjYmlBZ1ptOXVkQzF6YVhwbE9pQXVOWEpsYlZ4dUlDQnNhVzVsTFdobGFXZG9kRG9nTUZ4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVmNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJR0poYzJWc2FXNWxYRzVjYm5OMWNGeHVJQ0IwYjNBNklDMHdMalZ5WlcxY2JseHVjM1ZpWEc0Z0lHSnZkSFJ2YlRvZ0xUQXVNalZ5WlcxY2JseHVMeW9nUlcxaVpXUmtaV1FnWTI5dWRHVnVkRnh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnWW05eVpHVnlJSGRvWlc0Z2FXNXphV1JsSUdCaFlDQmxiR1Z0Wlc1MElHbHVJRWxGSURndk9TOHhNQzVjYmlBcUwxeHVYRzVwYldkY2JpQWdZbTl5WkdWeU9pQXdYRzVjYmk4cUtseHVJQ29nUTI5eWNtVmpkQ0J2ZG1WeVpteHZkeUJ1YjNRZ2FHbGtaR1Z1SUdsdUlFbEZJRGt2TVRBdk1URXVYRzRnS2k5Y2JseHVjM1puT201dmRDZzZjbTl2ZENsY2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJseHVYRzR2S2lCSGNtOTFjR2x1WnlCamIyNTBaVzUwWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ2JXRnlaMmx1SUc1dmRDQndjbVZ6Wlc1MElHbHVJRWxGSURndk9TQmhibVFnVTJGbVlYSnBMbHh1SUNvdlhHNWNibVpwWjNWeVpWeHVJQ0J0WVhKbmFXNDZJREZsYlNBME1IQjRYRzVjYmk4cUtseHVJQ29nUVdSa2NtVnpjeUJrYVdabVpYSmxibU5sY3lCaVpYUjNaV1Z1SUVacGNtVm1iM2dnWVc1a0lHOTBhR1Z5SUdKeWIzZHpaWEp6TGx4dUlDb3ZYRzVjYm1oeVhHNGdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NFhHNGdJR2hsYVdkb2REb2dNRnh1WEc0dktpcGNiaUFxSUVOdmJuUmhhVzRnYjNabGNtWnNiM2NnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNvdlhHNWNibkJ5WlZ4dUlDQnZkbVZ5Wm14dmR6b2dZWFYwYjF4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ2IyUmtJR0JsYldBdGRXNXBkQ0JtYjI1MElITnBlbVVnY21WdVpHVnlhVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVYRzVqYjJSbExGeHVhMkprTEZ4dWNISmxMRnh1YzJGdGNGeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ2JXOXViM053WVdObExDQnRiMjV2YzNCaFkyVmNiaUFnWm05dWRDMXphWHBsT2lBeFpXMWNibHh1THlvZ1JtOXliWE5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ1MyNXZkMjRnYkdsdGFYUmhkR2x2YmpvZ1lua2daR1ZtWVhWc2RDd2dRMmh5YjIxbElHRnVaQ0JUWVdaaGNta2diMjRnVDFNZ1dDQmhiR3h2ZHlCMlpYSjVJR3hwYldsMFpXUmNiaUFxSUhOMGVXeHBibWNnYjJZZ1lITmxiR1ZqZEdBc0lIVnViR1Z6Y3lCaElHQmliM0prWlhKZ0lIQnliM0JsY25SNUlHbHpJSE5sZEM1Y2JpQXFMMXh1WEc0dktpcGNiaUFxSURFdUlFTnZjbkpsWTNRZ1kyOXNiM0lnYm05MElHSmxhVzVuSUdsdWFHVnlhWFJsWkM1Y2JpQXFJQ0FnSUV0dWIzZHVJR2x6YzNWbE9pQmhabVpsWTNSeklHTnZiRzl5SUc5bUlHUnBjMkZpYkdWa0lHVnNaVzFsYm5SekxseHVJQ29nTWk0Z1EyOXljbVZqZENCbWIyNTBJSEJ5YjNCbGNuUnBaWE1nYm05MElHSmxhVzVuSUdsdWFHVnlhWFJsWkM1Y2JpQXFJRE11SUVGa1pISmxjM01nYldGeVoybHVjeUJ6WlhRZ1pHbG1abVZ5Wlc1MGJIa2dhVzRnUm1seVpXWnZlQ0EwS3l3Z1UyRm1ZWEpwTENCaGJtUWdRMmh5YjIxbExseHVJQ292WEc1Y2JtSjFkSFJ2Yml4Y2JtbHVjSFYwTEZ4dWIzQjBaM0p2ZFhBc1hHNXpaV3hsWTNRc1hHNTBaWGgwWVhKbFlWeHVJQ0JqYjJ4dmNqb2dhVzVvWlhKcGRDQXZMeUF4WEc0Z0lHWnZiblE2SUdsdWFHVnlhWFFnTHk4Z01seHVJQ0J0WVhKbmFXNDZJREFnTHk4Z00xeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdZRzkyWlhKbWJHOTNZQ0J6WlhRZ2RHOGdZR2hwWkdSbGJtQWdhVzRnU1VVZ09DODVMekV3THpFeExseHVJQ292WEc1Y2JtSjFkSFJ2Ymx4dUlDQnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pWeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdhVzVqYjI1emFYTjBaVzUwSUdCMFpYaDBMWFJ5WVc1elptOXliV0FnYVc1b1pYSnBkR0Z1WTJVZ1ptOXlJR0JpZFhSMGIyNWdJR0Z1WkNCZ2MyVnNaV04wWUM1Y2JpQXFJRUZzYkNCdmRHaGxjaUJtYjNKdElHTnZiblJ5YjJ3Z1pXeGxiV1Z1ZEhNZ1pHOGdibTkwSUdsdWFHVnlhWFFnWUhSbGVIUXRkSEpoYm5ObWIzSnRZQ0IyWVd4MVpYTXVYRzRnS2lCRGIzSnlaV04wSUdCaWRYUjBiMjVnSUhOMGVXeGxJR2x1YUdWeWFYUmhibU5sSUdsdUlFWnBjbVZtYjNnc0lFbEZJRGd2T1M4eE1DOHhNU3dnWVc1a0lFOXdaWEpoTGx4dUlDb2dRMjl5Y21WamRDQmdjMlZzWldOMFlDQnpkSGxzWlNCcGJtaGxjbWwwWVc1alpTQnBiaUJHYVhKbFptOTRMbHh1SUNvdlhHNWNibUoxZEhSdmJpeGNibk5sYkdWamRGeHVJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dibTl1WlZ4dVhHNHZLaXBjYmlBcUlERXVJRUYyYjJsa0lIUm9aU0JYWldKTGFYUWdZblZuSUdsdUlFRnVaSEp2YVdRZ05DNHdMaW9nZDJobGNtVWdLRElwSUdSbGMzUnliM2x6SUc1aGRHbDJaU0JnWVhWa2FXOWdYRzRnS2lBZ0lDQmhibVFnWUhacFpHVnZZQ0JqYjI1MGNtOXNjeTVjYmlBcUlESXVJRU52Y25KbFkzUWdhVzVoWW1sc2FYUjVJSFJ2SUhOMGVXeGxJR05zYVdOcllXSnNaU0JnYVc1d2RYUmdJSFI1Y0dWeklHbHVJR2xQVXk1Y2JpQXFJRE11SUVsdGNISnZkbVVnZFhOaFltbHNhWFI1SUdGdVpDQmpiMjV6YVhOMFpXNWplU0J2WmlCamRYSnpiM0lnYzNSNWJHVWdZbVYwZDJWbGJpQnBiV0ZuWlMxMGVYQmxYRzRnS2lBZ0lDQmdhVzV3ZFhSZ0lHRnVaQ0J2ZEdobGNuTXVYRzRnS2k5Y2JseHVZblYwZEc5dUxGeHVhSFJ0YkNCcGJuQjFkRnQwZVhCbFBWd2lZblYwZEc5dVhDSmRMQ0F2THlBeFhHNXBibkIxZEZ0MGVYQmxQVndpY21WelpYUmNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2ljM1ZpYldsMFhDSmRYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ1luVjBkRzl1SUM4dklESmNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlJQzh2SUROY2JseHVMeW9xWEc0Z0tpQlNaUzF6WlhRZ1pHVm1ZWFZzZENCamRYSnpiM0lnWm05eUlHUnBjMkZpYkdWa0lHVnNaVzFsYm5SekxseHVJQ292WEc1Y2JtSjFkSFJ2Ymx0a2FYTmhZbXhsWkYwc1hHNW9kRzFzSUdsdWNIVjBXMlJwYzJGaWJHVmtYVnh1SUNCamRYSnpiM0k2SUdSbFptRjFiSFJjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnYVc1dVpYSWdjR0ZrWkdsdVp5QmhibVFnWW05eVpHVnlJR2x1SUVacGNtVm1iM2dnTkNzdVhHNGdLaTljYmx4dVluVjBkRzl1T2pvdGJXOTZMV1p2WTNWekxXbHVibVZ5TEZ4dWFXNXdkWFE2T2kxdGIzb3RabTlqZFhNdGFXNXVaWEpjYmlBZ1ltOXlaR1Z5T2lBd1hHNGdJSEJoWkdScGJtYzZJREJjYmx4dUx5b3FYRzRnS2lCQlpHUnlaWE56SUVacGNtVm1iM2dnTkNzZ2MyVjBkR2x1WnlCZ2JHbHVaUzFvWldsbmFIUmdJRzl1SUdCcGJuQjFkR0FnZFhOcGJtY2dZQ0ZwYlhCdmNuUmhiblJnSUdsdVhHNGdLaUIwYUdVZ1ZVRWdjM1I1YkdWemFHVmxkQzVjYmlBcUwxeHVYRzVwYm5CMWRGeHVJQ0JzYVc1bExXaGxhV2RvZERvZ2JtOXliV0ZzWEc1Y2JpOHFLbHh1SUNvZ1NYUW5jeUJ5WldOdmJXMWxibVJsWkNCMGFHRjBJSGx2ZFNCa2IyNG5kQ0JoZEhSbGJYQjBJSFJ2SUhOMGVXeGxJSFJvWlhObElHVnNaVzFsYm5SekxseHVJQ29nUm1seVpXWnZlQ2R6SUdsdGNHeGxiV1Z1ZEdGMGFXOXVJR1J2WlhOdUozUWdjbVZ6Y0dWamRDQmliM2d0YzJsNmFXNW5MQ0J3WVdSa2FXNW5MQ0J2Y2lCM2FXUjBhQzVjYmlBcVhHNGdLaUF4TGlCQlpHUnlaWE56SUdKdmVDQnphWHBwYm1jZ2MyVjBJSFJ2SUdCamIyNTBaVzUwTFdKdmVHQWdhVzRnU1VVZ09DODVMekV3TGx4dUlDb2dNaTRnVW1WdGIzWmxJR1Y0WTJWemN5QndZV1JrYVc1bklHbHVJRWxGSURndk9TOHhNQzVjYmlBcUwxeHVYRzVwYm5CMWRGdDBlWEJsUFZ3aVkyaGxZMnRpYjNoY0lsMHNYRzVwYm5CMWRGdDBlWEJsUFZ3aWNtRmthVzljSWwxY2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUNBdkx5QXhYRzRnSUhCaFpHUnBibWM2SURBZ0x5OGdNbHh1WEc0dktpcGNiaUFxSUVacGVDQjBhR1VnWTNWeWMyOXlJSE4wZVd4bElHWnZjaUJEYUhKdmJXVW5jeUJwYm1OeVpXMWxiblF2WkdWamNtVnRaVzUwSUdKMWRIUnZibk11SUVadmNpQmpaWEowWVdsdVhHNGdLaUJnWm05dWRDMXphWHBsWUNCMllXeDFaWE1nYjJZZ2RHaGxJR0JwYm5CMWRHQXNJR2wwSUdOaGRYTmxjeUIwYUdVZ1kzVnljMjl5SUhOMGVXeGxJRzltSUhSb1pWeHVJQ29nWkdWamNtVnRaVzUwSUdKMWRIUnZiaUIwYnlCamFHRnVaMlVnWm5KdmJTQmdaR1ZtWVhWc2RHQWdkRzhnWUhSbGVIUmdMbHh1SUNvdlhHNWNibWx1Y0hWMFczUjVjR1U5WENKdWRXMWlaWEpjSWwwNk9pMTNaV0pyYVhRdGFXNXVaWEl0YzNCcGJpMWlkWFIwYjI0c1hHNXBibkIxZEZ0MGVYQmxQVndpYm5WdFltVnlYQ0pkT2pvdGQyVmlhMmwwTFc5MWRHVnlMWE53YVc0dFluVjBkRzl1WEc0Z0lHaGxhV2RvZERvZ1lYVjBiMXh1WEc0dktpcGNiaUFxSURFdUlFRmtaSEpsYzNNZ1lHRndjR1ZoY21GdVkyVmdJSE5sZENCMGJ5QmdjMlZoY21Ob1ptbGxiR1JnSUdsdUlGTmhabUZ5YVNCaGJtUWdRMmh5YjIxbExseHVJQ29nTWk0Z1FXUmtjbVZ6Y3lCZ1ltOTRMWE5wZW1sdVoyQWdjMlYwSUhSdklHQmliM0prWlhJdFltOTRZQ0JwYmlCVFlXWmhjbWtnWVc1a0lFTm9jbTl0WlM1Y2JpQXFMMXh1WEc1cGJuQjFkRnQwZVhCbFBWd2ljMlZoY21Ob1hDSmRYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ2RHVjRkR1pwWld4a0lDOHZJREZjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZMjl1ZEdWdWRDMWliM2dnTHk4Z01seHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQnBibTVsY2lCd1lXUmthVzVuSUdGdVpDQnpaV0Z5WTJnZ1kyRnVZMlZzSUdKMWRIUnZiaUJwYmlCVFlXWmhjbWtnWVc1a0lFTm9jbTl0WlNCdmJpQlBVeUJZTGx4dUlDb2dVMkZtWVhKcElDaGlkWFFnYm05MElFTm9jbTl0WlNrZ1kyeHBjSE1nZEdobElHTmhibU5sYkNCaWRYUjBiMjRnZDJobGJpQjBhR1VnYzJWaGNtTm9JR2x1Y0hWMElHaGhjMXh1SUNvZ2NHRmtaR2x1WnlBb1lXNWtJR0IwWlhoMFptbGxiR1JnSUdGd2NHVmhjbUZ1WTJVcExseHVJQ292WEc1Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDA2T2kxM1pXSnJhWFF0YzJWaGNtTm9MV05oYm1ObGJDMWlkWFIwYjI0c1hHNXBibkIxZEZ0MGVYQmxQVndpYzJWaGNtTm9YQ0pkT2pvdGQyVmlhMmwwTFhObFlYSmphQzFrWldOdmNtRjBhVzl1WEc0Z0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dibTl1WlZ4dVhHNHZLaXBjYmlBcUlFUmxabWx1WlNCamIyNXphWE4wWlc1MElHSnZjbVJsY2l3Z2JXRnlaMmx1TENCaGJtUWdjR0ZrWkdsdVp5NWNiaUFxTDF4dVhHNW1hV1ZzWkhObGRGeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqWXpCak1HTXdYRzRnSUcxaGNtZHBiam9nTUNBeWNIaGNiaUFnY0dGa1pHbHVaem9nTUM0ek5XVnRJREF1TmpJMVpXMGdNQzQzTldWdFhHNWNiaThxS2x4dUlDb2dNUzRnUTI5eWNtVmpkQ0JnWTI5c2IzSmdJRzV2ZENCaVpXbHVaeUJwYm1obGNtbDBaV1FnYVc0Z1NVVWdPQzg1THpFd0x6RXhMbHh1SUNvZ01pNGdVbVZ0YjNabElIQmhaR1JwYm1jZ2MyOGdjR1Z2Y0d4bElHRnlaVzRuZENCallYVm5hSFFnYjNWMElHbG1JSFJvWlhrZ2VtVnlieUJ2ZFhRZ1ptbGxiR1J6WlhSekxseHVJQ292WEc1Y2JteGxaMlZ1WkZ4dUlDQmliM0prWlhJNklEQWdMeThnTVZ4dUlDQndZV1JrYVc1bk9pQXdJQzh2SURKY2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ1pHVm1ZWFZzZENCMlpYSjBhV05oYkNCelkzSnZiR3hpWVhJZ2FXNGdTVVVnT0M4NUx6RXdMekV4TGx4dUlDb3ZYRzVjYm5SbGVIUmhjbVZoWEc0Z0lHOTJaWEptYkc5M09pQmhkWFJ2WEc1Y2JpOHFLbHh1SUNvZ1JHOXVKM1FnYVc1b1pYSnBkQ0IwYUdVZ1lHWnZiblF0ZDJWcFoyaDBZQ0FvWVhCd2JHbGxaQ0JpZVNCaElISjFiR1VnWVdKdmRtVXBMbHh1SUNvZ1RrOVVSVG9nZEdobElHUmxabUYxYkhRZ1kyRnVibTkwSUhOaFptVnNlU0JpWlNCamFHRnVaMlZrSUdsdUlFTm9jbTl0WlNCaGJtUWdVMkZtWVhKcElHOXVJRTlUSUZndVhHNGdLaTljYmx4dWIzQjBaM0p2ZFhCY2JpQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUmNibHh1THlvZ1ZHRmliR1Z6WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCdGIzTjBJSE53WVdOcGJtY2dZbVYwZDJWbGJpQjBZV0pzWlNCalpXeHNjeTVjYmlBcUwxeHVYRzUwWVdKc1pWeHVJQ0JpYjNKa1pYSXRZMjlzYkdGd2MyVTZJR052Ykd4aGNITmxYRzRnSUdKdmNtUmxjaTF6Y0dGamFXNW5PaUF3WEc1Y2JuUmtMRnh1ZEdoY2JpQWdjR0ZrWkdsdVp6b2dNRnh1SWl3aUtseHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NFhHNGdJRzFoY21kcGJpQXdYRzVjYmlBZ0pqbzZZV1owWlhJc1hHNGdJQ1k2T21KbFptOXlaVnh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2hjYmx4dVhHNHZMeUJKVkVWTlUxeHVMeThnSUVsMFpXMXpJR0Z5WlNCaGJIZGhlWE1nWVNCVlRDQnZjaUJQVEM1Y2JsdGpiR0Z6Y3lvOUoxOWZhWFJsYlhNblhWeHVJQ0JzYVhOMExYTjBlV3hsT2lCdWIyNWxYRzRnSUcxaGNtZHBiam9nTUZ4dUlpd2lMeThnVWtWVFVFOU9VMGxXUlNCSlRVRkhSVk5jYm1sdFp5d2dhV1p5WVcxbExDQmxiV0psWkZ4dUlDQjNhV1IwYURvZ01UQXdKVnh1SWl3aUxtTnZiblJoYVc1bGNseHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abVhHNGdJRzFoY21kcGJqb2dNQ0JoZFhSdlhHNGdJRzFoZUMxM2FXUjBhRG9nTVRJd01IQjRYRzVjYmx4dVhHNWJZMnhoYzNNcVBTZGpiMnd0SjExY2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVdFkyVnNiRnh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxYRzVjYmx4dUx5OGdRMDlPVkVGSlRrVlNYRzR2THlBZ1ZHaHBjeUJwY3lCMWMyVmtJSFJ2SUdOdmJuTjBjbUZwYmlCMGFHVWdZMjl1ZEdWdWRDQnZaaUIwYUdVZ2MybDBaU0IwYnlCaElITjBZVzVrWVhKa0lIZHBaSFJvWEc1YlkyeGhjM01xUFNkZlgyTnZiblJoYVc1bGNpZGRYRzRnSUcxaGNtZHBiam9nTUNCaGRYUnZYRzRnSUcxaGVDMTNhV1IwYURvZ01USXdNSEI0WEc1Y2JseHVYRzR2THlCQmJHd2dZMjlzZFcxdWN5QXhJQzBnTVRJZ1lYSmxJRzFoWkdVZ2QybDBhQ0IwYUdseklHeHBkSFJzWlNCbWRXNWpkR2x2Ymx4dVkyOXNkVzF1Y3lBOUlERXlYRzVjYm1admNpQnBJR2x1SUNneExpNWpiMngxYlc1ektWeHVJQ0JiWTJ4aGMzTXFQV052YkMxN2FYMHRlMk52YkhWdGJuTjlYVnh1SUNBZ0lIZHBaSFJvT2lBb2FTOWpiMngxYlc1ektTQXFJREV3TUNWY2JseHVJQ0FnSUM4dllXUmtJR2x1WTJ4MVpHVWdiV1ZrYVdFZ2NYVmxjbWxsY3lCb1pYSmxYRzVjYmx4dUx5OGdZMjlzTFRFdE1USmNiaTh2SUdOdmJDMHlMVEV5WEc0dkx5QmpiMnd0TXkweE1seHVMeThnWTI5c0xUUXRNVEpjYmk4dklHTnZiQzAxTFRFeVhHNHZMeUJqYjJ3dE5pMHhNbHh1THk4Z1kyOXNMVGN0TVRKY2JpOHZJR052YkMwNExURXlYRzR2THlCamIyd3RPUzB4TWx4dUx5OGdZMjlzTFRFd0xURXlYRzR2THlCamIyd3RNVEV0TVRKY2JpOHZJR052YkMweE1pMHhNbHh1WEc0dWRHVnpkQzB0WTI5c0xUSXRNVEpjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2lCeVpXUmNiaUlzSWk4dklGWmhjbk5jYm1KaGMyVXRabTl1ZEMxemFYcGxJRDBnTWpCd2VGeHVZbUZ6WlMxc2FXNWxMV2hsYVdkb2RDQTlJREV1TlZ4dVhHNWNiaTh2SUZSNWNHVm1ZV05sYzF4dVhHNVRZVzV6SUQwZ2UxeHVJQ0JtYjI1ME9pQk9aWGR6SUVONVkyeGxYRndzSUhOaGJuTXRjMlZ5YVdZc1hHNGdJSGRsYVdkb2REb2dlMXh1SUNBZ0lHNXZjbTFoYkRvZ05EQXdMRnh1SUNBZ0lHSnZiR1E2SURjd01GeHVJQ0I5WEc1OVhHNWNibE5sY21sbUlEMGdlMXh1SUNCbWIyNTBPaUJRYkdGNVptRnBjaUJFYVhOd2JHRjVYRndzSUhObGNtbG1MRnh1SUNCM1pXbG5hSFE2SUh0Y2JpQWdJQ0J1YjNKdFlXdzZJRFF3TUN4Y2JpQWdJQ0JpYjJ4a09pQTNNREFzWEc0Z0lDQWdkV3gwY21FNklEa3dNRnh1SUNCOVhHNTlYRzVjYmx4dUx5OGdUR2x1WlNCb1pXbG5hSFFnWm5WdVkzUnBiMjVjYm14cGJtVXRhR1ZwWjJoMExXWjFibU4wYVc5dUtDbGNiaUFnWW1GelpTMW1iMjUwTFhOcGVtVWdLaUJpWVhObExXeHBibVV0YUdWcFoyaDBYRzVjYmx4dUx5OGdWbUZ5SUcxMWMzUWdZbVVnYzNCbFkybG1hV1ZrSUdGbWRHVnlJSEpsZEhWeWJtbHVaeUIwYUdVZ2JHbHVaUzFvWldsbmFIUWdablZ1WTNScGIyNWNibU5oYkMxc2FXNWxMV2hsYVdkb2RDQTlJR3hwYm1VdGFHVnBaMmgwTFdaMWJtTjBhVzl1S0NsY2JseHVYRzVvZEcxc1hHNGdJR1p2Ym5RdGMybDZaVG9nWW1GelpTMW1iMjUwTFhOcGVtVmNiaUFnTFcxdmVpMXZjM2d0Wm05dWRDMXpiVzl2ZEdocGJtYzZJR2R5WVhselkyRnNaVnh1SUNBdGQyVmlhMmwwTFdadmJuUXRjMjF2YjNSb2FXNW5PaUJoYm5ScFlXeHBZWE5sWkZ4dVhHNWNibUp2WkhsY2JpQWdZMjlzYjNJZ2JHVmhaRnh1SUNCbWIyNTBMV1poYldsc2VUb2dVMkZ1Y3k1bWIyNTBYRzRnSUd4cGJtVXRhR1ZwWjJoMElHSmhjMlV0YkdsdVpTMW9aV2xuYUhSY2JpQWdiV0Z5WjJsdUlEQmNibHh1WEc1YlkyeGhjM01xUFNkZlgyaGxZV1JwYm1jblhWeHVJQ0JqYjJ4dmNpQm5jbVZsYmx4dUlDQm1iMjUwTFdaaGJXbHNlVG9nVTJWeWFXWXVabTl1ZEZ4dUlDQm1iMjUwTFhOcGVtVWdNaTQxY21WdFhHNGdJR1p2Ym5RdGQyVnBaMmgwSUc1dmNtMWhiRnh1SUNCc2FXNWxMV2hsYVdkb2RDQXhYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMGdNbkpsYlZ4dVhHNWNiaTh2SUVGdVkyaHZjaUIwWlhoMFhHNWhYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpWeHVJQ0JqYjJ4dmNqb2daM0psWlc1Y2JseHVJQ0FtT21odmRtVnlYRzRnSUNBZ1kyOXNiM0k2SUc1cFoyaDBaM0psWlc1Y2JpQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1WY2JseHVYRzR2THlCQ2RYUjBiMjV6WEc1YlkyeGhjM01xUFNkZlgySjFkSFJ2YmlkZFhHNGdJR0p2Y21SbGNpQXljSGdnYzI5c2FXUWdaM0psWlc1Y2JpQWdZMjlzYjNJZ1ozSmxaVzVjYmlBZ1pHbHpjR3hoZVNCcGJteHBibVV0WW14dlkydGNiaUFnY0dGa1pHbHVaeUF1TlhKbGJTQXhjbVZ0WEc1Y2JpQWdKanBvYjNabGNseHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0lnWjNKbFpXNWNiaUFnSUNCamIyeHZjaUIzYUdsMFpWeHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpWeHVYRzVjYmk4dklFTnZiblJsYm5RZ1FYSmxZWE5jYmx0amJHRnpjeW85SjJOdmJuUmxiblFuWFZ4dUlDQXZMeUJCWkdRZ2JXRnlaMmx1SUdKdmRIUnZiU0IwYnlCaGJHd2daV3hsYldWdWRITWdhVzV6YVdSbElIUm9hWE1nWTI5dWRHRnBibVZ5WEc0Z0lDWWdQaUFxWEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlNBeExqVnlaVzFjYmlJc0lpTmtjbUYzWlhKY2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNpQmtZWEpyWjNKbFpXNWNiaUFnY0c5emFYUnBiMjRnWVdKemIyeDFkR1ZjYmlBZ2NtbG5hSFFnTUZ4dUlDQjBiM0FnTUZ4dVhHNGdJR2hsYVdkb2RDQXhNREFsWEc0Z0lIZHBaSFJvSURJd01IQjRYRzRnSUhvdGFXNWtaWGdnTWx4dVhHNGdJSFJ5WVc1elptOXliU0IwY21GdWMyeGhkR1ZZS0RJd01IQjRLVnh1SUNCMGNtRnVjMmwwYVc5dUlIUnlZVzV6Wm05eWJTQXVOWE1nWldGelpTMXBiaTF2ZFhSY2JseHVJQ0FtTG5Oc2FXUmxYRzRnSUNBZ2RISmhibk5tYjNKdElIUnlZVzV6YkdGMFpWZ29NQ2xjYmx4dUlDQmhYRzRnSUNBZ1ltOXlaR1Z5TFdKdmRIUnZiU0F4Y0hnZ2MyOXNhV1FnZDJocGRHVmNiaUFnSUNCamIyeHZjaUIzYUdsMFpWeHVJQ0FnSUdScGMzQnNZWGtnWW14dlkydGNiaUFnSUNCd1lXUmthVzVuSUM0M05YSmxiU0F3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iaUJqWlc1MFpYSmNibHh1SUNBZ0lDWTZhRzkyWlhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0lnYm1sbmFIUm5jbVZsYmx4dUlDQWdJQ0FnWTI5c2IzSWdkMmhwZEdWY2JseHVYRzRqZEc5bloyeGxYRzRnSUcxaGNtZHBiaTF5YVdkb2RDQXdYRzRnSUM4dmRtVnlkR2xqWVd3dFlXeHBaMjRnTGpoeVpXMWNiaUFnZEhKaGJuTnBkR2x2YmlCdFlYSm5hVzR0Y21sbmFIUWdMalZ6SUdWaGMyVXRhVzR0YjNWMFhHNWNiaU4wYjJkbmJHVXViVzkyWlZ4dUlDQnRZWEpuYVc0dGNtbG5hSFFnTWpBd2NIaGNiaUlzSWk1bWIyOTBaWEpjYmlBZ2NHRmtaR2x1WnkxMGIzQWdNbkpsYlZ4dVhHNGdJSEJjYmlBZ0lDQm1iMjUwTFhOcGVtVWdNVEZ3ZUZ4dUlDQWdJR052Ykc5eUlIUnBibHh1SUNBZ0lIUmxlSFF0WVd4cFoyNGdZMlZ1ZEdWeVhHNGlMQ0l1YzNCc1lYTm9MWEJoWjJWY2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNpQnpZVzVrWEc1Y2JpNW9aV0ZrWlhKY2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNpQjNhR2wwWlZ4dUlDQmthWE53YkdGNUlIUmhZbXhsWEc0Z0lHOTJaWEptYkc5M0lHaHBaR1JsYmx4dUlDQndZV1JrYVc1bklERnlaVzBnTW5KbGJWeHVJQ0IzYVdSMGFDQXhNREFsWEc1Y2JpQWdLMkpsYkc5M0tEVTFNSEI0S1Z4dUlDQWdJR1JwYzNCc1lYa2dZbXh2WTJ0Y2JseHVJQ0FtWDE5c2IyZHZMUzFqYjJ3dE5DMHhNbHh1SUNBZ0lIZHBaSFJvSURJd0pWeHVYRzRnSUNBZ0szUmhZbXhsZENncFhHNGdJQ0FnSUNCM2FXUjBhQ0ExTUNWY2JseHVJQ0FnSUN0aVpXeHZkeWcxTlRCd2VDbGNiaUFnSUNBZ0lIZHBaSFJvSURjd0pWeHVYRzRnSUNaZlgzTnZZMmxoYkMxdVlYWXRMV052YkMwNExURXlYRzRnSUNBZ2RHVjRkQzFoYkdsbmJpQnlhV2RvZEZ4dVhHNGdJQ0FnSzNSaFlteGxkQ2dwWEc0Z0lDQWdJQ0JrYVhOd2JHRjVJR2x1YkdsdVpTMWliRzlqYTF4dUlDQWdJQ0FnZDJsa2RHZ2dNVEF3SlZ4dVhHNGdJQ0FnSzJKbGJHOTNLRFUxTUhCNEtWeHVJQ0FnSUNBZ1pHbHpjR3hoZVNCcGJteHBibVV0WW14dlkydGNiaUFnSUNBZ0lIUmxlSFF0WVd4cFoyNGdZMlZ1ZEdWeVhHNGdJQ0FnSUNCM2FXUjBhQ0F4TURBbFhHNWNibHh1TG1KaGJtNWxjaTF6Y0d4aGMyaGNiaUFnWW1GamEyZHliM1Z1WkNCMWNtd29KMmx0Wnk5RGIyMXRaWEpqWlY4eE5UQmZhR1Z5YnkweExtcHdaeWNwSUc1dkxYSmxjR1ZoZENCalpXNTBaWElnWTJWdWRHVnlYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaU0JqYjNabGNseHVJQ0JvWldsbmFIUWdNelV3Y0hoY2JpQWdkMmxrZEdnZ01UQXdKVnh1WEc0Z0lDdDBZV0pzWlhRb0tWeHVJQ0FnSUdobGFXZG9kQ0F5TlRCd2VGeHVYRzRnSUN0aVpXeHZkeWcyTlRCd2VDbGNiaUFnSUNCb1pXbG5hSFFnTVRVd2NIaGNibHh1TG0xaGFXNWNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjaUJ6WVc1a1hHNGdJQzh2WkdsemNHeGhlU0IwWVdKc1pWeHVJQ0J3WVdSa2FXNW5MWFJ2Y0NBeExqVnlaVzFjYmlBZ2QybGtkR2dnTVRBd0pWeHVYRzRnSUM4dkpsOWZZMjl1ZEdGcGJtVnlYRzVjYmlBZ0psOWZjMmxrWldKaGNpMWpiMjUwWlc1MExTMWpiMnd0TWkweE1seHVJQ0FnSUhCaFpHUnBibWNnTUNBeGNtVnRYRzRnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjRnZEc5d1hHNWNiaUFnSUNBclltVnNiM2NvT0Rrd2NIZ3BYRzRnSUNBZ0lDQjNhV1IwYUNBME1DVmNibHh1SUNBZ0lDdGlaV3h2ZHlnMk9UQndlQ2xjYmlBZ0lDQWdJR1JwYzNCc1lYa2dZbXh2WTJ0Y2JpQWdJQ0FnSUhkcFpIUm9JREV3TUNWY2JseHVJQ0FtWDE5emFXUmxZbUZ5TFcxbFpHbGhYRzRnSUNBZ2RHVjRkQzFoYkdsbmJpQmpaVzUwWlhKY2JpQWdJQ0J3WEc0Z0lDQWdJQ0FyWW1Wc2IzY29Oamt3Y0hncFhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrZ2FXNXNhVzVsTFdKc2IyTnJYRzRnSUNBZ0lDQWdJSGRwWkhSb0lETXpKVnh1WEc0Z0lDWmZYMk52Ym5SbGJuUXRMV052YkMwMkxURXlYRzRnSUNBZ2NHRmtaR2x1WnlBd0lERnlaVzFjYmx4dUlDQWdJQ3RpWld4dmR5ZzRPVEJ3ZUNsY2JpQWdJQ0FnSUhkcFpIUm9JRFl3SlZ4dVhHNGdJQ0FnSzJKbGJHOTNLRFk1TUhCNEtWeHVJQ0FnSUNBZ1pHbHpjR3hoZVNCaWJHOWphMXh1SUNBZ0lDQWdkMmxrZEdnZ01UQXdKVnh1WEc0Z0lDWmZYMmhsWVdScGJtZGNiaUFnSUNCamIyeHZjaUJuY21WbGJseHVJQ0FnSUdadmJuUXRjMmw2WlNBeWNtVnRYRzVjYmlBZ0lDQXJZbVZzYjNjb05UVXdjSGdwWEc0Z0lDQWdJQ0JzYVc1bExXaGxhV2RvZENBeFhHNWNiaUFnSUNBclltVnNiM2NvTkRVd2NIZ3BYRzRnSUNBZ0lDQjBaWGgwTFdGc2FXZHVJR05sYm5SbGNseHVYRzRnSUNBZ2MzQmhibHh1SUNBZ0lDQWdLMkpsYkc5M0tEY3lOWEI0S1Z4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1SUdsdWJHbHVaUzFpYkc5amExeHVYRzRnSUNaZlgySjFkSFJ2Ymx4dUlDQWdJR0p2Y21SbGNpQXljSGdnYzI5c2FXUWdaM0psWlc1Y2JpQWdJQ0JqYjJ4dmNpQm5jbVZsYmx4dUlDQWdJR1JwYzNCc1lYa2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdjR0ZrWkdsdVp5NDFjbVZ0SURGeVpXMWNiaUFnSUNCMFpYaDBMV0ZzYVdkdUlHTmxiblJsY2x4dUlDQWdJSGRwWkhSb0lERXdNQ1ZjYmx4dUlDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJZ1ozSmxaVzVjYmlBZ0lDQWdJR052Ykc5eUlITnNZWFJsWEc0Z0lDQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1WY2JpSXNJaTh2SUZKMWNIUjFjbVZjYmk4dklFUnZZWEFnVFdWa2FXRWdjWFZsY25rZ2JXbDRhVzV6SUdadmNpQlRkSGxzZFhOY2JpOHZJR2gwZEhBNkx5OXFaVzVwZFhNdVoybDBhSFZpTG1sdkwzSjFjSFIxY21VdlhHNWNibUpoYzJVdFptOXVkQzF6YVhwbElEODlJREl3Y0hoY2JuSmhjM1JsY21selpTMXRaV1JwWVMxeGRXVnlhV1Z6SUQ4OUlHWmhiSE5sWEc1Y2JuSjFjSFIxY21VZ1BTQjdYRzRnSUhKaGMzUmxjbWx6WlMxdFpXUnBZUzF4ZFdWeWFXVnpPaUJ5WVhOMFpYSnBjMlV0YldWa2FXRXRjWFZsY21sbGMxeHVJQ0J0YjJKcGJHVXRZM1YwYjJabU9pQTBNREJ3ZUZ4dUlDQmtaWE5yZEc5d0xXTjFkRzltWmpvZ01UQTFNSEI0WEc0Z0lHaGtMV04xZEc5bVpqb2dNVGd3TUhCNFhHNGdJR1Z1WVdKc1pTMWxiUzFpY21WaGEzQnZhVzUwY3pvZ1ptRnNjMlZjYmlBZ1ltRnpaUzFtYjI1MExYTnBlbVU2SUdKaGMyVXRabTl1ZEMxemFYcGxYRzRnSUdGdWRHa3RiM1psY214aGNEb2dabUZzYzJWY2JpQWdaR1Z1YzJsMGVTMXhkV1Z5YVdWek9pQW5aSEJ3ZUNjZ0ozZGxZbXRwZENjZ0oyMXZlaWNnSjJSd2FTZGNiaUFnY21WMGFXNWhMV1JsYm5OcGRIazZJREV1TlZ4dUlDQjFjMlV0WkdWMmFXTmxMWGRwWkhSb09pQm1ZV3h6WlZ4dWZWeHVjblZ3ZEhWeVpTNXpZMkZzWlNBOUlEQWdLSEoxY0hSMWNtVXViVzlpYVd4bExXTjFkRzltWmlrZ05qQXdjSGdnT0RBd2NIZ2dLSEoxY0hSMWNtVXVaR1Z6YTNSdmNDMWpkWFJ2Wm1ZcElDaHlkWEIwZFhKbExtaGtMV04xZEc5bVppbGNibkoxY0hSMWNtVXVjMk5oYkdVdGJtRnRaWE1nUFNBbmVITW5JQ2R6SnlBbmJTY2dKMnduSUNkNGJDY2dKMmhrSjF4dVhHNHRhWE10YzNSeWFXNW5LSFpoYkNsY2JpQWdhV1lnZEhsd1pXOW1LSFpoYkNrZ2FYTWdibTkwSUNkMWJtbDBKMXh1SUNBZ0lHbG1JSFpoYkNCcGN5QmhJQ2R6ZEhKcGJtY25JRzl5SUhaaGJDQnBjeUJoSUNkcFpHVnVkQ2RjYmlBZ0lDQWdJSFJ5ZFdWY2JpQWdJQ0JsYkhObFhHNGdJQ0FnSUNCbVlXeHpaVnh1SUNCbGJITmxYRzRnSUNBZ1ptRnNjMlZjYmx4dUxXZGxkQzF6WTJGc1pTMXVkVzFpWlhJb2MyTmhiR1V0Ym1GdFpTbGNiaUFnWm05eUlHeHBjM1F0YVhSbGJTd2dhU0JwYmlCeWRYQjBkWEpsTG5OallXeGxMVzVoYldWelhHNGdJQ0FnYVdZZ2JHbHpkQzFwZEdWdElHbHpJSE5qWVd4bExXNWhiV1ZjYmlBZ0lDQWdJSEpsZEhWeWJpQnBJQ3NnTVZ4dUlDQnlaWFIxY200Z1ptRnNjMlZjYmx4dUxXTnZiblpsY25RdGRHOG9kRzh0ZFc1cGRDd2dkbUZzZFdVc0lHTnZiblJsZUhRZ1BTQnlkWEIwZFhKbExtSmhjMlV0Wm05dWRDMXphWHBsS1Z4dUlDQm1jbTl0TFhWdWFYUWdQU0IxYm1sMEtIWmhiSFZsS1Z4dUlDQnlaWFIxY200Z2RtRnNkV1VnYVdZZ2RHOHRkVzVwZENCcGN5Qm1jbTl0TFhWdWFYUmNiaUFnYVdZZ2RHOHRkVzVwZENCcGJpQW9KMlZ0SnlBbmNtVnRKeWxjYmlBZ0lDQnlaWFIxY200Z2RtRnNkV1VnYVdZZ1puSnZiUzExYm1sMElHbHVJQ2duWlcwbklDZHlaVzBuS1Z4dUlDQWdJSEpsZEhWeWJpQjFibWwwS0NoMllXeDFaU0F2SUdOdmJuUmxlSFFwTENCMGJ5MTFibWwwS1Z4dUlDQnBaaUIwYnkxMWJtbDBJR2x6SUNkd2VDZGNiaUFnSUNCeVpYUjFjbTRnZFc1cGRDZ29kbUZzZFdVZ0tpQmpiMjUwWlhoMEtTd2dKM0I0SnlsY2JseHVMVzl1TFhOallXeGxLRzRwWEc0Z0lISmxkSFZ5YmlCMWJtbDBLRzRwSUdseklDY25YRzVjYmkxc1lYSm5aWEl0ZEdoaGJpMXpZMkZzWlNodUtWeHVJQ0J5WlhSMWNtNGdLRzRnUGlBb2JHVnVaM1JvS0hKMWNIUjFjbVV1YzJOaGJHVXBJQzBnTVNrcElHRnVaQ0F0YjI0dGMyTmhiR1VvYmlsY2JseHVMV2x6TFhwbGNtOG9iaWxjYmlBZ2NtVjBkWEp1SUc0Z2FYTWdNRnh1WEc0dGIzWmxjbXhoY0MxemFHbG1kQ2hoYm5ScExXOTJaWEpzWVhBc0lHNHBYRzRnSUhOb2FXWjBMWFZ1YVhRZ1BTQjFibWwwS0c0cFhHNGdJR0Z1ZEdrdGIzWmxjbXhoY0NBOUlEQndlQ0IxYm14bGMzTWdZVzUwYVMxdmRtVnliR0Z3WEc0Z0lHRnVkR2t0YjNabGNteGhjQ0E5SURGd2VDQnBaaUJoYm5ScExXOTJaWEpzWVhBZ2FYTWdkSEoxWlZ4dUlDQnBaaUJzWlc1bmRHZ29ZVzUwYVMxdmRtVnliR0Z3S1NCcGN5QXhYRzRnSUNBZ2NtVjBkWEp1SUMxamIyNTJaWEowTFhSdktITm9hV1owTFhWdWFYUXNJR0Z1ZEdrdGIzWmxjbXhoY0NsY2JpQWdabTl5SUhaaGJDQnBiaUJoYm5ScExXOTJaWEpzWVhCY2JpQWdJQ0J5WlhSMWNtNGdkbUZzSUdsbUlIVnVhWFFvZG1Gc0tTQnBjeUJ6YUdsbWRDMTFibWwwWEc1Y2JpMWhaR3AxYzNRdGIzWmxjbXhoY0NoaGJuUnBMVzkyWlhKc1lYQXNJRzRzSUhOcFpHVWdQU0FuYldsdUp5bGNiaUFnTFhOb2FXWjBJRDBnTFc5MlpYSnNZWEF0YzJocFpuUW9ZVzUwYVMxdmRtVnliR0Z3TENCdUtWeHVJQ0JwWmlBb2MybGtaU0JwY3lBbmJXbHVKeUJoYm1RZ0xYTm9hV1owSUQ0Z01Da2diM0lnS0hOcFpHVWdhWE1nSjIxaGVDY2dZVzVrSUMxemFHbG1kQ0E4SURBcFhHNGdJQ0FnYmlBOUlHNGdLeUF0YzJocFpuUmNiaUFnY21WMGRYSnVJRzVjYmx4dUxXbHpMWEJ2YzJsMGFYWmxLRzRwWEc0Z0lISmxkSFZ5YmlCdUlENDlJREJjYmx4dUxXUmxibk5wZEhrdGNYVmxjbWxsY3loa1pXNXphWFI1S1Z4dUlDQnBaaUIwZVhCbGIyWW9aR1Z1YzJsMGVTa2dhWE1nYm05MElDZDFibWwwSjF4dUlDQWdJR2xtSUc1dmRDQXRhWE10YzNSeWFXNW5LR1JsYm5OcGRIa3BYRzRnSUNBZ0lDQmtaVzV6YVhSNUlEMGdKeVZ6SnlBbElHUmxibk5wZEhsY2JpQWdaR1Z1YzJsMGVTQTlJSEoxY0hSMWNtVXVjbVYwYVc1aExXUmxibk5wZEhrZ2FXWWdaR1Z1YzJsMGVTQnBjeUFuY21WMGFXNWhKMXh1SUNCeGRXVnlhV1Z6SUQwZ0tDbGNiaUFnWm05eUlIRjFaWEo1SUdsdUlISjFjSFIxY21VdVpHVnVjMmwwZVMxeGRXVnlhV1Z6WEc0Z0lDQWdhV1lnY1hWbGNua2dhWE1nSjNkbFltdHBkQ2RjYmlBZ0lDQWdJSEIxYzJnb2NYVmxjbWxsY3l3Z0p5Z3RkMlZpYTJsMExXMXBiaTFrWlhacFkyVXRjR2w0Wld3dGNtRjBhVzg2SUNWektTY2dKU0FvWkdWdWMybDBlU2twWEc0Z0lDQWdaV3h6WlNCcFppQnhkV1Z5ZVNCcGN5QW5iVzk2SjF4dUlDQWdJQ0FnY0hWemFDaHhkV1Z5YVdWekxDQW5LRzFwYmkwdGJXOTZMV1JsZG1salpTMXdhWGhsYkMxeVlYUnBiem9nSlhNcEp5QWxJQ2hrWlc1emFYUjVLU2xjYmlBZ0lDQmxiSE5sSUdsbUlIRjFaWEo1SUdseklDZHZKMXh1SUNBZ0lDQWdjSFZ6YUNoeGRXVnlhV1Z6TENBbktDMXZMVzFwYmkxa1pYWnBZMlV0Y0dsNFpXd3RjbUYwYVc4NklDVnpMekVwSnlBbElDaGtaVzV6YVhSNUtTbGNiaUFnSUNCbGJITmxJR2xtSUhGMVpYSjVJR2x6SUNkeVlYUnBieWRjYmlBZ0lDQWdJSEIxYzJnb2NYVmxjbWxsY3l3Z0p5aHRhVzR0WkdWMmFXTmxMWEJwZUdWc0xYSmhkR2x2T2lBbGN5a25JQ1VnS0dSbGJuTnBkSGtwS1Z4dUlDQWdJR1ZzYzJVZ2FXWWdjWFZsY25rZ2FYTWdKMlJ3YVNkY2JpQWdJQ0FnSUdsbUlDMXBjeTF6ZEhKcGJtY29aR1Z1YzJsMGVTbGNiaUFnSUNBZ0lDQWdaR1Z1YzJsMGVUMWpiMjUyWlhKMEtHUmxibk5wZEhrcFhHNGdJQ0FnSUNCd2RYTm9LSEYxWlhKcFpYTXNJQ2NvYldsdUxYSmxjMjlzZFhScGIyNDZJQ1Z6WkhCcEtTY2dKU0FvY205MWJtUW9aR1Z1YzJsMGVTQXFJRGsyTENBeEtTa3BYRzRnSUNBZ1pXeHpaU0JwWmlCeGRXVnllU0JwY3lBblpIQndlQ2RjYmlBZ0lDQWdJSEIxYzJnb2NYVmxjbWxsY3l3Z0p5aHRhVzR0Y21WemIyeDFkR2x2YmpvZ0pYTmtjSEI0S1NjZ0pTQW9aR1Z1YzJsMGVTa3BYRzRnSUhKbGRIVnliaUJ4ZFdWeWFXVnpYRzVjYm1OeVpXRjBaUzFtWVd4c1ltRmpheTFqYkdGemN5aHpaV3hsWTNSbFpDd2dZMnhoYzNNcFhHNGdJQzk3SnljZ0t5QmpiR0Z6Y3lBcklDY2dKeUFySUhObGJHVmpkR1ZrZlZ4dUlDQWdJSHRpYkc5amEzMWNibHh1THk4Z0sySmxkSGRsWlc0b2JXbHVMQ0J0WVhncFhHNHZMeUIxYzJGblpTQW9jMk5oYkdVZ1kyRnVJR0psSUcxcGVHVmtJSGRwZEdnZ1kzVnpkRzl0SUhaaGJIVmxjeWs2WEc0dkx5QWdJQzBnSzJKbGRIZGxaVzRvTVN3Z015a2djMk5oYkdVNmMyTmhiR1ZjYmk4dklDQWdMU0FyWW1WMGQyVmxiaWd3TENBektTQXdJSGRwWkhSb09uTmpZV3hsWEc0dkx5QWdJQzBnSzJKbGRIZGxaVzRvTWpBd2NIZ3NJRFV3TUhCNEtTQmpkWE4wYjIwNlkzVnpkRzl0WEc0dkx5QWdJQzBnSzJKbGRIZGxaVzRvTUN3Z016QXdjSGdwSURBZ2QybGtkR2c2WTNWemRHOXRYRzR2THlBZ0lDMGdLMkpsZEhkbFpXNG9NU3dnTXpBd2NIZ3BJSE5qWVd4bE9tTjFjM1J2YlZ4dUx5OGdJQ0F0SUN0aVpYUjNaV1Z1S0RJd01IQjRMQ0EwS1NCamRYTjBiMjA2YzJOaGJHVmNibHh1WW1WMGQyVmxiaWh0YVc0c0lHMWhlQ3dnWVc1MGFTMXZkbVZ5YkdGd0lEMGdjblZ3ZEhWeVpTNWhiblJwTFc5MlpYSnNZWEFzSUdSbGJuTnBkSGtnUFNCdWRXeHNMQ0J2Y21sbGJuUmhkR2x2YmlBOUlHNTFiR3dzSUhWelpTMWtaWFpwWTJVdGQybGtkR2dnUFNCeWRYQjBkWEpsTG5WelpTMWtaWFpwWTJVdGQybGtkR2dzSUdaaGJHeGlZV05yTFdOc1lYTnpJRDBnYm5Wc2JDbGNiaUFnYzJWc1pXTjBaV1FnUFNCelpXeGxZM1J2Y2lncFhHNWNiaUFnYVdZZ0xXbHpMWE4wY21sdVp5aHZjbWxsYm5SaGRHbHZiaWxjYmlBZ0lDQnZjbWxsYm5SaGRHbHZiaUE5SUdOdmJuWmxjblFvYjNKcFpXNTBZWFJwYjI0cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb1pHVnVjMmwwZVNsY2JpQWdJQ0JrWlc1emFYUjVJRDBnWTI5dWRtVnlkQ2hrWlc1emFYUjVLVnh1SUNCcFppQXRhWE10YzNSeWFXNW5LRzFwYmlsY2JpQWdJQ0J0YVc0Z1BTQXRaMlYwTFhOallXeGxMVzUxYldKbGNpaHRhVzRwWEc0Z0lHbG1JQzFwY3kxemRISnBibWNvYldGNEtWeHVJQ0FnSUcxaGVDQTlJQzFuWlhRdGMyTmhiR1V0Ym5WdFltVnlLRzFoZUNsY2JseHVJQ0F0YldsdUlEMGdjblZ3ZEhWeVpTNXpZMkZzWlZ0dGFXNGdMU0F4WFNCMWJteGxjM01nTFdsekxYcGxjbThvYldsdUtTQnZjaUFvYm05MElDMXZiaTF6WTJGc1pTaHRhVzRwS1Z4dUlDQXRiV0Y0SUQwZ2NuVndkSFZ5WlM1elkyRnNaVnR0WVhoZElIVnViR1Z6Y3lCdWIzUWdMVzl1TFhOallXeGxLRzFoZUNsY2JpQWdMVzFwYmlBL1BTQnRhVzVjYmlBZ0xXMWhlQ0EvUFNCdFlYaGNibHh1SUNCcFppQW9jblZ3ZEhWeVpTNXlZWE4wWlhKcGMyVXRiV1ZrYVdFdGNYVmxjbWxsY3lsY2JpQWdJQ0JwWmlCdWIzUWdLR1JsYm5OcGRIa2diM0lnTFcxaGVDQnZjaUJ2Y21sbGJuUmhkR2x2YmlsY2JpQWdJQ0FnSUh0aWJHOWphMzFjYmlBZ1pXeHpaVnh1SUNBZ0lHTnZibVJwZEdsdmJpQTlJQ2R2Ym14NUlITmpjbVZsYmlkY2JpQWdJQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9JRDBnZFhObExXUmxkbWxqWlMxM2FXUjBhQ0EvSUNka1pYWnBZMlV0SnlBNklDY25YRzRnSUNBZ2RXNXNaWE56SUMxdGFXNGdhWE1nTUZ4dUlDQWdJQ0FnTFcxcGJpQTlJQzFqYjI1MlpYSjBMWFJ2S0NkbGJTY3NJQzF0YVc0cElHbG1JSEoxY0hSMWNtVXVaVzVoWW14bExXVnRMV0p5WldGcmNHOXBiblJ6WEc0Z0lDQWdJQ0F0YldsdUlEMGdMV0ZrYW5WemRDMXZkbVZ5YkdGd0tHRnVkR2t0YjNabGNteGhjQ3dnTFcxcGJpd2djMmxrWlRvZ0oyMXBiaWNwWEc0Z0lDQWdJQ0JqYjI1a2FYUnBiMjRnUFNCamIyNWthWFJwYjI0Z0t5QW5JR0Z1WkNBb2JXbHVMU2NnS3lCMWMyVXRaR1YyYVdObExYZHBaSFJvSUNzZ0ozZHBaSFJvT2lBbGN5a25JQ1VnS0MxdGFXNHBYRzRnSUNBZ2RXNXNaWE56SUMxc1lYSm5aWEl0ZEdoaGJpMXpZMkZzWlNodFlYZ3BYRzRnSUNBZ0lDQXRiV0Y0SUQwZ0xXTnZiblpsY25RdGRHOG9KMlZ0Snl3Z0xXMWhlQ2tnYVdZZ2NuVndkSFZ5WlM1bGJtRmliR1V0WlcwdFluSmxZV3R3YjJsdWRITmNiaUFnSUNBZ0lDMXRZWGdnUFNBdFlXUnFkWE4wTFc5MlpYSnNZWEFvWVc1MGFTMXZkbVZ5YkdGd0xDQXRiV0Y0TENCemFXUmxPaUFuYldGNEp5bGNiaUFnSUNBZ0lHTnZibVJwZEdsdmJpQTlJR052Ym1ScGRHbHZiaUFySUNjZ1lXNWtJQ2h0WVhndEp5QXJJSFZ6WlMxa1pYWnBZMlV0ZDJsa2RHZ2dLeUFuZDJsa2RHZzZJQ1Z6S1NjZ0pTQW9MVzFoZUNsY2JpQWdJQ0JwWmlCdmNtbGxiblJoZEdsdmJseHVJQ0FnSUNBZ1kyOXVaR2wwYVc5dUlEMGdZMjl1WkdsMGFXOXVJQ3NnSnlCaGJtUWdLRzl5YVdWdWRHRjBhVzl1T2lBbGN5a25JQ1VnS0c5eWFXVnVkR0YwYVc5dUtWeHVJQ0FnSUdsbUlHUmxibk5wZEhsY2JpQWdJQ0FnSUdOdmJtUnBkR2x2Ym5NZ1BTQW9LVnh1SUNBZ0lDQWdabTl5SUhGMVpYSjVJR2x1SUMxa1pXNXphWFI1TFhGMVpYSnBaWE1vWkdWdWMybDBlU2xjYmlBZ0lDQWdJQ0FnY0hWemFDaGpiMjVrYVhScGIyNXpMQ0JqYjI1a2FYUnBiMjRnS3lBbklHRnVaQ0FsY3ljZ0pTQW9jWFZsY25rcEtWeHVJQ0FnSUNBZ1kyOXVaR2wwYVc5dUlEMGdhbTlwYmlnbkxDQW5MQ0JqYjI1a2FYUnBiMjV6S1Z4dUlDQWdJRUJ0WldScFlTQmpiMjVrYVhScGIyNWNiaUFnSUNBZ0lIdGliRzlqYTMxY2JpQWdhV1lnWm1Gc2JHSmhZMnN0WTJ4aGMzTmNiaUFnSUNBclkzSmxZWFJsTFdaaGJHeGlZV05yTFdOc1lYTnpLSE5sYkdWamRHVmtMQ0JtWVd4c1ltRmpheTFqYkdGemN5bGNiaUFnSUNBZ0lIdGliRzlqYTMxY2JseHVZWFFvYzJOaGJHVXRjRzlwYm5Rc0lHRnVkR2t0YjNabGNteGhjQ0E5SUhKMWNIUjFjbVV1WVc1MGFTMXZkbVZ5YkdGd0xDQmtaVzV6YVhSNUlEMGdiblZzYkN3Z2IzSnBaVzUwWVhScGIyNGdQU0J1ZFd4c0xDQjFjMlV0WkdWMmFXTmxMWGRwWkhSb0lEMGdjblZ3ZEhWeVpTNTFjMlV0WkdWMmFXTmxMWGRwWkhSb0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lBOUlHNTFiR3dwWEc0Z0lHbG1JQzFwY3kxemRISnBibWNvYjNKcFpXNTBZWFJwYjI0cFhHNGdJQ0FnYjNKcFpXNTBZWFJwYjI0Z1BTQmpiMjUyWlhKMEtHOXlhV1Z1ZEdGMGFXOXVLVnh1SUNCcFppQXRhWE10YzNSeWFXNW5LR1JsYm5OcGRIa3BYRzRnSUNBZ1pHVnVjMmwwZVNBOUlHTnZiblpsY25Rb1pHVnVjMmwwZVNsY2JpQWdLMkpsZEhkbFpXNG9jMk5oYkdVdGNHOXBiblFzSUhOallXeGxMWEJ2YVc1MExDQmhiblJwTFc5MlpYSnNZWEFzSUdSbGJuTnBkSGtzSUc5eWFXVnVkR0YwYVc5dUxDQjFjMlV0WkdWMmFXTmxMWGRwWkhSb0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lsY2JpQWdJQ0I3WW14dlkydDlYRzVjYm1aeWIyMHRkMmxrZEdnb2MyTmhiR1V0Y0c5cGJuUXNJR0Z1ZEdrdGIzWmxjbXhoY0NBOUlISjFjSFIxY21VdVlXNTBhUzF2ZG1WeWJHRndMQ0JrWlc1emFYUjVJRDBnYm5Wc2JDd2diM0pwWlc1MFlYUnBiMjRnUFNCdWRXeHNMQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9JRDBnY25Wd2RIVnlaUzUxYzJVdFpHVjJhV05sTFhkcFpIUm9MQ0JtWVd4c1ltRmpheTFqYkdGemN5QTlJRzUxYkd3cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb2IzSnBaVzUwWVhScGIyNHBYRzRnSUNBZ2IzSnBaVzUwWVhScGIyNGdQU0JqYjI1MlpYSjBLRzl5YVdWdWRHRjBhVzl1S1Z4dUlDQnBaaUF0YVhNdGMzUnlhVzVuS0dSbGJuTnBkSGtwWEc0Z0lDQWdaR1Z1YzJsMGVTQTlJR052Ym5abGNuUW9aR1Z1YzJsMGVTbGNiaUFnSzJKbGRIZGxaVzRvYzJOaGJHVXRjRzlwYm5Rc0lHeGxibWQwYUNoeWRYQjBkWEpsTG5OallXeGxLU3dnWVc1MGFTMXZkbVZ5YkdGd0xDQmtaVzV6YVhSNUxDQnZjbWxsYm5SaGRHbHZiaXdnZFhObExXUmxkbWxqWlMxM2FXUjBhQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTXBYRzRnSUNBZ2UySnNiMk5yZlZ4dVhHNWhZbTkyWlNBOUlHWnliMjB0ZDJsa2RHaGNibHh1ZEc4dGQybGtkR2dvYzJOaGJHVXRjRzlwYm5Rc0lHRnVkR2t0YjNabGNteGhjQ0E5SUhKMWNIUjFjbVV1WVc1MGFTMXZkbVZ5YkdGd0xDQmtaVzV6YVhSNUlEMGdiblZzYkN3Z2IzSnBaVzUwWVhScGIyNGdQU0J1ZFd4c0xDQjFjMlV0WkdWMmFXTmxMWGRwWkhSb0lEMGdjblZ3ZEhWeVpTNTFjMlV0WkdWMmFXTmxMWGRwWkhSb0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lBOUlHNTFiR3dwWEc0Z0lHbG1JQzFwY3kxemRISnBibWNvYjNKcFpXNTBZWFJwYjI0cFhHNGdJQ0FnYjNKcFpXNTBZWFJwYjI0Z1BTQmpiMjUyWlhKMEtHOXlhV1Z1ZEdGMGFXOXVLVnh1SUNCcFppQXRhWE10YzNSeWFXNW5LR1JsYm5OcGRIa3BYRzRnSUNBZ1pHVnVjMmwwZVNBOUlHTnZiblpsY25Rb1pHVnVjMmwwZVNsY2JpQWdLMkpsZEhkbFpXNG9NU3dnYzJOaGJHVXRjRzlwYm5Rc0lHRnVkR2t0YjNabGNteGhjQ3dnWkdWdWMybDBlU3dnYjNKcFpXNTBZWFJwYjI0c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56S1Z4dUlDQWdJSHRpYkc5amEzMWNibHh1WW1Wc2IzY2dQU0IwYnkxM2FXUjBhRnh1WEc1dGIySnBiR1VvWVc1MGFTMXZkbVZ5YkdGd0lEMGdjblZ3ZEhWeVpTNWhiblJwTFc5MlpYSnNZWEFzSUdSbGJuTnBkSGtnUFNCdWRXeHNMQ0J2Y21sbGJuUmhkR2x2YmlBOUlHNTFiR3dzSUhWelpTMWtaWFpwWTJVdGQybGtkR2dnUFNCeWRYQjBkWEpsTG5WelpTMWtaWFpwWTJVdGQybGtkR2dzSUdaaGJHeGlZV05yTFdOc1lYTnpJRDBnYm5Wc2JDbGNiaUFnYVdZZ0xXbHpMWE4wY21sdVp5aHZjbWxsYm5SaGRHbHZiaWxjYmlBZ0lDQnZjbWxsYm5SaGRHbHZiaUE5SUdOdmJuWmxjblFvYjNKcFpXNTBZWFJwYjI0cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb1pHVnVjMmwwZVNsY2JpQWdJQ0JrWlc1emFYUjVJRDBnWTI5dWRtVnlkQ2hrWlc1emFYUjVLVnh1SUNBclltVnNiM2NvY25Wd2RIVnlaUzV0YjJKcGJHVXRZM1YwYjJabUxDQmhiblJwTFc5MlpYSnNZWEFzSUdSbGJuTnBkSGtzSUc5eWFXVnVkR0YwYVc5dUxDQjFjMlV0WkdWMmFXTmxMWGRwWkhSb0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lsY2JpQWdJQ0I3WW14dlkydDlYRzVjYm5SaFlteGxkQ2hoYm5ScExXOTJaWEpzWVhBZ1BTQnlkWEIwZFhKbExtRnVkR2t0YjNabGNteGhjQ3dnWkdWdWMybDBlU0E5SUc1MWJHd3NJRzl5YVdWdWRHRjBhVzl1SUQwZ2JuVnNiQ3dnZFhObExXUmxkbWxqWlMxM2FXUjBhQ0E5SUhKMWNIUjFjbVV1ZFhObExXUmxkbWxqWlMxM2FXUjBhQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTWdQU0J1ZFd4c0tWeHVJQ0JwWmlBdGFYTXRjM1J5YVc1bktHOXlhV1Z1ZEdGMGFXOXVLVnh1SUNBZ0lHOXlhV1Z1ZEdGMGFXOXVJRDBnWTI5dWRtVnlkQ2h2Y21sbGJuUmhkR2x2YmlsY2JpQWdhV1lnTFdsekxYTjBjbWx1Wnloa1pXNXphWFI1S1Z4dUlDQWdJR1JsYm5OcGRIa2dQU0JqYjI1MlpYSjBLR1JsYm5OcGRIa3BYRzRnSUN0aVpYUjNaV1Z1S0hKMWNIUjFjbVV1Ylc5aWFXeGxMV04xZEc5bVppd2djblZ3ZEhWeVpTNWtaWE5yZEc5d0xXTjFkRzltWml3Z1lXNTBhUzF2ZG1WeWJHRndMQ0JrWlc1emFYUjVMQ0J2Y21sbGJuUmhkR2x2Yml3Z2RYTmxMV1JsZG1salpTMTNhV1IwYUN3Z1ptRnNiR0poWTJzdFkyeGhjM01wWEc0Z0lDQWdlMkpzYjJOcmZWeHVYRzVrWlhOcmRHOXdLR0Z1ZEdrdGIzWmxjbXhoY0NBOUlISjFjSFIxY21VdVlXNTBhUzF2ZG1WeWJHRndMQ0JrWlc1emFYUjVJRDBnYm5Wc2JDd2diM0pwWlc1MFlYUnBiMjRnUFNCdWRXeHNMQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9JRDBnY25Wd2RIVnlaUzUxYzJVdFpHVjJhV05sTFhkcFpIUm9MQ0JtWVd4c1ltRmpheTFqYkdGemN5QTlJRzUxYkd3cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb2IzSnBaVzUwWVhScGIyNHBYRzRnSUNBZ2IzSnBaVzUwWVhScGIyNGdQU0JqYjI1MlpYSjBLRzl5YVdWdWRHRjBhVzl1S1Z4dUlDQnBaaUF0YVhNdGMzUnlhVzVuS0dSbGJuTnBkSGtwWEc0Z0lDQWdaR1Z1YzJsMGVTQTlJR052Ym5abGNuUW9aR1Z1YzJsMGVTbGNiaUFnSzJGaWIzWmxLSEoxY0hSMWNtVXVaR1Z6YTNSdmNDMWpkWFJ2Wm1Zc0lHRnVkR2t0YjNabGNteGhjQ3dnWkdWdWMybDBlU3dnYjNKcFpXNTBZWFJwYjI0c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56S1Z4dUlDQWdJSHRpYkc5amEzMWNibHh1YUdRb1lXNTBhUzF2ZG1WeWJHRndJRDBnY25Wd2RIVnlaUzVoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrZ1BTQnVkV3hzTENCdmNtbGxiblJoZEdsdmJpQTlJRzUxYkd3c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnZ1BTQnlkWEIwZFhKbExuVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2FXWWdMV2x6TFhOMGNtbHVaeWh2Y21sbGJuUmhkR2x2YmlsY2JpQWdJQ0J2Y21sbGJuUmhkR2x2YmlBOUlHTnZiblpsY25Rb2IzSnBaVzUwWVhScGIyNHBYRzRnSUdsbUlDMXBjeTF6ZEhKcGJtY29aR1Z1YzJsMGVTbGNiaUFnSUNCa1pXNXphWFI1SUQwZ1kyOXVkbVZ5ZENoa1pXNXphWFI1S1Z4dUlDQXJZV0p2ZG1Vb2NuVndkSFZ5WlM1b1pDMWpkWFJ2Wm1Zc0lHRnVkR2t0YjNabGNteGhjQ3dnWkdWdWMybDBlU3dnYjNKcFpXNTBZWFJwYjI0c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56S1Z4dUlDQWdJSHRpYkc5amEzMWNibHh1WkdWdWMybDBlU2hrWlc1emFYUjVMQ0J2Y21sbGJuUmhkR2x2YmlBOUlHNTFiR3dzSUdaaGJHeGlZV05yTFdOc1lYTnpJRDBnYm5Wc2JDbGNiaUFnYzJWc1pXTjBaV1FnUFNCelpXeGxZM1J2Y2lncFhHNGdJR2xtSUc1dmRDQW9jblZ3ZEhWeVpTNXlZWE4wWlhKcGMyVXRiV1ZrYVdFdGNYVmxjbWxsY3lsY2JpQWdJQ0JqYjI1a2FYUnBiMjV6SUQwZ0tDbGNiaUFnSUNCbWIzSWdjWFZsY25rZ2FXNGdMV1JsYm5OcGRIa3RjWFZsY21sbGN5aGtaVzV6YVhSNUtWeHVJQ0FnSUNBZ1kyOXVaR2wwYVc5dUlEMGdKMjl1YkhrZ2MyTnlaV1Z1SUdGdVpDQWxjeWNnSlNBb2NYVmxjbmtwWEc0Z0lDQWdJQ0JwWmlCdmNtbGxiblJoZEdsdmJseHVJQ0FnSUNBZ0lDQmpiMjVrYVhScGIyNGdQU0JqYjI1a2FYUnBiMjRnS3lBbklHRnVaQ0FvYjNKcFpXNTBZWFJwYjI0NklDVnpLU2NnSlNBb2IzSnBaVzUwWVhScGIyNHBYRzRnSUNBZ0lDQndkWE5vS0dOdmJtUnBkR2x2Ym5Nc0lHTnZibVJwZEdsdmJpbGNiaUFnSUNCamIyNWthWFJwYjI0Z1BTQnFiMmx1S0Njc0lDY3NJR052Ym1ScGRHbHZibk1wWEc0Z0lDQWdRRzFsWkdsaElHTnZibVJwZEdsdmJseHVJQ0FnSUNBZ2UySnNiMk5yZlZ4dUlDQWdJR2xtSUdaaGJHeGlZV05yTFdOc1lYTnpYRzRnSUNBZ0lDQXJZM0psWVhSbExXWmhiR3hpWVdOckxXTnNZWE56S0hObGJHVmpkR1ZrTENCbVlXeHNZbUZqYXkxamJHRnpjeWxjYmlBZ0lDQWdJQ0FnZTJKc2IyTnJmVnh1WEc1d2FYaGxiQzF5WVhScGJ5QTlJR1JsYm5OcGRIbGNibHh1Y21WMGFXNWhLRzl5YVdWdWRHRjBhVzl1SUQwZ2JuVnNiQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTWdQU0J1ZFd4c0tWeHVJQ0FyWkdWdWMybDBlU2duY21WMGFXNWhKeXdnYjNKcFpXNTBZWFJwYjI0c0lHWmhiR3hpWVdOckxXTnNZWE56S1Z4dUlDQWdJSHRpYkc5amEzMWNibHh1YkdGdVpITmpZWEJsS0dSbGJuTnBkSGtnUFNCdWRXeHNMQ0JtWVd4c1ltRmpheTFqYkdGemN5QTlJRzUxYkd3cFhHNGdJSE5sYkdWamRHVmtJRDBnYzJWc1pXTjBiM0lvS1Z4dUlDQnBaaUJ1YjNRZ0tISjFjSFIxY21VdWNtRnpkR1Z5YVhObExXMWxaR2xoTFhGMVpYSnBaWE1wWEc0Z0lDQWdhV1lnTFdsekxYTjBjbWx1Wnloa1pXNXphWFI1S1Z4dUlDQWdJQ0FnWkdWdWMybDBlU0E5SUdOdmJuWmxjblFvWkdWdWMybDBlU2xjYmlBZ0lDQnBaaUJrWlc1emFYUjVYRzRnSUNBZ0lDQXJjR2w0Wld3dGNtRjBhVzhvWkdWdWMybDBlU3dnYjNKcFpXNTBZWFJwYjI0NklHeGhibVJ6WTJGd1pTd2dabUZzYkdKaFkyc3RZMnhoYzNNcFhHNGdJQ0FnSUNBZ0lIdGliRzlqYTMxY2JpQWdJQ0JsYkhObFhHNGdJQ0FnSUNCQWJXVmthV0VnYjI1c2VTQnpZM0psWlc0Z1lXNWtJQ2h2Y21sbGJuUmhkR2x2YmpvZ2JHRnVaSE5qWVhCbEtWeHVJQ0FnSUNBZ0lDQjdZbXh2WTJ0OVhHNGdJQ0FnSUNCcFppQm1ZV3hzWW1GamF5MWpiR0Z6YzF4dUlDQWdJQ0FnSUNBclkzSmxZWFJsTFdaaGJHeGlZV05yTFdOc1lYTnpLSE5sYkdWamRHVmtMQ0JtWVd4c1ltRmpheTFqYkdGemN5bGNiaUFnSUNBZ0lDQWdJQ0I3WW14dlkydDlYRzVjYm5CdmNuUnlZV2wwS0dSbGJuTnBkSGtnUFNCdWRXeHNMQ0JtWVd4c1ltRmpheTFqYkdGemN5QTlJRzUxYkd3cFhHNGdJSE5sYkdWamRHVmtJRDBnYzJWc1pXTjBiM0lvS1Z4dUlDQnBaaUJ1YjNRZ0tISjFjSFIxY21VdWNtRnpkR1Z5YVhObExXMWxaR2xoTFhGMVpYSnBaWE1wWEc0Z0lDQWdhV1lnTFdsekxYTjBjbWx1Wnloa1pXNXphWFI1S1Z4dUlDQWdJQ0FnWkdWdWMybDBlU0E5SUdOdmJuWmxjblFvWkdWdWMybDBlU2xjYmlBZ0lDQnBaaUJrWlc1emFYUjVYRzRnSUNBZ0lDQXJjR2w0Wld3dGNtRjBhVzhvWkdWdWMybDBlU3dnYjNKcFpXNTBZWFJwYjI0NklIQnZjblJ5WVdsMExDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lsY2JpQWdJQ0FnSUNBZ2UySnNiMk5yZlZ4dUlDQWdJR1ZzYzJWY2JpQWdJQ0FnSUVCdFpXUnBZU0J2Ym14NUlITmpjbVZsYmlCaGJtUWdLRzl5YVdWdWRHRjBhVzl1T2lCd2IzSjBjbUZwZENsY2JpQWdJQ0FnSUNBZ2UySnNiMk5yZlZ4dUlDQWdJQ0FnYVdZZ1ptRnNiR0poWTJzdFkyeGhjM05jYmlBZ0lDQWdJQ0FnSzJOeVpXRjBaUzFtWVd4c1ltRmpheTFqYkdGemN5aHpaV3hsWTNSbFpDd2dabUZzYkdKaFkyc3RZMnhoYzNNcFhHNGdJQ0FnSUNBZ0lDQWdlMkpzYjJOcmZWeHVJaXdpTHk4Z1ZVbGNiaTh2WEc0dkx5QjBhVzFsYkdsdVpWeHVkR2x0Wld4cGJtVXRZbWNnUFNCM2FHbDBaVnh1WVdOMGFYWmxMV052Ykc5eUlEMGdZMmhoY21OdllXeGNibTV2ZEMxaFkzUnBkbVV0WTI5c2IzSWdQU0IzYUdsMFpWeHVYRzVtWVdSbElEMGdZV3hzSURGeklHVmhjMlV0YVc1Y2JseHVMeThnVTJ4cFpHVWdjMlYwZEdsdVozTmNiaTh2WEc0dkx5QklaV0ZrYVc1blhHNWpiMjUwWlc1MExXTnZiRzl5SUQwZ1kyaGhjbU52WVd4Y2JpOHZJSFJsZUhSY2JpOHZYRzR2THlCSmJXRm5aVnh1WEc1b2RHMXNYRzRnSUc5MlpYSm1iRzkzTFhnZ2FHbGtaR1Z1WEc1Y2JpNTBhVzFsYkdsdVpWeHVJQ0J3YjNOcGRHbHZiaUJ5Wld4aGRHbDJaVnh1SUNCdmRtVnlabXh2ZHkxNElHaHBaR1JsYmx4dVhHNHVaSE5yTFc1dmRDMXpkWEJ3YjNKMFpXUXNJQzVrYzJzdGMzVndjRzl5ZEdWa1hHNGdJR0poWTJ0bmNtOTFibVFnWkdseWRGeHVJQ0JpWVdOclozSnZkVzVrSUhKaFpHbGhiQzFuY21Ga2FXVnVkQ2hsYkd4cGNITmxJR0YwSUdObGJuUmxjaXdnSTJNNVl6RTVNQ0F3SlN3Z1pHbHlkQ0ExTlNVc0lDTTRPVGd5TldNZ01UQXdKU2s3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlNBeE1EQWxJREV3TUNWY2JseHVMeThnUVhCd2JIa2dkR2hsYzJVZ2MzUjViR1Z6SUdGeklHRWdabUZzYkdKaFkydGNiaTVrYzJzdGJtOTBMWE4xY0hCdmNuUmxaRnh1SUNCamIyeHZjaUJqYjI1MFpXNTBMV052Ykc5eVhHNGdJQzh2ZEdWNGRDMXphR0ZrYjNjZ01YQjRJREZ3ZUNBd2NIZ2djbWRpWVNnd0xEQXNNQ3d1TWlsY2JpQWdjR0ZrWkdsdVp5QXhjSGdnTUZ4dVhHNGdJQzV6ZEdWd1hHNGdJQ0FnZDJsa2RHZ2dNVEF3SlZ4dUlDQWdJRzFoY21kcGJpQXlNSEI0SUdGMWRHOWNiaUFnSUNCd1lXUmthVzVuSURJd2NIaGNibHh1SUNBdVpITnJMV05wY21Oc1pTMWtZWFJsWEc0Z0lDQWdZbUZqYTJkeWIzVnVaQ0J1YjI1bFhHNGdJQ0FnY0dGa1pHbHVaeUF3WEc0Z0lDQWdabWxzZEdWeUlHNXZibVZjYmlBZ0lDQmZabWxzZEdWeUlHNXZibVZjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nVTJWeWFXWXVabTl1ZEZ4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCVFpYSnBaaTUzWldsbmFIUXVibTl5YldGc1hHNWNiaUFnTG1SemF5MXBibVp2WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwZ01qQndlRnh1SUNBZ0lGeHVJQ0FnSUdneVhHNGdJQ0FnSUNCa2FYTndiR0Y1SUc1dmJtVmNibHh1SUNBdVpITnJMV05wY21Oc1pWeHVJQ0FnSUdadmJuUXRjMmw2WlNBek5uQjRYRzRnSUNBZ1kyOXNiM0lnY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d1T0NsY2JpQWdJQ0IwWlhoMExYTm9ZV1J2ZHlBeGNIZ2dNWEI0SURGd2VDQnlaMkpoS0RBc01Dd3dMQzR5S1Z4dVhHNWNiaTVrYzJzdGMzVndjRzl5ZEdWa1hHNGdJSEJ2YzJsMGFXOXVJSEpsYkdGMGFYWmxYRzRnSUhkcFpIUm9JREV3TUNWY2JpQWdiV2x1TFhkcFpIUm9JREV3TUhCNFhHNGdJRzFoY21kcGJpQXdJR0YxZEc5Y2JpQWdhR1ZwWjJoMElEVTFNSEI0WEc0Z0lHOTJaWEptYkc5M0lHaHBaR1JsYmx4dVhHNGdJQzh2SUZScGJXVnNhVzVsSUdKaGNseHVJQ0F1WkhOckxXeHBibVYzY21Gd2NHVnlYRzRnSUNBZ2FHVnBaMmgwSURaeVpXMWNiaUFnSUNCaWIzUjBiMjBnTWpBbFhHNGdJQ0FnZDJsa2RHZ2dNVEF3SlZ4dUlDQWdJR0poWTJ0bmNtOTFibVFnY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d1TXlsY2JpQWdJQ0JpYjNndGMyaGhaRzkzSURBZ01YQjRJSEpuWW1Fb01qVTFMQ0F5TlRVc0lESTFOU3dnTUM0eE5Ta2dhVzV6WlhSY2JpQWdJQ0J3YjNOcGRHbHZiaUJoWW5OdmJIVjBaVnh1SUNBZ0lHSnZkSFJ2YlNBeU1DVmNiaUFnSUNCamIyeHZjaUIwYVcxbGJHbHVaUzFpWjF4dVhHNGdJQzVrYzJzdGQzSmhjSEJsY2x4dUlDQWdJRzkxZEd4cGJtVWdibTl1WlZ4dUlDQWdJRzkyWlhKbWJHOTNJSFpwYzJsaWJHVWdJV2x0Y0c5eWRHRnVkRnh1WEc0Z0lDOHZJRlJwYldWc2FXNWxJRVJ2ZENCdWIzUWdZV04wYVhabFhHNGdJQzVrYzJzdFkybHlZMnhsWEc0Z0lDQWdZbUZqYTJkeWIzVnVaQ0J1YjNRdFlXTjBhWFpsTFdOdmJHOXlYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjeUExTUNWY2JpQWdJQ0JpYjNndGMyaGhaRzkzSURBZ01DQXljSGdnY21kaVlTZ3dMREFzTUN3dU1TbGNiaUFnSUNCamRYSnpiM0lnY0c5cGJuUmxjbHh1SUNBZ0lIZHBaSFJvSURGeVpXMWNiaUFnSUNCb1pXbG5hSFFnS0VCM2FXUjBhQ2xjYmlBZ0lDQndiM05wZEdsdmJpQnlaV3hoZEdsMlpWeHVJQ0FnSUhSeVlXNXphWFJwYjI0Z1ptRmtaVnh1SUNBZ0lIVnpaWEl0YzJWc1pXTjBJRzV2Ym1WY2JseHVJQ0F1WkhOckxXTnBjbU5zWlMxa1lYUmxYRzRnSUNBZ1kyOXNiM0lnYm05MExXRmpkR2wyWlMxamIyeHZjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJUWlhKcFppNW1iMjUwWEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SUZObGNtbG1MbmRsYVdkb2RDNXViM0p0WVd4Y2JpQWdJQ0IwY21GdWMybDBhVzl1SUdaaFpHVmNiaUFnSUNCMGNtRnVjMlp2Y20wZ2RISmhibk5zWVhSbFdDZ3RNWEpsYlNsY2JseHVJQ0F1WVdOMGFYWmxYRzRnSUNBZ0xtUnpheTFqYVhKamJHVmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUWdZV04wYVhabExXTnZiRzl5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOc2FYQWdjR0ZrWkdsdVp5MWliM2hjYmlBZ0lDQWdJQzh2ZDJsa2RHZ2dNbkpsYlZ4dUlDQWdJQ0FnTHk5b1pXbG5hSFFnS0VCM2FXUjBhQ2xjYmx4dUlDQWdJQzVrYzJzdFkyOXVkR1Z1ZEZ4dUlDQWdJQ0FnYjNCaFkybDBlU0F4WEc0Z0lDQWdJQ0IwY21GdWMybDBhVzl1SUdGc2JDQXdjeUJsWVhObExXbHVMVzkxZENBd2MxeHVYRzRnSUNBZ0x5OGdWR2x0Wld4cGJtVWdaRzkwWEc0Z0lDQWdMbVJ6YXkxamFYSmpiR1V0WkdGMFpWeHVJQ0FnSUNBZ1kyOXNiM0lnWVdOMGFYWmxMV052Ykc5eVhHNWNiaUFnTG5wdmIyMWNiaUFnSUNBdVpITnJMV052Ym5SbGJuUmNiaUFnSUNBZ0lHOXdZV05wZEhrZ01GeHVJQ0FnSUNBZ2RISmhibk5tYjNKdElITmpZV3hsS0RBdU5TbGNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNGdZV3hzSURCeklHVmhjMlV0YVc0dGIzVjBJREJ6WEc0Z0lDNTZiMjl0TG1GamRHbDJaVnh1SUNBZ0lDNWtjMnN0WTI5dWRHVnVkRnh1SUNBZ0lDQWdJQ0J2Y0dGamFYUjVJREZjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0SUhOallXeGxLREVwWEc0Z0lDQWdJQ0FnSUhSeVlXNXphWFJwYjI0Z1lXeHNJREF1TWpWeklHVmhjMlV0YVc0dGIzVjBJREF1TWpWelhHNWNiaUFnTG1aaFpHVmNiaUFnSUNBdVpITnJMV052Ym5SbGJuUmNiaUFnSUNBZ0lHOXdZV05wZEhrZ01GeHVJQ0FnSUNBZ2RISmhibk5tYjNKdElITmpZV3hsS0RFcFhHNGdJQ0FnSUNCMGNtRnVjMmwwYVc5dUlHRnNiQ0F3Y3lCbFlYTmxMV2x1TFc5MWRDQXdjMXh1SUNBdVptRmtaUzVoWTNScGRtVmNiaUFnSUNBdVpITnJMV052Ym5SbGJuUmNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVTQXhYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliU0J6WTJGc1pTZ3hLVnh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1SUdGc2JDQXdMakkxY3lCbFlYTmxMV2x1TFc5MWRDQXdMakkxYzF4dVhHNGdJQzV6ZEdWd1hHNGdJQ0FnZDJsa2RHZ2dOREF3Y0hoY2JpQWdJQ0J3YjNOcGRHbHZiaUJ5Wld4aGRHbDJaVnh1WEc0Z0lDNWtjMnN0Ym1GMlhHNGdJQ0FnY0c5emFYUnBiMjRnWVdKemIyeDFkR1ZjYmlBZ0lDQXZMMmhsYVdkb2RDQXpNbkI0WEc0Z0lDQWdkRzl3SURNd0pWeHVJQ0FnSUhKcFoyaDBJREV3Y0hoY2JpQWdJQ0IzYVdSMGFDQXpNSEI0WEc1Y2JpQWdJQ0J6Y0dGdVhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0lIVnliQ2hwYldjdmNISmxkaTV3Ym1jcElHNXZMWEpsY0dWaGRDQmpaVzUwWlhJZ1kyVnVkR1Z5SUhKblltRW9NalUxTERJMU5Td3lOVFVzTGpNcFhHNGdJQ0FnSUNCaWIzSmtaWEl0Y21Ga2FYVnpJRE53ZUZ4dUlDQWdJQ0FnWW05NExYTm9ZV1J2ZHlBd0lERndlQ0J5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSURBdU1qVXBJR2x1YzJWMFhHNGdJQ0FnSUNCamRYSnpiM0lnY0c5cGJuUmxjbHh1SUNBZ0lDQWdaR2x6Y0d4aGVTQnBibXhwYm1VdFlteHZZMnRjYmlBZ0lDQWdJSGRwWkhSb0lETXdjSGhjYmlBZ0lDQWdJR2hsYVdkb2RDQXpNSEI0WEc1Y2JpQWdJQ0FnSUcxaGNtZHBiaUF3SURGd2VGeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJpQmlZV05yWjNKdmRXNWtMV052Ykc5eUlEQXVNM01nWldGelpTMXBibHh1WEc0Z0lDQWdJQ0FtT21odmRtVnlYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSWdjbWRpWVNneU5UVXNNalUxTERJMU5Td3VOU2xjYmx4dUlDQWdJQzVrYzJzdGNISmxYRzRnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6SUROd2VDQXdJREFnTTNCNFhHNWNiaUFnSUNBdVpITnJMVzVsZUhSY2JpQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTWdNQ0F6Y0hnZ00zQjRJREJjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVWdkWEpzS0dsdFp5OXVaWGgwTG5CdVp5bGNiaUFnSUNBZ0lDOHZiV0Z5WjJsdUxYSnBaMmgwSURJd2NIaGNibHh1SUNBZ0lDNWtjMnN0WVhWMGIzQnNZWGxjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVWdkWEpzS0dsdFp5OXdiR0Y1TG5CdVp5bGNibHh1SUNBZ0lDNXdiR0Y1YVc1blhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsSUhWeWJDaHBiV2N2Y0dGMWMyVXVjRzVuS1Z4dVhHNGdJQzVrYzJzdFkyOXVkR1Z1ZEZ4dUlDQWdJSEJ2YzJsMGFXOXVJR0ZpYzI5c2RYUmxYRzRnSUNBZ2RHOXdJQzAxTlRCd2VGeHVJQ0FnSUcxcGJpMW9aV2xuYUhRZ05qQXdjSGhjYmlBZ0lDQjNhV1IwYUNBNE1EQndlRnh1SUNBZ0lHeGxablFnTFRJd01IQjRYRzRnSUNBZ2IzQmhZMmwwZVNBd1hHNGdJQ0FnWkdsemNHeGhlU0IwWVdKc1pWeHVJQ0FnSUZ4dUlDQWdJQ3RrWlhOcmRHOXdLQ2xjYmlBZ0lDQWdJSFJ2Y0NBdE5UVXdjSGhjYmlBZ0lDQWdJRzFwYmkxb1pXbG5hSFFnTmpBd2NIaGNiaUFnSUNBZ0lIZHBaSFJvSURFd01EQndlRnh1SUNBZ0lDQWdiR1ZtZENBdE16QXdjSGhjYmlBZ0lDQWdJRnh1SUNBZ0lDdHRiMkpwYkdVb0tWeHVJQ0FnSUNBZ2RHOXdJQzB4TURBd2NIaGNiaUFnWEc0Z0lDNXVieTFwYldGblpWeHVJQ0FnSUhSbGVIUXRZV3hwWjI0Z1kyVnVkR1Z5WEc1Y2JpQWdMeTljYmlBZ0x5OGdSV1JwZENCemJHbGtaU0IwZVhCdlozSmhjR2g1SUdobGNtVmNiaUFnTG1SemF5MXBibVp2WEc0Z0lDQWdaR2x6Y0d4aGVTQjBZV0pzWlMxalpXeHNYRzRnSUNBZ2RtVnlkR2xqWVd3dFlXeHBaMjRnYldsa1pHeGxYRzRnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kQ0F5TUhCNFhHNWNiaUFnSUNCM2FXUjBhQ0ExTUNWY2JpQWdJQ0FyYlc5aWFXeGxLQ2xjYmlBZ0lDQWdJR1JwYzNCc1lYa2dkR0ZpYkdVdGNtOTNYRzRnSUNBZ0x5OTBaWGgwTFhOb1lXUnZkeUF5Y0hnZ01uQjRJREp3ZUNCeVoySmhLREFzTUN3d0xDNHlLVnh1WEc0Z0lDQWdMbVJoZEdWZlgyaGxZV1JwYm1kY2JpQWdJQ0FnSUdOdmJHOXlJR052Ym5SbGJuUXRZMjlzYjNKY2JpQWdJQ0FnSUcxaGNtZHBiaUF3SURBZ01qQndlQ0F3WEc0Z0lDQWdJQ0JtYjI1MExYZGxhV2RvZENCdWIzSnRZV3hjYmx4dUlDQWdJSEJjYmlBZ0lDQWdJR052Ykc5eUlHTnZiblJsYm5RdFkyOXNiM0pjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaU0F4TGpJMWNtVnRYRzRnSUNBZ0lDQnRZWEpuYVc0Z01GeHVYRzRnSUM1a2Myc3RlV1ZoY2kxcGJtWnZYRzRnSUNBZ1ptOXVkQzF6YVhwbElESTBjSGhjYmlBZ0lDQndZV1JrYVc1bklERXdjSGhjYmx4dVhHNWNiaUFnYVcxblhHNGdJQ0FnZDJsa2RHZ2dNVEF3SlZ4dUlDQWdJR2hsYVdkb2RDQmhkWFJ2WEc1Y2JseHVJQ0F1YldWa2FXRmNiaUFnSUNCa2FYTndiR0Y1SUhSaFlteGxMV05sYkd4Y2JpQWdJQ0IyWlhKMGFXTmhiQzFoYkdsbmJpQnRhV1JrYkdWY2JpQWdJQ0JvWldsbmFIUWdOVEF3Y0hoY2JpQWdJQ0IzYVdSMGFDQTFNQ1ZjYmlBZ0lDQmNiaUFnSUNBcmJXOWlhV3hsS0NsY2JpQWdJQ0FnSUdScGMzQnNZWGtnZEdGaWJHVXRjbTkzWEc0Z0lDQWdMeThnY0c5emFYUnBiMjRnWVdKemIyeDFkR1ZjYmlBZ0lDQXZMeUJ5YVdkb2RDQXdjSGhjYmlBZ0lDQXZMeUIwYjNBZ01IQjRYRzVjYmx4dUx5OGdSVzVrSUhOc2FXUmxJSFI1Y0c5bmNtRndhSGtnYUdWeVpWeHVMeTljYmx4dUxtUnpheTFtZFd4c2MyTnlaV1Z1WEc0Z0lIZHBaSFJvSURFd01DVmNiaUFnYUdWcFoyaDBJREV3TUNWY2JseHVYRzVBYldWa2FXRWdjMk55WldWdUxDQW9iV0Y0TFhkcFpIUm9PaUEyTlRCd2VDbGNiaUFnTG1SemF5MXpkWEJ3YjNKMFpXUmNiaUFnSUNCb1pXbG5hSFFnTkRBd2NIaGNibHh1TG1admIzUmxjaTEwYVcxbGJHbHVaVnh1SUNCd1lXUmthVzVuTFhSdmNDQXljbVZ0WEc0Z0lIQnZjMmwwYVc5dUlHRmljMjlzZFhSbFhHNGdJR0p2ZEhSdmJTQXhMalZ5WlcxY2JpQWdiR1ZtZENBMU1DVmNiaUFnZEhKaGJuTm1iM0p0SUhSeVlXNXpiR0YwWlZnb0xUVXdKU2xjYmx4dUlDQXJkR0ZpYkdWMEtDbGNiaUFnSUNCaWIzUjBiMjBnTUM0MWNtVnRYRzVjYmlBZ2NGeHVJQ0FnSUdadmJuUXRjMmw2WlNBeE1YQjRYRzRnSUNBZ1kyOXNiM0lnZDJocGRHVmNiaUFnSUNCMFpYaDBMV0ZzYVdkdUlISnBaMmgwWEc0Z0lDQWdYRzRnSUNBZ0syMXZZbWxzWlNncFhHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdUlHTmxiblJsY2x4dUlDQWdJRnh1STNOMFpYQXRNRnh1SUNCd1hHNGdJQ0FnWkdsemNHeGhlU0JpYkc5amExeHVJQ0FnSUN0dGIySnBiR1VvS1Z4dUlDQWdJQ0FnWkdsemNHeGhlU0J1YjI1bFhHNWNiaUFnTG0xdlltbHNaUzF2Ym14NVhHNGdJQ0FnWkdsemNHeGhlU0J1YjI1bFhHNGdJQ0FnWEc0Z0lDQWdLMjF2WW1sc1pTZ3BYRzRnSUNBZ0lDQmthWE53YkdGNUlHSnNiMk5yWEc0Z0lDQWdJQ0JjYmlOaVlXTnJMWFJ2TFhSdmNGeHVJQ0JrYVhOd2JHRjVJRzV2Ym1WY2JpQWdYRzRnSUN0dGIySnBiR1VvS1Z4dUlDQWdJR1JwYzNCc1lYa2dZbXh2WTJ0Y2JpQWdJQ0J3YjNOcGRHbHZiaUJtYVhobFpGeHVJQ0FnSUdKdmRIUnZiU0F3Y0hoY2JpQWdJQ0J5YVdkb2RDQXdjSGhjYmlBZ0lDQm1hV3hzSUdSaGNtdG5jbVZsYmx4dUlDQWdJRnh1TG5KbFlXUXRiVzl5WlMxc2FXNXJYRzRnSUdOdmJHOXlJR1JoY210bmNtVmxibHh1SUNCbWFXeHNJR1JoY210bmNtVmxibHh1SUNCY2JpQWdKaUErSUM1cFkyOXVMUzFsYVMxbGVIUmxjbTVoYkMxc2FXNXJYRzRnSUNBZ2JHVm1kQ0F0TlhCNFhHNGdJQ0FnSUNCY2JpQWdKanBvYjNabGNseHVJQ0FnSUdacGJHd2dibWxuYUhSbmNtVmxibHh1SUNBaUxDSnBZMjl1WTI5c2IzSWdQU0JuY21WbGJseHVYRzVBYTJWNVpuSmhiV1Z6SUhOd2FXNWNiaUFnTVRBd0pWeHVJQ0FnSUhSeVlXNXpabTl5YlNCeWIzUmhkR1VvTXpZd1pHVm5LVnh1WEc0dWFXTnZibHh1SUNCd2IzTnBkR2x2YmlCeVpXeGhkR2wyWlZ4dUlDQmthWE53YkdGNUlHbHViR2x1WlMxaWJHOWphMXh1SUNCM2FXUjBhQ0F5TlhCNFhHNGdJR2hsYVdkb2RDQXlOWEI0WEc0Z0lHOTJaWEptYkc5M0lHaHBaR1JsYmx4dVhHNHVhV052Ymw5ZlkyNTBYRzRnSUhkcFpIUm9JREV3TUNWY2JpQWdhR1ZwWjJoMElERXdNQ1ZjYmlBZ1ltRmphMmR5YjNWdVpDQnBibWhsY21sMFhHNGdJR1pwYkd3Z2FXNW9aWEpwZEZ4dUlDQjBjbUZ1YzJadmNtMGdkSEpoYm5Oc1lYUmxXQ2d3S1Z4dUlDQXRiWE10ZEhKaGJuTm1iM0p0SUhSeVlXNXpiR0YwWlNndU5YQjRMQ0F0TGpOd2VDbGNibHh1TG1samIyNHRMVzFjYmlBZ2QybGtkR2dnTlRCd2VGeHVJQ0JvWldsbmFIUWdOVEJ3ZUZ4dVhHNHVhV052YmkwdGJGeHVJQ0IzYVdSMGFDQXhNREJ3ZUZ4dUlDQm9aV2xuYUhRZ01UQXdjSGhjYmx4dUxtbGpiMjR0TFhoc1hHNGdJSGRwWkhSb0lERTFNSEI0WEc0Z0lHaGxhV2RvZENBeE5UQndlRnh1WEc0dWFXTnZiaTB0ZUhoc1hHNGdJSGRwWkhSb0lESXdNSEI0WEc0Z0lHaGxhV2RvZENBeU1EQndlRnh1WEc0dWFXTnZibDlmYzNCcGJtNWxjbHh1SUNCd2IzTnBkR2x2YmlCaFluTnZiSFYwWlZ4dUlDQjBiM0FnTUZ4dUlDQnNaV1owSURCY2JpQWdkMmxrZEdnZ01UQXdKVnh1SUNCb1pXbG5hSFFnTVRBd0pWeHVYRzR1YVdOdmJpMHRaV2t0YzNCcGJtNWxjaUF1YVdOdmJsOWZjM0JwYm01bGNpeGNiaTVwWTI5dUxTMWxhUzF6Y0dsdWJtVnlMVElnTG1samIyNWZYM053YVc1dVpYSmNiaUFnWVc1cGJXRjBhVzl1SUhOd2FXNGdNWE1nYzNSbGNITW9NVElwYVc1bWFXNXBkR1ZjYmx4dUxtbGpiMjR0TFdWcExYTndhVzV1WlhJdE0xeHVJQ0F1YVdOdmJsOWZjM0JwYm01bGNseHVJQ0FnSUdGdWFXMWhkR2x2YmlCemNHbHVJREV1TlhNZ2JHbHVaV0Z5SUdsdVptbHVhWFJsWEc1Y2JpNXBZMjl1TFMxbGFTMXpZeTFtWVdObFltOXZhMXh1SUNCbWFXeHNJR2xqYjI1amIyeHZjaUJ2Y2lBak0ySTFPVGs0WEc1Y2JpNXBZMjl1TFMxbGFTMXpZeTFuYVhSb2RXSmNiaUFnWm1sc2JDQnBZMjl1WTI5c2IzSWdiM0lnSXpNek0xeHVYRzR1YVdOdmJpMHRaV2t0YzJNdFoyOXZaMnhsTFhCc2RYTmNiaUFnWm1sc2JDQnBZMjl1WTI5c2IzSWdiM0lnSTJSa05HSXpPVnh1WEc0dWFXTnZiaTB0WldrdGMyTXRhVzV6ZEdGbmNtRnRYRzRnSUdacGJHd2dhV052Ym1OdmJHOXlJRzl5SUNNelpqY3lPV0pjYmx4dUxtbGpiMjR0TFdWcExYTmpMV3hwYm10bFpHbHVYRzRnSUdacGJHd2dhV052Ym1OdmJHOXlJRzl5SUNNd09UYzJZalJjYmx4dUxtbGpiMjR0TFdWcExYTmpMVzlrYm05cmJHRnpjMjVwYTJsY2JpQWdabWxzYkNCcFkyOXVZMjlzYjNJZ2IzSWdJMlZrT0RFeVlseHVYRzR1YVdOdmJpMHRaV2t0YzJNdGMydDVjR1ZjYmlBZ1ptbHNiQ0JwWTI5dVkyOXNiM0lnYjNJZ0l6QXdZV1ptTUZ4dVhHNHVhV052YmkwdFpXa3RjMk10YzI5MWJtUmpiRzkxWkZ4dUlDQm1hV3hzSUdsamIyNWpiMnh2Y2lCdmNpQWpaamd3WEc1Y2JpNXBZMjl1TFMxbGFTMXpZeTEwZFcxaWJISmNiaUFnWm1sc2JDQnBZMjl1WTI5c2IzSWdiM0lnSXpNMU5EWTFZMXh1WEc0dWFXTnZiaTB0WldrdGMyTXRkSGRwZEhSbGNseHVJQ0JtYVd4c0lHbGpiMjVqYjJ4dmNpQnZjaUFqTlRWaFkyVmxYRzVjYmk1cFkyOXVMUzFsYVMxell5MTJhVzFsYjF4dUlDQm1hV3hzSUdsamIyNWpiMnh2Y2lCdmNpQWpNV0ZpTjJWaFhHNWNiaTVwWTI5dUxTMWxhUzF6WXkxMmExeHVJQ0JtYVd4c0lHbGpiMjVqYjJ4dmNpQnZjaUFqTkRVMk5qaGxYRzVjYmk1cFkyOXVMUzFsYVMxell5MTViM1YwZFdKbFhHNGdJR1pwYkd3Z2FXTnZibU52Ykc5eUlHOXlJQ05sTlRKa01qZGNiaUFnWEc0dWFXTnZiaTB0WldrdGJtRjJhV052Ymx4dUlDQm1hV3hzSUdsamIyNWpiMnh2Y2lCdmNpQnBibVJwWjI5Y2JpSXNJaThxSUUxaFoyNXBabWxqSUZCdmNIVndJRU5UVXlBcUwxeHVMbTFtY0MxaVp5QjdYRzRnSUhSdmNEb2dNRHRjYmlBZ2JHVm1kRG9nTUR0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ2VpMXBibVJsZURvZ01UQTBNanRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdjRzl6YVhScGIyNDZJR1pwZUdWa08xeHVJQ0JpWVdOclozSnZkVzVrT2lBak1HSXdZakJpTzF4dUlDQnZjR0ZqYVhSNU9pQXdMamc3WEc0Z0lDOHZabWxzZEdWeU9pQmhiSEJvWVNodmNHRmphWFI1UFRnd0tUdGNibjFjYmx4dUxtMW1jQzEzY21Gd0lIdGNiaUFnZEc5d09pQXdPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNCNkxXbHVaR1Y0T2lBeE1EUXpPMXh1SUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lHOTFkR3hwYm1VNklHNXZibVVnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdMWGRsWW10cGRDMWlZV05yWm1GalpTMTJhWE5wWW1sc2FYUjVPaUJvYVdSa1pXNDdJSDFjYmx4dUxtMW1jQzFqYjI1MFlXbHVaWElnZTF4dUlDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ2JHVm1kRG9nTUR0Y2JpQWdkRzl3T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3SURod2VEdGNiaUFnTFhkbFltdHBkQzFpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVJQ0F0Ylc5NkxXSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3SUgxY2JseHVMbTFtY0MxamIyNTBZV2x1WlhJNlltVm1iM0psSUh0Y2JpQWdZMjl1ZEdWdWREb2dKeWM3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPeUI5WEc1Y2JpNXRabkF0WVd4cFoyNHRkRzl3SUM1dFpuQXRZMjl1ZEdGcGJtVnlPbUpsWm05eVpTQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVTdJSDFjYmx4dUxtMW1jQzFqYjI1MFpXNTBJSHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQnRhV1JrYkdVN1hHNGdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1SUNCNkxXbHVaR1Y0T2lBeE1EUTFPeUI5WEc1Y2JpNXRabkF0YVc1c2FXNWxMV2h2YkdSbGNpQXViV1p3TFdOdmJuUmxiblFzSUM1dFpuQXRZV3BoZUMxb2IyeGtaWElnTG0xbWNDMWpiMjUwWlc1MElIdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNGdJR04xY25OdmNqb2dZWFYwYnpzZ2ZWeHVYRzR1Yldad0xXRnFZWGd0WTNWeUlIdGNiaUFnWTNWeWMyOXlPaUJ3Y205bmNtVnpjenNnZlZ4dVhHNHViV1p3TFhwdmIyMHRiM1YwTFdOMWNpd2dMbTFtY0MxNmIyOXRMVzkxZEMxamRYSWdMbTFtY0MxcGJXRm5aUzFvYjJ4a1pYSWdMbTFtY0MxamJHOXpaU0I3WEc0Z0lHTjFjbk52Y2pvZ0xXMXZlaTE2YjI5dExXOTFkRHRjYmlBZ1kzVnljMjl5T2lBdGQyVmlhMmwwTFhwdmIyMHRiM1YwTzF4dUlDQmpkWEp6YjNJNklIcHZiMjB0YjNWME95QjlYRzVjYmk1dFpuQXRlbTl2YlNCN1hHNGdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnWTNWeWMyOXlPaUF0ZDJWaWEybDBMWHB2YjIwdGFXNDdYRzRnSUdOMWNuTnZjam9nTFcxdmVpMTZiMjl0TFdsdU8xeHVJQ0JqZFhKemIzSTZJSHB2YjIwdGFXNDdJSDFjYmx4dUxtMW1jQzFoZFhSdkxXTjFjbk52Y2lBdWJXWndMV052Ym5SbGJuUWdlMXh1SUNCamRYSnpiM0k2SUdGMWRHODdJSDFjYmx4dUxtMW1jQzFqYkc5elpTd2dMbTFtY0MxaGNuSnZkeXdnTG0xbWNDMXdjbVZzYjJGa1pYSXNJQzV0Wm5BdFkyOTFiblJsY2lCN1hHNGdJQzEzWldKcmFYUXRkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzRnSUMxdGIzb3RkWE5sY2kxelpXeGxZM1E2SUc1dmJtVTdYRzRnSUhWelpYSXRjMlZzWldOME9pQnViMjVsT3lCOVhHNWNiaTV0Wm5BdGJHOWhaR2x1Wnk1dFpuQXRabWxuZFhKbElIdGNiaUFnWkdsemNHeGhlVG9nYm05dVpUc2dmVnh1WEc0dWJXWndMV2hwWkdVZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdJSDFjYmx4dUxtMW1jQzF3Y21Wc2IyRmtaWElnZTF4dUlDQmpiMnh2Y2pvZ0kwTkRRenRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0IwYjNBNklEVXdKVHRjYmlBZ2QybGtkR2c2SUdGMWRHODdYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdiV0Z5WjJsdUxYUnZjRG9nTFRBdU9HVnRPMXh1SUNCc1pXWjBPaUE0Y0hnN1hHNGdJSEpwWjJoME9pQTRjSGc3WEc0Z0lIb3RhVzVrWlhnNklERXdORFE3SUgxY2JpQWdMbTFtY0Mxd2NtVnNiMkZrWlhJZ1lTQjdYRzRnSUNBZ1kyOXNiM0k2SUNORFEwTTdJSDFjYmlBZ0lDQXViV1p3TFhCeVpXeHZZV1JsY2lCaE9taHZkbVZ5SUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUFqUmtaR095QjlYRzVjYmk1dFpuQXRjeTF5WldGa2VTQXViV1p3TFhCeVpXeHZZV1JsY2lCN1hHNGdJR1JwYzNCc1lYazZJRzV2Ym1VN0lIMWNibHh1TG0xbWNDMXpMV1Z5Y205eUlDNXRabkF0WTI5dWRHVnVkQ0I3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3SUgxY2JseHVZblYwZEc5dUxtMW1jQzFqYkc5elpTd2dZblYwZEc5dUxtMW1jQzFoY25KdmR5QjdYRzRnSUc5MlpYSm1iRzkzT2lCMmFYTnBZbXhsTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JpYjNKa1pYSTZJREE3WEc0Z0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dibTl1WlR0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJRzkxZEd4cGJtVTZJRzV2Ym1VN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lIb3RhVzVrWlhnNklERXdORFk3WEc0Z0lDMTNaV0pyYVhRdFltOTRMWE5vWVdSdmR6b2dibTl1WlR0Y2JpQWdZbTk0TFhOb1lXUnZkem9nYm05dVpUc2dmVnh1WW5WMGRHOXVPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlJSHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnWW05eVpHVnlPaUF3T3lCOVhHNWNiaTV0Wm5BdFkyeHZjMlVnZTF4dUlDQjNhV1IwYURvZ05EUndlRHRjYmlBZ2FHVnBaMmgwT2lBME5IQjRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dORFJ3ZUR0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCeWFXZG9kRG9nTUR0Y2JpQWdkRzl3T2lBd08xeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ2IzQmhZMmwwZVRvZ01DNDJOVHRjYmlBZ0x5OW1hV3gwWlhJNklHRnNjR2hoS0c5d1lXTnBkSGs5TmpVcE8xeHVJQ0J3WVdSa2FXNW5PaUF3SURBZ01UaHdlQ0F4TUhCNE8xeHVJQ0JqYjJ4dmNqb2dJMFpHUmp0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1SUNCbWIyNTBMWE5wZW1VNklESTRjSGc3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJCY21saGJDd2dRbUZ6YTJWeWRtbHNiR1VzSUcxdmJtOXpjR0ZqWlRzZ2ZWeHVJQ0F1Yldad0xXTnNiM05sT21odmRtVnlMQ0F1Yldad0xXTnNiM05sT21adlkzVnpJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXhPMXh1SUNBZ0lDOHZabWxzZEdWeU9pQmhiSEJvWVNodmNHRmphWFI1UFRFd01DazdYRzRnSUgxY2JpQWdMbTFtY0MxamJHOXpaVHBoWTNScGRtVWdlMXh1SUNBZ0lIUnZjRG9nTVhCNE95QjlYRzVjYmk1dFpuQXRZMnh2YzJVdFluUnVMV2x1SUM1dFpuQXRZMnh2YzJVZ2UxeHVJQ0JqYjJ4dmNqb2dJek16TXpzZ2ZWeHVYRzR1Yldad0xXbHRZV2RsTFdodmJHUmxjaUF1Yldad0xXTnNiM05sTENBdWJXWndMV2xtY21GdFpTMW9iMnhrWlhJZ0xtMW1jQzFqYkc5elpTQjdYRzRnSUdOdmJHOXlPaUFqUmtaR08xeHVJQ0J5YVdkb2REb2dMVFp3ZUR0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nY21sbmFIUTdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJRFp3ZUR0Y2JpQWdkMmxrZEdnNklERXdNQ1U3SUgxY2JseHVMbTFtY0MxamIzVnVkR1Z5SUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMGIzQTZJREE3WEc0Z0lISnBaMmgwT2lBd08xeHVJQ0JqYjJ4dmNqb2dJME5EUXp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TW5CNE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01UaHdlRHRjYmlBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEc2dmVnh1WEc0dWJXWndMV0Z5Y205M0lIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQnZjR0ZqYVhSNU9pQXdMalkxTzF4dUlDQXZMMlpwYkhSbGNqb2dZV3h3YUdFb2IzQmhZMmwwZVQwMk5TazdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdkRzl3T2lBMU1DVTdYRzRnSUcxaGNtZHBiaTEwYjNBNklDMDFOWEI0TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCM2FXUjBhRG9nT1RCd2VEdGNiaUFnYUdWcFoyaDBPaUF4TVRCd2VEdGNiaUFnTFhkbFltdHBkQzEwWVhBdGFHbG5hR3hwWjJoMExXTnZiRzl5T2lCeVoySmhLREFzSURBc0lEQXNJREFwT3lCOVhHNGdJQzV0Wm5BdFlYSnliM2M2WVdOMGFYWmxJSHRjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF0TlRSd2VEc2dmVnh1SUNBdWJXWndMV0Z5Y205M09taHZkbVZ5TENBdWJXWndMV0Z5Y205M09tWnZZM1Z6SUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF4TzF4dUlDQWdJQzh2Wm1sc2RHVnlPaUJoYkhCb1lTaHZjR0ZqYVhSNVBURXdNQ2s3WEc0Z0lIMWNiaUFnTG0xbWNDMWhjbkp2ZHpwaVpXWnZjbVVzSUM1dFpuQXRZWEp5YjNjNllXWjBaWElzSUM1dFpuQXRZWEp5YjNjZ0xtMW1jQzFpTENBdWJXWndMV0Z5Y205M0lDNXRabkF0WVNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nSnljN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ2QybGtkR2c2SURBN1hHNGdJQ0FnYUdWcFoyaDBPaUF3TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF6TlhCNE8xeHVJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXpOWEI0TzF4dUlDQWdJR0p2Y21SbGNqb2diV1ZrYVhWdElHbHVjMlYwSUhSeVlXNXpjR0Z5Wlc1ME95QjlYRzRnSUM1dFpuQXRZWEp5YjNjNllXWjBaWElzSUM1dFpuQXRZWEp5YjNjZ0xtMW1jQzFoSUh0Y2JpQWdJQ0JpYjNKa1pYSXRkRzl3TFhkcFpIUm9PaUF4TTNCNE8xeHVJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMHRkMmxrZEdnNklERXpjSGc3WEc0Z0lDQWdkRzl3T2lBNGNIZzdJSDFjYmlBZ0xtMW1jQzFoY25KdmR6cGlaV1p2Y21Vc0lDNXRabkF0WVhKeWIzY2dMbTFtY0MxaUlIdGNiaUFnSUNCaWIzSmtaWEl0ZEc5d0xYZHBaSFJvT2lBeU1YQjRPMXh1SUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjB0ZDJsa2RHZzZJREl4Y0hnN1hHNGdJQ0FnYjNCaFkybDBlVG9nTUM0M095QjlYRzVjYmk1dFpuQXRZWEp5YjNjdGJHVm1kQ0I3WEc0Z0lHeGxablE2SURBN0lIMWNiaUFnTG0xbWNDMWhjbkp2ZHkxc1pXWjBPbUZtZEdWeUxDQXViV1p3TFdGeWNtOTNMV3hsWm5RZ0xtMW1jQzFoSUh0Y2JpQWdJQ0JpYjNKa1pYSXRjbWxuYUhRNklERTNjSGdnYzI5c2FXUWdJMFpHUmp0Y2JpQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ016RndlRHNnZlZ4dUlDQXViV1p3TFdGeWNtOTNMV3hsWm5RNlltVm1iM0psTENBdWJXWndMV0Z5Y205M0xXeGxablFnTG0xbWNDMWlJSHRjYmlBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTWpWd2VEdGNiaUFnSUNCaWIzSmtaWEl0Y21sbmFIUTZJREkzY0hnZ2MyOXNhV1FnSXpOR00wWXpSanNnZlZ4dVhHNHViV1p3TFdGeWNtOTNMWEpwWjJoMElIdGNiaUFnY21sbmFIUTZJREE3SUgxY2JpQWdMbTFtY0MxaGNuSnZkeTF5YVdkb2REcGhablJsY2l3Z0xtMW1jQzFoY25KdmR5MXlhV2RvZENBdWJXWndMV0VnZTF4dUlDQWdJR0p2Y21SbGNpMXNaV1owT2lBeE4zQjRJSE52Ykdsa0lDTkdSa1k3WEc0Z0lDQWdiV0Z5WjJsdUxXeGxablE2SURNNWNIZzdJSDFjYmlBZ0xtMW1jQzFoY25KdmR5MXlhV2RvZERwaVpXWnZjbVVzSUM1dFpuQXRZWEp5YjNjdGNtbG5hSFFnTG0xbWNDMWlJSHRjYmlBZ0lDQmliM0prWlhJdGJHVm1kRG9nTWpkd2VDQnpiMnhwWkNBak0wWXpSak5HT3lCOVhHNWNiaTV0Wm5BdGFXWnlZVzFsTFdodmJHUmxjaUI3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUEwTUhCNE8xeHVJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOREJ3ZURzZ2ZWeHVJQ0F1Yldad0xXbG1jbUZ0WlMxb2IyeGtaWElnTG0xbWNDMWpiMjUwWlc1MElIdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNRHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQnRZWGd0ZDJsa2RHZzZJRGt3TUhCNE95QjlYRzRnSUM1dFpuQXRhV1p5WVcxbExXaHZiR1JsY2lBdWJXWndMV05zYjNObElIdGNiaUFnSUNCMGIzQTZJQzAwTUhCNE95QjlYRzVjYmk1dFpuQXRhV1p5WVcxbExYTmpZV3hsY2lCN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQm9aV2xuYUhRNklEQTdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUExTmk0eU5TVTdJSDFjYmlBZ0xtMW1jQzFwWm5KaGJXVXRjMk5oYkdWeUlHbG1jbUZ0WlNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnSUNCaWIzZ3RjMmhoWkc5M09pQXdJREFnT0hCNElISm5ZbUVvTUN3Z01Dd2dNQ3dnTUM0MktUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWpNREF3T3lCOVhHNWNiaThxSUUxaGFXNGdhVzFoWjJVZ2FXNGdjRzl3ZFhBZ0tpOWNibWx0Wnk1dFpuQXRhVzFuSUh0Y2JpQWdkMmxrZEdnNklHRjFkRzg3WEc0Z0lHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdhR1ZwWjJoME9pQmhkWFJ2TzF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURBN1hHNGdJQzEzWldKcmFYUXRZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdMVzF2ZWkxaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1SUNCd1lXUmthVzVuT2lBME1IQjRJREFnTkRCd2VEdGNiaUFnYldGeVoybHVPaUF3SUdGMWRHODdJSDFjYmx4dUx5b2dWR2hsSUhOb1lXUnZkeUJpWldocGJtUWdkR2hsSUdsdFlXZGxJQ292WEc0dWJXWndMV1pwWjNWeVpTQjdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXdPeUI5WEc0Z0lDNXRabkF0Wm1sbmRYSmxPbUZtZEdWeUlIdGNiaUFnSUNCamIyNTBaVzUwT2lBbkp6dGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQjBiM0E2SURRd2NIZzdYRzRnSUNBZ1ltOTBkRzl0T2lBME1IQjRPMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lIZHBaSFJvT2lCaGRYUnZPMXh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQjZMV2x1WkdWNE9pQXRNVHRjYmlBZ0lDQmliM2d0YzJoaFpHOTNPaUF3SURBZ09IQjRJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNDJLVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFqTkRRME95QjlYRzRnSUM1dFpuQXRabWxuZFhKbElITnRZV3hzSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dJMEpFUWtSQ1JEdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV5Y0hnN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERTBjSGc3SUgxY2JpQWdMbTFtY0MxbWFXZDFjbVVnWm1sbmRYSmxJSHRjYmlBZ0lDQnRZWEpuYVc0NklEQTdJSDFjYmx4dUxtMW1jQzFpYjNSMGIyMHRZbUZ5SUh0Y2JpQWdiV0Z5WjJsdUxYUnZjRG9nTFRNMmNIZzdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdkRzl3T2lBeE1EQWxPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ1kzVnljMjl5T2lCaGRYUnZPeUI5WEc1Y2JpNXRabkF0ZEdsMGJHVWdlMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVRod2VEdGNiaUFnWTI5c2IzSTZJQ05HTTBZelJqTTdYRzRnSUhkdmNtUXRkM0poY0RvZ1luSmxZV3N0ZDI5eVpEdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNelp3ZURzZ2ZWeHVYRzR1Yldad0xXbHRZV2RsTFdodmJHUmxjaUF1Yldad0xXTnZiblJsYm5RZ2UxeHVJQ0J0WVhndGQybGtkR2c2SURFd01DVTdJSDFjYmx4dUxtMW1jQzFuWVd4c1pYSjVJQzV0Wm5BdGFXMWhaMlV0YUc5c1pHVnlJQzV0Wm5BdFptbG5kWEpsSUh0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU95QjlYRzVjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklEZ3dNSEI0S1NCaGJtUWdLRzl5YVdWdWRHRjBhVzl1T2lCc1lXNWtjMk5oY0dVcExDQnpZM0psWlc0Z1lXNWtJQ2h0WVhndGFHVnBaMmgwT2lBek1EQndlQ2tnZTF4dUlDQXZLaXBjYmlBZ0lDQWdJQ0FxSUZKbGJXOTJaU0JoYkd3Z2NHRmtaR2x1WjNNZ1lYSnZkVzVrSUhSb1pTQnBiV0ZuWlNCdmJpQnpiV0ZzYkNCelkzSmxaVzVjYmlBZ0lDQWdJQ0FxTDF4dUlDQXViV1p3TFdsdFp5MXRiMkpwYkdVZ0xtMW1jQzFwYldGblpTMW9iMnhrWlhJZ2UxeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dNRHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBd095QjlYRzRnSUM1dFpuQXRhVzFuTFcxdlltbHNaU0JwYldjdWJXWndMV2x0WnlCN1hHNGdJQ0FnY0dGa1pHbHVaem9nTURzZ2ZWeHVJQ0F1Yldad0xXbHRaeTF0YjJKcGJHVWdMbTFtY0MxbWFXZDFjbVU2WVdaMFpYSWdlMXh1SUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0JpYjNSMGIyMDZJREE3SUgxY2JpQWdMbTFtY0MxcGJXY3RiVzlpYVd4bElDNXRabkF0Wm1sbmRYSmxJSE50WVd4c0lIdGNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVU3WEc0Z0lDQWdiV0Z5WjJsdUxXeGxablE2SURWd2VEc2dmVnh1SUNBdWJXWndMV2x0WnkxdGIySnBiR1VnTG0xbWNDMWliM1IwYjIwdFltRnlJSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUJ5WjJKaEtEQXNJREFzSURBc0lEQXVOaWs3WEc0Z0lDQWdZbTkwZEc5dE9pQXdPMXh1SUNBZ0lHMWhjbWRwYmpvZ01EdGNiaUFnSUNCMGIzQTZJR0YxZEc4N1hHNGdJQ0FnY0dGa1pHbHVaem9nTTNCNElEVndlRHRjYmlBZ0lDQndiM05wZEdsdmJqb2dabWw0WldRN1hHNGdJQ0FnTFhkbFltdHBkQzFpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVJQ0FnSUMxdGIzb3RZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE95QjlYRzRnSUNBZ0xtMW1jQzFwYldjdGJXOWlhV3hsSUM1dFpuQXRZbTkwZEc5dExXSmhjanBsYlhCMGVTQjdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXdPeUI5WEc0Z0lDNXRabkF0YVcxbkxXMXZZbWxzWlNBdWJXWndMV052ZFc1MFpYSWdlMXh1SUNBZ0lISnBaMmgwT2lBMWNIZzdYRzRnSUNBZ2RHOXdPaUF6Y0hnN0lIMWNiaUFnTG0xbWNDMXBiV2N0Ylc5aWFXeGxJQzV0Wm5BdFkyeHZjMlVnZTF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCeWFXZG9kRG9nTUR0Y2JpQWdJQ0IzYVdSMGFEb2dNelZ3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJRE0xY0hnN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklETTFjSGc3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ3dMQ0F3TENBd0xDQXdMallwTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnY0dGa1pHbHVaem9nTURzZ2ZWeHVJSDFjYmx4dVFHMWxaR2xoSUdGc2JDQmhibVFnS0cxaGVDMTNhV1IwYURvZ09UQXdjSGdwSUh0Y2JpQWdMbTFtY0MxaGNuSnZkeUI3WEc0Z0lDQWdMWGRsWW10cGRDMTBjbUZ1YzJadmNtMDZJSE5qWVd4bEtEQXVOelVwTzF4dUlDQWdJSFJ5WVc1elptOXliVG9nYzJOaGJHVW9NQzQzTlNrN0lIMWNibHh1SUNBdWJXWndMV0Z5Y205M0xXeGxablFnZTF4dUlDQWdJQzEzWldKcmFYUXRkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dNRHRjYmlBZ0lDQjBjbUZ1YzJadmNtMHRiM0pwWjJsdU9pQXdPeUI5WEc1Y2JpQWdMbTFtY0MxaGNuSnZkeTF5YVdkb2RDQjdYRzRnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMlp2Y20wdGIzSnBaMmx1T2lBeE1EQWxPMXh1SUNBZ0lIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklERXdNQ1U3SUgxY2JseHVJQ0F1Yldad0xXTnZiblJoYVc1bGNpQjdYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUEyY0hnN1hHNGdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dObkI0T3lCOVhHNGdmVnh1WEc0dWJXWndMV2xsTnlBdWJXWndMV2x0WnlCN1hHNGdJSEJoWkdScGJtYzZJREE3SUgxY2JpNXRabkF0YVdVM0lDNXRabkF0WW05MGRHOXRMV0poY2lCN1hHNGdJSGRwWkhSb09pQTJNREJ3ZUR0Y2JpQWdiR1ZtZERvZ05UQWxPMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dMVE13TUhCNE8xeHVJQ0J0WVhKbmFXNHRkRzl3T2lBMWNIZzdYRzRnSUhCaFpHUnBibWN0WW05MGRHOXRPaUExY0hnN0lIMWNiaTV0Wm5BdGFXVTNJQzV0Wm5BdFkyOXVkR0ZwYm1WeUlIdGNiaUFnY0dGa1pHbHVaem9nTURzZ2ZWeHVMbTFtY0MxcFpUY2dMbTFtY0MxamIyNTBaVzUwSUh0Y2JpQWdjR0ZrWkdsdVp5MTBiM0E2SURRMGNIZzdJSDFjYmk1dFpuQXRhV1UzSUM1dFpuQXRZMnh2YzJVZ2UxeHVJQ0IwYjNBNklEQTdYRzRnSUhKcFoyaDBPaUF3TzF4dUlDQndZV1JrYVc1bkxYUnZjRG9nTURzZ2ZTSmRMQ0p6YjNWeVkyVlNiMjkwSWpvaUwzTnZkWEpqWlM4aWZRPT0gKi8iLCIqXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3hcbiAgbWFyZ2luIDBcblxuICAmOjphZnRlcixcbiAgJjo6YmVmb3JlXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxuXG5cbi8vIElURU1TXG4vLyAgSXRlbXMgYXJlIGFsd2F5cyBhIFVMIG9yIE9MLlxuW2NsYXNzKj0nX19pdGVtcyddXG4gIGxpc3Qtc3R5bGU6IG5vbmVcbiAgbWFyZ2luOiAwXG4iLCIvLyBSRVNQT05TSVZFIElNQUdFU1xuaW1nLCBpZnJhbWUsIGVtYmVkXG4gIHdpZHRoOiAxMDAlXG4iLCIuY29udGFpbmVyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZcbiAgbWFyZ2luOiAwIGF1dG9cbiAgbWF4LXdpZHRoOiAxMjAwcHhcblxuXG5cbltjbGFzcyo9J2NvbC0nXVxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGVcblxuXG4vLyBDT05UQUlORVJcbi8vICBUaGlzIGlzIHVzZWQgdG8gY29uc3RyYWluIHRoZSBjb250ZW50IG9mIHRoZSBzaXRlIHRvIGEgc3RhbmRhcmQgd2lkdGhcbltjbGFzcyo9J19fY29udGFpbmVyJ11cbiAgbWFyZ2luOiAwIGF1dG9cbiAgbWF4LXdpZHRoOiAxMjAwcHhcblxuXG5cbi8vIEFsbCBjb2x1bW5zIDEgLSAxMiBhcmUgbWFkZSB3aXRoIHRoaXMgbGl0dGxlIGZ1bmN0aW9uXG5jb2x1bW5zID0gMTJcblxuZm9yIGkgaW4gKDEuLmNvbHVtbnMpXG4gIFtjbGFzcyo9Y29sLXtpfS17Y29sdW1uc31dXG4gICAgd2lkdGg6IChpL2NvbHVtbnMpICogMTAwJVxuXG4gICAgLy9hZGQgaW5jbHVkZSBtZWRpYSBxdWVyaWVzIGhlcmVcblxuXG4vLyBjb2wtMS0xMlxuLy8gY29sLTItMTJcbi8vIGNvbC0zLTEyXG4vLyBjb2wtNC0xMlxuLy8gY29sLTUtMTJcbi8vIGNvbC02LTEyXG4vLyBjb2wtNy0xMlxuLy8gY29sLTgtMTJcbi8vIGNvbC05LTEyXG4vLyBjb2wtMTAtMTJcbi8vIGNvbC0xMS0xMlxuLy8gY29sLTEyLTEyXG5cbi50ZXN0LS1jb2wtMi0xMlxuICBiYWNrZ3JvdW5kLWNvbG9yIHJlZFxuIiwiLy8gVmFyc1xuYmFzZS1mb250LXNpemUgPSAyMHB4XG5iYXNlLWxpbmUtaGVpZ2h0ID0gMS41XG5cblxuLy8gVHlwZWZhY2VzXG5cblNhbnMgPSB7XG4gIGZvbnQ6IE5ld3MgQ3ljbGVcXCwgc2Fucy1zZXJpZixcbiAgd2VpZ2h0OiB7XG4gICAgbm9ybWFsOiA0MDAsXG4gICAgYm9sZDogNzAwXG4gIH1cbn1cblxuU2VyaWYgPSB7XG4gIGZvbnQ6IFBsYXlmYWlyIERpc3BsYXlcXCwgc2VyaWYsXG4gIHdlaWdodDoge1xuICAgIG5vcm1hbDogNDAwLFxuICAgIGJvbGQ6IDcwMCxcbiAgICB1bHRyYTogOTAwXG4gIH1cbn1cblxuXG4vLyBMaW5lIGhlaWdodCBmdW5jdGlvblxubGluZS1oZWlnaHQtZnVuY3Rpb24oKVxuICBiYXNlLWZvbnQtc2l6ZSAqIGJhc2UtbGluZS1oZWlnaHRcblxuXG4vLyBWYXIgbXVzdCBiZSBzcGVjaWZpZWQgYWZ0ZXIgcmV0dXJuaW5nIHRoZSBsaW5lLWhlaWdodCBmdW5jdGlvblxuY2FsLWxpbmUtaGVpZ2h0ID0gbGluZS1oZWlnaHQtZnVuY3Rpb24oKVxuXG5cbmh0bWxcbiAgZm9udC1zaXplOiBiYXNlLWZvbnQtc2l6ZVxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXG5cblxuYm9keVxuICBjb2xvciBsZWFkXG4gIGZvbnQtZmFtaWx5OiBTYW5zLmZvbnRcbiAgbGluZS1oZWlnaHQgYmFzZS1saW5lLWhlaWdodFxuICBtYXJnaW4gMFxuXG5cbltjbGFzcyo9J19faGVhZGluZyddXG4gIGNvbG9yIGdyZWVuXG4gIGZvbnQtZmFtaWx5OiBTZXJpZi5mb250XG4gIGZvbnQtc2l6ZSAyLjVyZW1cbiAgZm9udC13ZWlnaHQgbm9ybWFsXG4gIGxpbmUtaGVpZ2h0IDFcbiAgbWFyZ2luLWJvdHRvbSAycmVtXG5cblxuLy8gQW5jaG9yIHRleHRcbmFcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG4gIGNvbG9yOiBncmVlblxuXG4gICY6aG92ZXJcbiAgICBjb2xvcjogbmlnaHRncmVlblxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG5cbi8vIEJ1dHRvbnNcbltjbGFzcyo9J19fYnV0dG9uJ11cbiAgYm9yZGVyIDJweCBzb2xpZCBncmVlblxuICBjb2xvciBncmVlblxuICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICBwYWRkaW5nIC41cmVtIDFyZW1cblxuICAmOmhvdmVyXG4gICAgYmFja2dyb3VuZC1jb2xvciBncmVlblxuICAgIGNvbG9yIHdoaXRlXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXG5cblxuLy8gQ29udGVudCBBcmVhc1xuW2NsYXNzKj0nY29udGVudCddXG4gIC8vIEFkZCBtYXJnaW4gYm90dG9tIHRvIGFsbCBlbGVtZW50cyBpbnNpZGUgdGhpcyBjb250YWluZXJcbiAgJiA+ICpcbiAgICBtYXJnaW4tYm90dG9tIDEuNXJlbVxuIiwiI2RyYXdlclxuICBiYWNrZ3JvdW5kLWNvbG9yIGRhcmtncmVlblxuICBwb3NpdGlvbiBhYnNvbHV0ZVxuICByaWdodCAwXG4gIHRvcCAwXG5cbiAgaGVpZ2h0IDEwMCVcbiAgd2lkdGggMjAwcHhcbiAgei1pbmRleCAyXG5cbiAgdHJhbnNmb3JtIHRyYW5zbGF0ZVgoMjAwcHgpXG4gIHRyYW5zaXRpb24gdHJhbnNmb3JtIC41cyBlYXNlLWluLW91dFxuXG4gICYuc2xpZGVcbiAgICB0cmFuc2Zvcm0gdHJhbnNsYXRlWCgwKVxuXG4gIGFcbiAgICBib3JkZXItYm90dG9tIDFweCBzb2xpZCB3aGl0ZVxuICAgIGNvbG9yIHdoaXRlXG4gICAgZGlzcGxheSBibG9ja1xuICAgIHBhZGRpbmcgLjc1cmVtIDBcbiAgICB0ZXh0LWFsaWduIGNlbnRlclxuXG4gICAgJjpob3ZlclxuICAgICAgYmFja2dyb3VuZC1jb2xvciBuaWdodGdyZWVuXG4gICAgICBjb2xvciB3aGl0ZVxuXG5cbiN0b2dnbGVcbiAgbWFyZ2luLXJpZ2h0IDBcbiAgLy92ZXJ0aWNhbC1hbGlnbiAuOHJlbVxuICB0cmFuc2l0aW9uIG1hcmdpbi1yaWdodCAuNXMgZWFzZS1pbi1vdXRcblxuI3RvZ2dsZS5tb3ZlXG4gIG1hcmdpbi1yaWdodCAyMDBweFxuIiwiLmZvb3RlclxuICBwYWRkaW5nLXRvcCAycmVtXG5cbiAgcFxuICAgIGZvbnQtc2l6ZSAxMXB4XG4gICAgY29sb3IgdGluXG4gICAgdGV4dC1hbGlnbiBjZW50ZXJcbiIsIi5zcGxhc2gtcGFnZVxuICBiYWNrZ3JvdW5kLWNvbG9yIHNhbmRcblxuLmhlYWRlclxuICBiYWNrZ3JvdW5kLWNvbG9yIHdoaXRlXG4gIGRpc3BsYXkgdGFibGVcbiAgb3ZlcmZsb3cgaGlkZGVuXG4gIHBhZGRpbmcgMXJlbSAycmVtXG4gIHdpZHRoIDEwMCVcblxuICArYmVsb3coNTUwcHgpXG4gICAgZGlzcGxheSBibG9ja1xuXG4gICZfX2xvZ28tLWNvbC00LTEyXG4gICAgd2lkdGggMjAlXG5cbiAgICArdGFibGV0KClcbiAgICAgIHdpZHRoIDUwJVxuXG4gICAgK2JlbG93KDU1MHB4KVxuICAgICAgd2lkdGggNzAlXG5cbiAgJl9fc29jaWFsLW5hdi0tY29sLTgtMTJcbiAgICB0ZXh0LWFsaWduIHJpZ2h0XG5cbiAgICArdGFibGV0KClcbiAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgICB3aWR0aCAxMDAlXG5cbiAgICArYmVsb3coNTUwcHgpXG4gICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICAgIHdpZHRoIDEwMCVcblxuXG4uYmFubmVyLXNwbGFzaFxuICBiYWNrZ3JvdW5kIHVybCgnaW1nL0NvbW1lcmNlXzE1MF9oZXJvLTEuanBnJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXJcbiAgYmFja2dyb3VuZC1zaXplIGNvdmVyXG4gIGhlaWdodCAzNTBweFxuICB3aWR0aCAxMDAlXG5cbiAgK3RhYmxldCgpXG4gICAgaGVpZ2h0IDI1MHB4XG5cbiAgK2JlbG93KDY1MHB4KVxuICAgIGhlaWdodCAxNTBweFxuXG4ubWFpblxuICBiYWNrZ3JvdW5kLWNvbG9yIHNhbmRcbiAgLy9kaXNwbGF5IHRhYmxlXG4gIHBhZGRpbmctdG9wIDEuNXJlbVxuICB3aWR0aCAxMDAlXG5cbiAgLy8mX19jb250YWluZXJcblxuICAmX19zaWRlYmFyLWNvbnRlbnQtLWNvbC0yLTEyXG4gICAgcGFkZGluZyAwIDFyZW1cbiAgICB2ZXJ0aWNhbC1hbGlnbiB0b3BcblxuICAgICtiZWxvdyg4OTBweClcbiAgICAgIHdpZHRoIDQwJVxuXG4gICAgK2JlbG93KDY5MHB4KVxuICAgICAgZGlzcGxheSBibG9ja1xuICAgICAgd2lkdGggMTAwJVxuXG4gICZfX3NpZGViYXItbWVkaWFcbiAgICB0ZXh0LWFsaWduIGNlbnRlclxuICAgIHBcbiAgICAgICtiZWxvdyg2OTBweClcbiAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICAgICAgd2lkdGggMzMlXG5cbiAgJl9fY29udGVudC0tY29sLTYtMTJcbiAgICBwYWRkaW5nIDAgMXJlbVxuXG4gICAgK2JlbG93KDg5MHB4KVxuICAgICAgd2lkdGggNjAlXG5cbiAgICArYmVsb3coNjkwcHgpXG4gICAgICBkaXNwbGF5IGJsb2NrXG4gICAgICB3aWR0aCAxMDAlXG5cbiAgJl9faGVhZGluZ1xuICAgIGNvbG9yIGdyZWVuXG4gICAgZm9udC1zaXplIDJyZW1cblxuICAgICtiZWxvdyg1NTBweClcbiAgICAgIGxpbmUtaGVpZ2h0IDFcblxuICAgICtiZWxvdyg0NTBweClcbiAgICAgIHRleHQtYWxpZ24gY2VudGVyXG5cbiAgICBzcGFuXG4gICAgICArYmVsb3coNzI1cHgpXG4gICAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG5cbiAgJl9fYnV0dG9uXG4gICAgYm9yZGVyIDJweCBzb2xpZCBncmVlblxuICAgIGNvbG9yIGdyZWVuXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICBwYWRkaW5nLjVyZW0gMXJlbVxuICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgd2lkdGggMTAwJVxuXG4gICAgJjpob3ZlclxuICAgICAgYmFja2dyb3VuZC1jb2xvciBncmVlblxuICAgICAgY29sb3Igc2xhdGVcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuIiwiLy8gVUlcbi8vXG4vLyB0aW1lbGluZVxudGltZWxpbmUtYmcgPSB3aGl0ZVxuYWN0aXZlLWNvbG9yID0gY2hhcmNvYWxcbm5vdC1hY3RpdmUtY29sb3IgPSB3aGl0ZVxuXG5mYWRlID0gYWxsIDFzIGVhc2UtaW5cblxuLy8gU2xpZGUgc2V0dGluZ3Ncbi8vXG4vLyBIZWFkaW5nXG5jb250ZW50LWNvbG9yID0gY2hhcmNvYWxcbi8vIHRleHRcbi8vXG4vLyBJbWFnZVxuXG5odG1sXG4gIG92ZXJmbG93LXggaGlkZGVuXG5cbi50aW1lbGluZVxuICBwb3NpdGlvbiByZWxhdGl2ZVxuICBvdmVyZmxvdy14IGhpZGRlblxuXG4uZHNrLW5vdC1zdXBwb3J0ZWQsIC5kc2stc3VwcG9ydGVkXG4gIGJhY2tncm91bmQgZGlydFxuICBiYWNrZ3JvdW5kIHJhZGlhbC1ncmFkaWVudChlbGxpcHNlIGF0IGNlbnRlciwgI2M5YzE5MCAwJSwgZGlydCA1NSUsICM4OTgyNWMgMTAwJSk7XG4gIGJhY2tncm91bmQtc2l6ZSAxMDAlIDEwMCVcblxuLy8gQXBwbHkgdGhlc2Ugc3R5bGVzIGFzIGEgZmFsbGJhY2tcbi5kc2stbm90LXN1cHBvcnRlZFxuICBjb2xvciBjb250ZW50LWNvbG9yXG4gIC8vdGV4dC1zaGFkb3cgMXB4IDFweCAwcHggcmdiYSgwLDAsMCwuMilcbiAgcGFkZGluZyAxcHggMFxuXG4gIC5zdGVwXG4gICAgd2lkdGggMTAwJVxuICAgIG1hcmdpbiAyMHB4IGF1dG9cbiAgICBwYWRkaW5nIDIwcHhcblxuICAuZHNrLWNpcmNsZS1kYXRlXG4gICAgYmFja2dyb3VuZCBub25lXG4gICAgcGFkZGluZyAwXG4gICAgZmlsdGVyIG5vbmVcbiAgICBfZmlsdGVyIG5vbmVcbiAgICBmb250LWZhbWlseTogU2VyaWYuZm9udFxuICAgIGZvbnQtd2VpZ2h0OiBTZXJpZi53ZWlnaHQubm9ybWFsXG5cbiAgLmRzay1pbmZvXG4gICAgcGFkZGluZy1ib3R0b20gMjBweFxuICAgIFxuICAgIGgyXG4gICAgICBkaXNwbGF5IG5vbmVcblxuICAuZHNrLWNpcmNsZVxuICAgIGZvbnQtc2l6ZSAzNnB4XG4gICAgY29sb3IgcmdiYSgyNTUsMjU1LDI1NSwuOClcbiAgICB0ZXh0LXNoYWRvdyAxcHggMXB4IDFweCByZ2JhKDAsMCwwLC4yKVxuXG5cbi5kc2stc3VwcG9ydGVkXG4gIHBvc2l0aW9uIHJlbGF0aXZlXG4gIHdpZHRoIDEwMCVcbiAgbWluLXdpZHRoIDEwMHB4XG4gIG1hcmdpbiAwIGF1dG9cbiAgaGVpZ2h0IDU1MHB4XG4gIG92ZXJmbG93IGhpZGRlblxuXG4gIC8vIFRpbWVsaW5lIGJhclxuICAuZHNrLWxpbmV3cmFwcGVyXG4gICAgaGVpZ2h0IDZyZW1cbiAgICBib3R0b20gMjAlXG4gICAgd2lkdGggMTAwJVxuICAgIGJhY2tncm91bmQgcmdiYSgyNTUsMjU1LDI1NSwuMylcbiAgICBib3gtc2hhZG93IDAgMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgaW5zZXRcbiAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgIGJvdHRvbSAyMCVcbiAgICBjb2xvciB0aW1lbGluZS1iZ1xuXG4gIC5kc2std3JhcHBlclxuICAgIG91dGxpbmUgbm9uZVxuICAgIG92ZXJmbG93IHZpc2libGUgIWltcG9ydGFudFxuXG4gIC8vIFRpbWVsaW5lIERvdCBub3QgYWN0aXZlXG4gIC5kc2stY2lyY2xlXG4gICAgYmFja2dyb3VuZCBub3QtYWN0aXZlLWNvbG9yXG4gICAgYm9yZGVyLXJhZGl1cyA1MCVcbiAgICBib3gtc2hhZG93IDAgMCAycHggcmdiYSgwLDAsMCwuMSlcbiAgICBjdXJzb3IgcG9pbnRlclxuICAgIHdpZHRoIDFyZW1cbiAgICBoZWlnaHQgKEB3aWR0aClcbiAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgIHRyYW5zaXRpb24gZmFkZVxuICAgIHVzZXItc2VsZWN0IG5vbmVcblxuICAuZHNrLWNpcmNsZS1kYXRlXG4gICAgY29sb3Igbm90LWFjdGl2ZS1jb2xvclxuICAgIGZvbnQtZmFtaWx5OiBTZXJpZi5mb250XG4gICAgZm9udC13ZWlnaHQ6IFNlcmlmLndlaWdodC5ub3JtYWxcbiAgICB0cmFuc2l0aW9uIGZhZGVcbiAgICB0cmFuc2Zvcm0gdHJhbnNsYXRlWCgtMXJlbSlcblxuICAuYWN0aXZlXG4gICAgLmRzay1jaXJjbGVcbiAgICAgIGJhY2tncm91bmQgYWN0aXZlLWNvbG9yXG4gICAgICBiYWNrZ3JvdW5kLWNsaXAgcGFkZGluZy1ib3hcbiAgICAgIC8vd2lkdGggMnJlbVxuICAgICAgLy9oZWlnaHQgKEB3aWR0aClcblxuICAgIC5kc2stY29udGVudFxuICAgICAgb3BhY2l0eSAxXG4gICAgICB0cmFuc2l0aW9uIGFsbCAwcyBlYXNlLWluLW91dCAwc1xuXG4gICAgLy8gVGltZWxpbmUgZG90XG4gICAgLmRzay1jaXJjbGUtZGF0ZVxuICAgICAgY29sb3IgYWN0aXZlLWNvbG9yXG5cbiAgLnpvb21cbiAgICAuZHNrLWNvbnRlbnRcbiAgICAgIG9wYWNpdHkgMFxuICAgICAgdHJhbnNmb3JtIHNjYWxlKDAuNSlcbiAgICAgIHRyYW5zaXRpb24gYWxsIDBzIGVhc2UtaW4tb3V0IDBzXG4gIC56b29tLmFjdGl2ZVxuICAgIC5kc2stY29udGVudFxuICAgICAgICBvcGFjaXR5IDFcbiAgICAgICAgdHJhbnNmb3JtIHNjYWxlKDEpXG4gICAgICAgIHRyYW5zaXRpb24gYWxsIDAuMjVzIGVhc2UtaW4tb3V0IDAuMjVzXG5cbiAgLmZhZGVcbiAgICAuZHNrLWNvbnRlbnRcbiAgICAgIG9wYWNpdHkgMFxuICAgICAgdHJhbnNmb3JtIHNjYWxlKDEpXG4gICAgICB0cmFuc2l0aW9uIGFsbCAwcyBlYXNlLWluLW91dCAwc1xuICAuZmFkZS5hY3RpdmVcbiAgICAuZHNrLWNvbnRlbnRcbiAgICAgICAgb3BhY2l0eSAxXG4gICAgICAgIHRyYW5zZm9ybSBzY2FsZSgxKVxuICAgICAgICB0cmFuc2l0aW9uIGFsbCAwLjI1cyBlYXNlLWluLW91dCAwLjI1c1xuXG4gIC5zdGVwXG4gICAgd2lkdGggNDAwcHhcbiAgICBwb3NpdGlvbiByZWxhdGl2ZVxuXG4gIC5kc2stbmF2XG4gICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICAvL2hlaWdodCAzMnB4XG4gICAgdG9wIDMwJVxuICAgIHJpZ2h0IDEwcHhcbiAgICB3aWR0aCAzMHB4XG5cbiAgICBzcGFuXG4gICAgICBiYWNrZ3JvdW5kIHVybChpbWcvcHJldi5wbmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIHJnYmEoMjU1LDI1NSwyNTUsLjMpXG4gICAgICBib3JkZXItcmFkaXVzIDNweFxuICAgICAgYm94LXNoYWRvdyAwIDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpIGluc2V0XG4gICAgICBjdXJzb3IgcG9pbnRlclxuICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICAgIHdpZHRoIDMwcHhcbiAgICAgIGhlaWdodCAzMHB4XG5cbiAgICAgIG1hcmdpbiAwIDFweFxuICAgICAgdHJhbnNpdGlvbiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pblxuXG4gICAgICAmOmhvdmVyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3IgcmdiYSgyNTUsMjU1LDI1NSwuNSlcblxuICAgIC5kc2stcHJlXG4gICAgICBib3JkZXItcmFkaXVzIDNweCAwIDAgM3B4XG5cbiAgICAuZHNrLW5leHRcbiAgICAgIGJvcmRlci1yYWRpdXMgMCAzcHggM3B4IDBcbiAgICAgIGJhY2tncm91bmQtaW1hZ2UgdXJsKGltZy9uZXh0LnBuZylcbiAgICAgIC8vbWFyZ2luLXJpZ2h0IDIwcHhcblxuICAgIC5kc2stYXV0b3BsYXlcbiAgICAgIGJhY2tncm91bmQtaW1hZ2UgdXJsKGltZy9wbGF5LnBuZylcblxuICAgIC5wbGF5aW5nXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlIHVybChpbWcvcGF1c2UucG5nKVxuXG4gIC5kc2stY29udGVudFxuICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgdG9wIC01NTBweFxuICAgIG1pbi1oZWlnaHQgNjAwcHhcbiAgICB3aWR0aCA4MDBweFxuICAgIGxlZnQgLTIwMHB4XG4gICAgb3BhY2l0eSAwXG4gICAgZGlzcGxheSB0YWJsZVxuICAgIFxuICAgICtkZXNrdG9wKClcbiAgICAgIHRvcCAtNTUwcHhcbiAgICAgIG1pbi1oZWlnaHQgNjAwcHhcbiAgICAgIHdpZHRoIDEwMDBweFxuICAgICAgbGVmdCAtMzAwcHhcbiAgICAgIFxuICAgICttb2JpbGUoKVxuICAgICAgdG9wIC0xMDAwcHhcbiAgXG4gIC5uby1pbWFnZVxuICAgIHRleHQtYWxpZ24gY2VudGVyXG5cbiAgLy9cbiAgLy8gRWRpdCBzbGlkZSB0eXBvZ3JhcGh5IGhlcmVcbiAgLmRzay1pbmZvXG4gICAgZGlzcGxheSB0YWJsZS1jZWxsXG4gICAgdmVydGljYWwtYWxpZ24gbWlkZGxlXG4gICAgcGFkZGluZy1yaWdodCAyMHB4XG5cbiAgICB3aWR0aCA1MCVcbiAgICArbW9iaWxlKClcbiAgICAgIGRpc3BsYXkgdGFibGUtcm93XG4gICAgLy90ZXh0LXNoYWRvdyAycHggMnB4IDJweCByZ2JhKDAsMCwwLC4yKVxuXG4gICAgLmRhdGVfX2hlYWRpbmdcbiAgICAgIGNvbG9yIGNvbnRlbnQtY29sb3JcbiAgICAgIG1hcmdpbiAwIDAgMjBweCAwXG4gICAgICBmb250LXdlaWdodCBub3JtYWxcblxuICAgIHBcbiAgICAgIGNvbG9yIGNvbnRlbnQtY29sb3JcbiAgICAgIGZvbnQtc2l6ZSAxLjI1cmVtXG4gICAgICBtYXJnaW4gMFxuXG4gIC5kc2steWVhci1pbmZvXG4gICAgZm9udC1zaXplIDI0cHhcbiAgICBwYWRkaW5nIDEwcHhcblxuXG5cbiAgaW1nXG4gICAgd2lkdGggMTAwJVxuICAgIGhlaWdodCBhdXRvXG5cblxuICAubWVkaWFcbiAgICBkaXNwbGF5IHRhYmxlLWNlbGxcbiAgICB2ZXJ0aWNhbC1hbGlnbiBtaWRkbGVcbiAgICBoZWlnaHQgNTAwcHhcbiAgICB3aWR0aCA1MCVcbiAgICBcbiAgICArbW9iaWxlKClcbiAgICAgIGRpc3BsYXkgdGFibGUtcm93XG4gICAgLy8gcG9zaXRpb24gYWJzb2x1dGVcbiAgICAvLyByaWdodCAwcHhcbiAgICAvLyB0b3AgMHB4XG5cblxuLy8gRW5kIHNsaWRlIHR5cG9ncmFwaHkgaGVyZVxuLy9cblxuLmRzay1mdWxsc2NyZWVuXG4gIHdpZHRoIDEwMCVcbiAgaGVpZ2h0IDEwMCVcblxuXG5AbWVkaWEgc2NyZWVuLCAobWF4LXdpZHRoOiA2NTBweClcbiAgLmRzay1zdXBwb3J0ZWRcbiAgICBoZWlnaHQgNDAwcHhcblxuLmZvb3Rlci10aW1lbGluZVxuICBwYWRkaW5nLXRvcCAycmVtXG4gIHBvc2l0aW9uIGFic29sdXRlXG4gIGJvdHRvbSAxLjVyZW1cbiAgbGVmdCA1MCVcbiAgdHJhbnNmb3JtIHRyYW5zbGF0ZVgoLTUwJSlcblxuICArdGFibGV0KClcbiAgICBib3R0b20gMC41cmVtXG5cbiAgcFxuICAgIGZvbnQtc2l6ZSAxMXB4XG4gICAgY29sb3Igd2hpdGVcbiAgICB0ZXh0LWFsaWduIHJpZ2h0XG4gICAgXG4gICAgK21vYmlsZSgpXG4gICAgICB0ZXh0LWFsaWduIGNlbnRlclxuICAgIFxuI3N0ZXAtMFxuICBwXG4gICAgZGlzcGxheSBibG9ja1xuICAgICttb2JpbGUoKVxuICAgICAgZGlzcGxheSBub25lXG5cbiAgLm1vYmlsZS1vbmx5XG4gICAgZGlzcGxheSBub25lXG4gICAgXG4gICAgK21vYmlsZSgpXG4gICAgICBkaXNwbGF5IGJsb2NrXG4gICAgICBcbiNiYWNrLXRvLXRvcFxuICBkaXNwbGF5IG5vbmVcbiAgXG4gICttb2JpbGUoKVxuICAgIGRpc3BsYXkgYmxvY2tcbiAgICBwb3NpdGlvbiBmaXhlZFxuICAgIGJvdHRvbSAwcHhcbiAgICByaWdodCAwcHhcbiAgICBmaWxsIGRhcmtncmVlblxuICAgIFxuLnJlYWQtbW9yZS1saW5rXG4gIGNvbG9yIGRhcmtncmVlblxuICBmaWxsIGRhcmtncmVlblxuICBcbiAgJiA+IC5pY29uLS1laS1leHRlcm5hbC1saW5rXG4gICAgbGVmdCAtNXB4XG4gICAgICBcbiAgJjpob3ZlclxuICAgIGZpbGwgbmlnaHRncmVlblxuICAiLCJpY29uY29sb3IgPSBncmVlblxuXG5Aa2V5ZnJhbWVzIHNwaW5cbiAgMTAwJVxuICAgIHRyYW5zZm9ybSByb3RhdGUoMzYwZGVnKVxuXG4uaWNvblxuICBwb3NpdGlvbiByZWxhdGl2ZVxuICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICB3aWR0aCAyNXB4XG4gIGhlaWdodCAyNXB4XG4gIG92ZXJmbG93IGhpZGRlblxuXG4uaWNvbl9fY250XG4gIHdpZHRoIDEwMCVcbiAgaGVpZ2h0IDEwMCVcbiAgYmFja2dyb3VuZCBpbmhlcml0XG4gIGZpbGwgaW5oZXJpdFxuICB0cmFuc2Zvcm0gdHJhbnNsYXRlWCgwKVxuICAtbXMtdHJhbnNmb3JtIHRyYW5zbGF0ZSguNXB4LCAtLjNweClcblxuLmljb24tLW1cbiAgd2lkdGggNTBweFxuICBoZWlnaHQgNTBweFxuXG4uaWNvbi0tbFxuICB3aWR0aCAxMDBweFxuICBoZWlnaHQgMTAwcHhcblxuLmljb24tLXhsXG4gIHdpZHRoIDE1MHB4XG4gIGhlaWdodCAxNTBweFxuXG4uaWNvbi0teHhsXG4gIHdpZHRoIDIwMHB4XG4gIGhlaWdodCAyMDBweFxuXG4uaWNvbl9fc3Bpbm5lclxuICBwb3NpdGlvbiBhYnNvbHV0ZVxuICB0b3AgMFxuICBsZWZ0IDBcbiAgd2lkdGggMTAwJVxuICBoZWlnaHQgMTAwJVxuXG4uaWNvbi0tZWktc3Bpbm5lciAuaWNvbl9fc3Bpbm5lcixcbi5pY29uLS1laS1zcGlubmVyLTIgLmljb25fX3NwaW5uZXJcbiAgYW5pbWF0aW9uIHNwaW4gMXMgc3RlcHMoMTIpaW5maW5pdGVcblxuLmljb24tLWVpLXNwaW5uZXItM1xuICAuaWNvbl9fc3Bpbm5lclxuICAgIGFuaW1hdGlvbiBzcGluIDEuNXMgbGluZWFyIGluZmluaXRlXG5cbi5pY29uLS1laS1zYy1mYWNlYm9va1xuICBmaWxsIGljb25jb2xvciBvciAjM2I1OTk4XG5cbi5pY29uLS1laS1zYy1naXRodWJcbiAgZmlsbCBpY29uY29sb3Igb3IgIzMzM1xuXG4uaWNvbi0tZWktc2MtZ29vZ2xlLXBsdXNcbiAgZmlsbCBpY29uY29sb3Igb3IgI2RkNGIzOVxuXG4uaWNvbi0tZWktc2MtaW5zdGFncmFtXG4gIGZpbGwgaWNvbmNvbG9yIG9yICMzZjcyOWJcblxuLmljb24tLWVpLXNjLWxpbmtlZGluXG4gIGZpbGwgaWNvbmNvbG9yIG9yICMwOTc2YjRcblxuLmljb24tLWVpLXNjLW9kbm9rbGFzc25pa2lcbiAgZmlsbCBpY29uY29sb3Igb3IgI2VkODEyYlxuXG4uaWNvbi0tZWktc2Mtc2t5cGVcbiAgZmlsbCBpY29uY29sb3Igb3IgIzAwYWZmMFxuXG4uaWNvbi0tZWktc2Mtc291bmRjbG91ZFxuICBmaWxsIGljb25jb2xvciBvciAjZjgwXG5cbi5pY29uLS1laS1zYy10dW1ibHJcbiAgZmlsbCBpY29uY29sb3Igb3IgIzM1NDY1Y1xuXG4uaWNvbi0tZWktc2MtdHdpdHRlclxuICBmaWxsIGljb25jb2xvciBvciAjNTVhY2VlXG5cbi5pY29uLS1laS1zYy12aW1lb1xuICBmaWxsIGljb25jb2xvciBvciAjMWFiN2VhXG5cbi5pY29uLS1laS1zYy12a1xuICBmaWxsIGljb25jb2xvciBvciAjNDU2NjhlXG5cbi5pY29uLS1laS1zYy15b3V0dWJlXG4gIGZpbGwgaWNvbmNvbG9yIG9yICNlNTJkMjdcbiAgXG4uaWNvbi0tZWktbmF2aWNvblxuICBmaWxsIGljb25jb2xvciBvciBpbmRpZ29cbiIsIi8qIE1hZ25pZmljIFBvcHVwIENTUyAqL1xuLm1mcC1iZyB7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTA0MjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBiYWNrZ3JvdW5kOiAjMGIwYjBiO1xuICBvcGFjaXR5OiAwLjg7XG4gIC8vZmlsdGVyOiBhbHBoYShvcGFjaXR5PTgwKTtcbn1cblxuLm1mcC13cmFwIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB6LWluZGV4OiAxMDQzO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLm1mcC1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBwYWRkaW5nOiAwIDhweDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuLm1mcC1jb250YWluZXI6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi5tZnAtYWxpZ24tdG9wIC5tZnAtY29udGFpbmVyOmJlZm9yZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLm1mcC1jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB6LWluZGV4OiAxMDQ1OyB9XG5cbi5tZnAtaW5saW5lLWhvbGRlciAubWZwLWNvbnRlbnQsIC5tZnAtYWpheC1ob2xkZXIgLm1mcC1jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGN1cnNvcjogYXV0bzsgfVxuXG4ubWZwLWFqYXgtY3VyIHtcbiAgY3Vyc29yOiBwcm9ncmVzczsgfVxuXG4ubWZwLXpvb20tb3V0LWN1ciwgLm1mcC16b29tLW91dC1jdXIgLm1mcC1pbWFnZS1ob2xkZXIgLm1mcC1jbG9zZSB7XG4gIGN1cnNvcjogLW1vei16b29tLW91dDtcbiAgY3Vyc29yOiAtd2Via2l0LXpvb20tb3V0O1xuICBjdXJzb3I6IHpvb20tb3V0OyB9XG5cbi5tZnAtem9vbSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY3Vyc29yOiAtd2Via2l0LXpvb20taW47XG4gIGN1cnNvcjogLW1vei16b29tLWluO1xuICBjdXJzb3I6IHpvb20taW47IH1cblxuLm1mcC1hdXRvLWN1cnNvciAubWZwLWNvbnRlbnQge1xuICBjdXJzb3I6IGF1dG87IH1cblxuLm1mcC1jbG9zZSwgLm1mcC1hcnJvdywgLm1mcC1wcmVsb2FkZXIsIC5tZnAtY291bnRlciB7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lOyB9XG5cbi5tZnAtbG9hZGluZy5tZnAtZmlndXJlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4ubWZwLWhpZGUge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuLm1mcC1wcmVsb2FkZXIge1xuICBjb2xvcjogI0NDQztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogLTAuOGVtO1xuICBsZWZ0OiA4cHg7XG4gIHJpZ2h0OiA4cHg7XG4gIHotaW5kZXg6IDEwNDQ7IH1cbiAgLm1mcC1wcmVsb2FkZXIgYSB7XG4gICAgY29sb3I6ICNDQ0M7IH1cbiAgICAubWZwLXByZWxvYWRlciBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjRkZGOyB9XG5cbi5tZnAtcy1yZWFkeSAubWZwLXByZWxvYWRlciB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLm1mcC1zLWVycm9yIC5tZnAtY29udGVudCB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuYnV0dG9uLm1mcC1jbG9zZSwgYnV0dG9uLm1mcC1hcnJvdyB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIHotaW5kZXg6IDEwNDY7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTsgfVxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwOyB9XG5cbi5tZnAtY2xvc2Uge1xuICB3aWR0aDogNDRweDtcbiAgaGVpZ2h0OiA0NHB4O1xuICBsaW5lLWhlaWdodDogNDRweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgb3BhY2l0eTogMC42NTtcbiAgLy9maWx0ZXI6IGFscGhhKG9wYWNpdHk9NjUpO1xuICBwYWRkaW5nOiAwIDAgMThweCAxMHB4O1xuICBjb2xvcjogI0ZGRjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDI4cHg7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgQmFza2VydmlsbGUsIG1vbm9zcGFjZTsgfVxuICAubWZwLWNsb3NlOmhvdmVyLCAubWZwLWNsb3NlOmZvY3VzIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC8vZmlsdGVyOiBhbHBoYShvcGFjaXR5PTEwMCk7XG4gIH1cbiAgLm1mcC1jbG9zZTphY3RpdmUge1xuICAgIHRvcDogMXB4OyB9XG5cbi5tZnAtY2xvc2UtYnRuLWluIC5tZnAtY2xvc2Uge1xuICBjb2xvcjogIzMzMzsgfVxuXG4ubWZwLWltYWdlLWhvbGRlciAubWZwLWNsb3NlLCAubWZwLWlmcmFtZS1ob2xkZXIgLm1mcC1jbG9zZSB7XG4gIGNvbG9yOiAjRkZGO1xuICByaWdodDogLTZweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmctcmlnaHQ6IDZweDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLm1mcC1jb3VudGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBjb2xvcjogI0NDQztcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuXG4ubWZwLWFycm93IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvcGFjaXR5OiAwLjY1O1xuICAvL2ZpbHRlcjogYWxwaGEob3BhY2l0eT02NSk7XG4gIG1hcmdpbjogMDtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC01NXB4O1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogOTBweDtcbiAgaGVpZ2h0OiAxMTBweDtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApOyB9XG4gIC5tZnAtYXJyb3c6YWN0aXZlIHtcbiAgICBtYXJnaW4tdG9wOiAtNTRweDsgfVxuICAubWZwLWFycm93OmhvdmVyLCAubWZwLWFycm93OmZvY3VzIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC8vZmlsdGVyOiBhbHBoYShvcGFjaXR5PTEwMCk7XG4gIH1cbiAgLm1mcC1hcnJvdzpiZWZvcmUsIC5tZnAtYXJyb3c6YWZ0ZXIsIC5tZnAtYXJyb3cgLm1mcC1iLCAubWZwLWFycm93IC5tZnAtYSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBtYXJnaW4tdG9wOiAzNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xuICAgIGJvcmRlcjogbWVkaXVtIGluc2V0IHRyYW5zcGFyZW50OyB9XG4gIC5tZnAtYXJyb3c6YWZ0ZXIsIC5tZnAtYXJyb3cgLm1mcC1hIHtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAxM3B4O1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDEzcHg7XG4gICAgdG9wOiA4cHg7IH1cbiAgLm1mcC1hcnJvdzpiZWZvcmUsIC5tZnAtYXJyb3cgLm1mcC1iIHtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAyMXB4O1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDIxcHg7XG4gICAgb3BhY2l0eTogMC43OyB9XG5cbi5tZnAtYXJyb3ctbGVmdCB7XG4gIGxlZnQ6IDA7IH1cbiAgLm1mcC1hcnJvdy1sZWZ0OmFmdGVyLCAubWZwLWFycm93LWxlZnQgLm1mcC1hIHtcbiAgICBib3JkZXItcmlnaHQ6IDE3cHggc29saWQgI0ZGRjtcbiAgICBtYXJnaW4tbGVmdDogMzFweDsgfVxuICAubWZwLWFycm93LWxlZnQ6YmVmb3JlLCAubWZwLWFycm93LWxlZnQgLm1mcC1iIHtcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcbiAgICBib3JkZXItcmlnaHQ6IDI3cHggc29saWQgIzNGM0YzRjsgfVxuXG4ubWZwLWFycm93LXJpZ2h0IHtcbiAgcmlnaHQ6IDA7IH1cbiAgLm1mcC1hcnJvdy1yaWdodDphZnRlciwgLm1mcC1hcnJvdy1yaWdodCAubWZwLWEge1xuICAgIGJvcmRlci1sZWZ0OiAxN3B4IHNvbGlkICNGRkY7XG4gICAgbWFyZ2luLWxlZnQ6IDM5cHg7IH1cbiAgLm1mcC1hcnJvdy1yaWdodDpiZWZvcmUsIC5tZnAtYXJyb3ctcmlnaHQgLm1mcC1iIHtcbiAgICBib3JkZXItbGVmdDogMjdweCBzb2xpZCAjM0YzRjNGOyB9XG5cbi5tZnAtaWZyYW1lLWhvbGRlciB7XG4gIHBhZGRpbmctdG9wOiA0MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNDBweDsgfVxuICAubWZwLWlmcmFtZS1ob2xkZXIgLm1mcC1jb250ZW50IHtcbiAgICBsaW5lLWhlaWdodDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDkwMHB4OyB9XG4gIC5tZnAtaWZyYW1lLWhvbGRlciAubWZwLWNsb3NlIHtcbiAgICB0b3A6IC00MHB4OyB9XG5cbi5tZnAtaWZyYW1lLXNjYWxlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmctdG9wOiA1Ni4yNSU7IH1cbiAgLm1mcC1pZnJhbWUtc2NhbGVyIGlmcmFtZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3gtc2hhZG93OiAwIDAgOHB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwOyB9XG5cbi8qIE1haW4gaW1hZ2UgaW4gcG9wdXAgKi9cbmltZy5tZnAtaW1nIHtcbiAgd2lkdGg6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiA0MHB4IDAgNDBweDtcbiAgbWFyZ2luOiAwIGF1dG87IH1cblxuLyogVGhlIHNoYWRvdyBiZWhpbmQgdGhlIGltYWdlICovXG4ubWZwLWZpZ3VyZSB7XG4gIGxpbmUtaGVpZ2h0OiAwOyB9XG4gIC5tZnAtZmlndXJlOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDQwcHg7XG4gICAgYm90dG9tOiA0MHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHJpZ2h0OiAwO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB6LWluZGV4OiAtMTtcbiAgICBib3gtc2hhZG93OiAwIDAgOHB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICBiYWNrZ3JvdW5kOiAjNDQ0OyB9XG4gIC5tZnAtZmlndXJlIHNtYWxsIHtcbiAgICBjb2xvcjogI0JEQkRCRDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7IH1cbiAgLm1mcC1maWd1cmUgZmlndXJlIHtcbiAgICBtYXJnaW46IDA7IH1cblxuLm1mcC1ib3R0b20tYmFyIHtcbiAgbWFyZ2luLXRvcDogLTM2cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMDAlO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgY3Vyc29yOiBhdXRvOyB9XG5cbi5tZnAtdGl0bGUge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgY29sb3I6ICNGM0YzRjM7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgcGFkZGluZy1yaWdodDogMzZweDsgfVxuXG4ubWZwLWltYWdlLWhvbGRlciAubWZwLWNvbnRlbnQge1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLm1mcC1nYWxsZXJ5IC5tZnAtaW1hZ2UtaG9sZGVyIC5tZnAtZmlndXJlIHtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDgwMHB4KSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpLCBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiAzMDBweCkge1xuICAvKipcbiAgICAgICAqIFJlbW92ZSBhbGwgcGFkZGluZ3MgYXJvdW5kIHRoZSBpbWFnZSBvbiBzbWFsbCBzY3JlZW5cbiAgICAgICAqL1xuICAubWZwLWltZy1tb2JpbGUgLm1mcC1pbWFnZS1ob2xkZXIge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gIC5tZnAtaW1nLW1vYmlsZSBpbWcubWZwLWltZyB7XG4gICAgcGFkZGluZzogMDsgfVxuICAubWZwLWltZy1tb2JpbGUgLm1mcC1maWd1cmU6YWZ0ZXIge1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7IH1cbiAgLm1mcC1pbWctbW9iaWxlIC5tZnAtZmlndXJlIHNtYWxsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDsgfVxuICAubWZwLWltZy1tb2JpbGUgLm1mcC1ib3R0b20tYmFyIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNik7XG4gICAgYm90dG9tOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICB0b3A6IGF1dG87XG4gICAgcGFkZGluZzogM3B4IDVweDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICAgLm1mcC1pbWctbW9iaWxlIC5tZnAtYm90dG9tLWJhcjplbXB0eSB7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gIC5tZnAtaW1nLW1vYmlsZSAubWZwLWNvdW50ZXIge1xuICAgIHJpZ2h0OiA1cHg7XG4gICAgdG9wOiAzcHg7IH1cbiAgLm1mcC1pbWctbW9iaWxlIC5tZnAtY2xvc2Uge1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICB3aWR0aDogMzVweDtcbiAgICBoZWlnaHQ6IDM1cHg7XG4gICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjYpO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMDsgfVxuIH1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcbiAgLm1mcC1hcnJvdyB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuNzUpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC43NSk7IH1cblxuICAubWZwLWFycm93LWxlZnQge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogMDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwOyB9XG5cbiAgLm1mcC1hcnJvdy1yaWdodCB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiAxMDAlO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDEwMCU7IH1cblxuICAubWZwLWNvbnRhaW5lciB7XG4gICAgcGFkZGluZy1sZWZ0OiA2cHg7XG4gICAgcGFkZGluZy1yaWdodDogNnB4OyB9XG4gfVxuXG4ubWZwLWllNyAubWZwLWltZyB7XG4gIHBhZGRpbmc6IDA7IH1cbi5tZnAtaWU3IC5tZnAtYm90dG9tLWJhciB7XG4gIHdpZHRoOiA2MDBweDtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTMwMHB4O1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIHBhZGRpbmctYm90dG9tOiA1cHg7IH1cbi5tZnAtaWU3IC5tZnAtY29udGFpbmVyIHtcbiAgcGFkZGluZzogMDsgfVxuLm1mcC1pZTcgLm1mcC1jb250ZW50IHtcbiAgcGFkZGluZy10b3A6IDQ0cHg7IH1cbi5tZnAtaWU3IC5tZnAtY2xvc2Uge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBwYWRkaW5nLXRvcDogMDsgfSIsIi8vIFJ1cHR1cmVcbi8vIERvYXAgTWVkaWEgcXVlcnkgbWl4aW5zIGZvciBTdHlsdXNcbi8vIGh0dHA6Ly9qZW5pdXMuZ2l0aHViLmlvL3J1cHR1cmUvXG5cbmJhc2UtZm9udC1zaXplID89IDIwcHhcbnJhc3RlcmlzZS1tZWRpYS1xdWVyaWVzID89IGZhbHNlXG5cbnJ1cHR1cmUgPSB7XG4gIHJhc3RlcmlzZS1tZWRpYS1xdWVyaWVzOiByYXN0ZXJpc2UtbWVkaWEtcXVlcmllc1xuICBtb2JpbGUtY3V0b2ZmOiA0MDBweFxuICBkZXNrdG9wLWN1dG9mZjogMTA1MHB4XG4gIGhkLWN1dG9mZjogMTgwMHB4XG4gIGVuYWJsZS1lbS1icmVha3BvaW50czogZmFsc2VcbiAgYmFzZS1mb250LXNpemU6IGJhc2UtZm9udC1zaXplXG4gIGFudGktb3ZlcmxhcDogZmFsc2VcbiAgZGVuc2l0eS1xdWVyaWVzOiAnZHBweCcgJ3dlYmtpdCcgJ21veicgJ2RwaSdcbiAgcmV0aW5hLWRlbnNpdHk6IDEuNVxuICB1c2UtZGV2aWNlLXdpZHRoOiBmYWxzZVxufVxucnVwdHVyZS5zY2FsZSA9IDAgKHJ1cHR1cmUubW9iaWxlLWN1dG9mZikgNjAwcHggODAwcHggKHJ1cHR1cmUuZGVza3RvcC1jdXRvZmYpIChydXB0dXJlLmhkLWN1dG9mZilcbnJ1cHR1cmUuc2NhbGUtbmFtZXMgPSAneHMnICdzJyAnbScgJ2wnICd4bCcgJ2hkJ1xuXG4taXMtc3RyaW5nKHZhbClcbiAgaWYgdHlwZW9mKHZhbCkgaXMgbm90ICd1bml0J1xuICAgIGlmIHZhbCBpcyBhICdzdHJpbmcnIG9yIHZhbCBpcyBhICdpZGVudCdcbiAgICAgIHRydWVcbiAgICBlbHNlXG4gICAgICBmYWxzZVxuICBlbHNlXG4gICAgZmFsc2VcblxuLWdldC1zY2FsZS1udW1iZXIoc2NhbGUtbmFtZSlcbiAgZm9yIGxpc3QtaXRlbSwgaSBpbiBydXB0dXJlLnNjYWxlLW5hbWVzXG4gICAgaWYgbGlzdC1pdGVtIGlzIHNjYWxlLW5hbWVcbiAgICAgIHJldHVybiBpICsgMVxuICByZXR1cm4gZmFsc2VcblxuLWNvbnZlcnQtdG8odG8tdW5pdCwgdmFsdWUsIGNvbnRleHQgPSBydXB0dXJlLmJhc2UtZm9udC1zaXplKVxuICBmcm9tLXVuaXQgPSB1bml0KHZhbHVlKVxuICByZXR1cm4gdmFsdWUgaWYgdG8tdW5pdCBpcyBmcm9tLXVuaXRcbiAgaWYgdG8tdW5pdCBpbiAoJ2VtJyAncmVtJylcbiAgICByZXR1cm4gdmFsdWUgaWYgZnJvbS11bml0IGluICgnZW0nICdyZW0nKVxuICAgIHJldHVybiB1bml0KCh2YWx1ZSAvIGNvbnRleHQpLCB0by11bml0KVxuICBpZiB0by11bml0IGlzICdweCdcbiAgICByZXR1cm4gdW5pdCgodmFsdWUgKiBjb250ZXh0KSwgJ3B4JylcblxuLW9uLXNjYWxlKG4pXG4gIHJldHVybiB1bml0KG4pIGlzICcnXG5cbi1sYXJnZXItdGhhbi1zY2FsZShuKVxuICByZXR1cm4gKG4gPiAobGVuZ3RoKHJ1cHR1cmUuc2NhbGUpIC0gMSkpIGFuZCAtb24tc2NhbGUobilcblxuLWlzLXplcm8obilcbiAgcmV0dXJuIG4gaXMgMFxuXG4tb3ZlcmxhcC1zaGlmdChhbnRpLW92ZXJsYXAsIG4pXG4gIHNoaWZ0LXVuaXQgPSB1bml0KG4pXG4gIGFudGktb3ZlcmxhcCA9IDBweCB1bmxlc3MgYW50aS1vdmVybGFwXG4gIGFudGktb3ZlcmxhcCA9IDFweCBpZiBhbnRpLW92ZXJsYXAgaXMgdHJ1ZVxuICBpZiBsZW5ndGgoYW50aS1vdmVybGFwKSBpcyAxXG4gICAgcmV0dXJuIC1jb252ZXJ0LXRvKHNoaWZ0LXVuaXQsIGFudGktb3ZlcmxhcClcbiAgZm9yIHZhbCBpbiBhbnRpLW92ZXJsYXBcbiAgICByZXR1cm4gdmFsIGlmIHVuaXQodmFsKSBpcyBzaGlmdC11bml0XG5cbi1hZGp1c3Qtb3ZlcmxhcChhbnRpLW92ZXJsYXAsIG4sIHNpZGUgPSAnbWluJylcbiAgLXNoaWZ0ID0gLW92ZXJsYXAtc2hpZnQoYW50aS1vdmVybGFwLCBuKVxuICBpZiAoc2lkZSBpcyAnbWluJyBhbmQgLXNoaWZ0ID4gMCkgb3IgKHNpZGUgaXMgJ21heCcgYW5kIC1zaGlmdCA8IDApXG4gICAgbiA9IG4gKyAtc2hpZnRcbiAgcmV0dXJuIG5cblxuLWlzLXBvc2l0aXZlKG4pXG4gIHJldHVybiBuID49IDBcblxuLWRlbnNpdHktcXVlcmllcyhkZW5zaXR5KVxuICBpZiB0eXBlb2YoZGVuc2l0eSkgaXMgbm90ICd1bml0J1xuICAgIGlmIG5vdCAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgICBkZW5zaXR5ID0gJyVzJyAlIGRlbnNpdHlcbiAgZGVuc2l0eSA9IHJ1cHR1cmUucmV0aW5hLWRlbnNpdHkgaWYgZGVuc2l0eSBpcyAncmV0aW5hJ1xuICBxdWVyaWVzID0gKClcbiAgZm9yIHF1ZXJ5IGluIHJ1cHR1cmUuZGVuc2l0eS1xdWVyaWVzXG4gICAgaWYgcXVlcnkgaXMgJ3dlYmtpdCdcbiAgICAgIHB1c2gocXVlcmllcywgJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86ICVzKScgJSAoZGVuc2l0eSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAnbW96J1xuICAgICAgcHVzaChxdWVyaWVzLCAnKG1pbi0tbW96LWRldmljZS1waXhlbC1yYXRpbzogJXMpJyAlIChkZW5zaXR5KSlcbiAgICBlbHNlIGlmIHF1ZXJ5IGlzICdvJ1xuICAgICAgcHVzaChxdWVyaWVzLCAnKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86ICVzLzEpJyAlIChkZW5zaXR5KSlcbiAgICBlbHNlIGlmIHF1ZXJ5IGlzICdyYXRpbydcbiAgICAgIHB1c2gocXVlcmllcywgJyhtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAlcyknICUgKGRlbnNpdHkpKVxuICAgIGVsc2UgaWYgcXVlcnkgaXMgJ2RwaSdcbiAgICAgIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICAgICAgZGVuc2l0eT1jb252ZXJ0KGRlbnNpdHkpXG4gICAgICBwdXNoKHF1ZXJpZXMsICcobWluLXJlc29sdXRpb246ICVzZHBpKScgJSAocm91bmQoZGVuc2l0eSAqIDk2LCAxKSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAnZHBweCdcbiAgICAgIHB1c2gocXVlcmllcywgJyhtaW4tcmVzb2x1dGlvbjogJXNkcHB4KScgJSAoZGVuc2l0eSkpXG4gIHJldHVybiBxdWVyaWVzXG5cbmNyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgY2xhc3MpXG4gIC97JycgKyBjbGFzcyArICcgJyArIHNlbGVjdGVkfVxuICAgIHtibG9ja31cblxuLy8gK2JldHdlZW4obWluLCBtYXgpXG4vLyB1c2FnZSAoc2NhbGUgY2FuIGJlIG1peGVkIHdpdGggY3VzdG9tIHZhbHVlcyk6XG4vLyAgIC0gK2JldHdlZW4oMSwgMykgc2NhbGU6c2NhbGVcbi8vICAgLSArYmV0d2VlbigwLCAzKSAwIHdpZHRoOnNjYWxlXG4vLyAgIC0gK2JldHdlZW4oMjAwcHgsIDUwMHB4KSBjdXN0b206Y3VzdG9tXG4vLyAgIC0gK2JldHdlZW4oMCwgMzAwcHgpIDAgd2lkdGg6Y3VzdG9tXG4vLyAgIC0gK2JldHdlZW4oMSwgMzAwcHgpIHNjYWxlOmN1c3RvbVxuLy8gICAtICtiZXR3ZWVuKDIwMHB4LCA0KSBjdXN0b206c2NhbGVcblxuYmV0d2VlbihtaW4sIG1heCwgYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgc2VsZWN0ZWQgPSBzZWxlY3RvcigpXG5cbiAgaWYgLWlzLXN0cmluZyhvcmllbnRhdGlvbilcbiAgICBvcmllbnRhdGlvbiA9IGNvbnZlcnQob3JpZW50YXRpb24pXG4gIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICBkZW5zaXR5ID0gY29udmVydChkZW5zaXR5KVxuICBpZiAtaXMtc3RyaW5nKG1pbilcbiAgICBtaW4gPSAtZ2V0LXNjYWxlLW51bWJlcihtaW4pXG4gIGlmIC1pcy1zdHJpbmcobWF4KVxuICAgIG1heCA9IC1nZXQtc2NhbGUtbnVtYmVyKG1heClcblxuICAtbWluID0gcnVwdHVyZS5zY2FsZVttaW4gLSAxXSB1bmxlc3MgLWlzLXplcm8obWluKSBvciAobm90IC1vbi1zY2FsZShtaW4pKVxuICAtbWF4ID0gcnVwdHVyZS5zY2FsZVttYXhdIHVubGVzcyBub3QgLW9uLXNjYWxlKG1heClcbiAgLW1pbiA/PSBtaW5cbiAgLW1heCA/PSBtYXhcblxuICBpZiAocnVwdHVyZS5yYXN0ZXJpc2UtbWVkaWEtcXVlcmllcylcbiAgICBpZiBub3QgKGRlbnNpdHkgb3IgLW1heCBvciBvcmllbnRhdGlvbilcbiAgICAgIHtibG9ja31cbiAgZWxzZVxuICAgIGNvbmRpdGlvbiA9ICdvbmx5IHNjcmVlbidcbiAgICB1c2UtZGV2aWNlLXdpZHRoID0gdXNlLWRldmljZS13aWR0aCA/ICdkZXZpY2UtJyA6ICcnXG4gICAgdW5sZXNzIC1taW4gaXMgMFxuICAgICAgLW1pbiA9IC1jb252ZXJ0LXRvKCdlbScsIC1taW4pIGlmIHJ1cHR1cmUuZW5hYmxlLWVtLWJyZWFrcG9pbnRzXG4gICAgICAtbWluID0gLWFkanVzdC1vdmVybGFwKGFudGktb3ZlcmxhcCwgLW1pbiwgc2lkZTogJ21pbicpXG4gICAgICBjb25kaXRpb24gPSBjb25kaXRpb24gKyAnIGFuZCAobWluLScgKyB1c2UtZGV2aWNlLXdpZHRoICsgJ3dpZHRoOiAlcyknICUgKC1taW4pXG4gICAgdW5sZXNzIC1sYXJnZXItdGhhbi1zY2FsZShtYXgpXG4gICAgICAtbWF4ID0gLWNvbnZlcnQtdG8oJ2VtJywgLW1heCkgaWYgcnVwdHVyZS5lbmFibGUtZW0tYnJlYWtwb2ludHNcbiAgICAgIC1tYXggPSAtYWRqdXN0LW92ZXJsYXAoYW50aS1vdmVybGFwLCAtbWF4LCBzaWRlOiAnbWF4JylcbiAgICAgIGNvbmRpdGlvbiA9IGNvbmRpdGlvbiArICcgYW5kIChtYXgtJyArIHVzZS1kZXZpY2Utd2lkdGggKyAnd2lkdGg6ICVzKScgJSAoLW1heClcbiAgICBpZiBvcmllbnRhdGlvblxuICAgICAgY29uZGl0aW9uID0gY29uZGl0aW9uICsgJyBhbmQgKG9yaWVudGF0aW9uOiAlcyknICUgKG9yaWVudGF0aW9uKVxuICAgIGlmIGRlbnNpdHlcbiAgICAgIGNvbmRpdGlvbnMgPSAoKVxuICAgICAgZm9yIHF1ZXJ5IGluIC1kZW5zaXR5LXF1ZXJpZXMoZGVuc2l0eSlcbiAgICAgICAgcHVzaChjb25kaXRpb25zLCBjb25kaXRpb24gKyAnIGFuZCAlcycgJSAocXVlcnkpKVxuICAgICAgY29uZGl0aW9uID0gam9pbignLCAnLCBjb25kaXRpb25zKVxuICAgIEBtZWRpYSBjb25kaXRpb25cbiAgICAgIHtibG9ja31cbiAgaWYgZmFsbGJhY2stY2xhc3NcbiAgICArY3JlYXRlLWZhbGxiYWNrLWNsYXNzKHNlbGVjdGVkLCBmYWxsYmFjay1jbGFzcylcbiAgICAgIHtibG9ja31cblxuYXQoc2NhbGUtcG9pbnQsIGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2JldHdlZW4oc2NhbGUtcG9pbnQsIHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmZyb20td2lkdGgoc2NhbGUtcG9pbnQsIGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2JldHdlZW4oc2NhbGUtcG9pbnQsIGxlbmd0aChydXB0dXJlLnNjYWxlKSwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MpXG4gICAge2Jsb2NrfVxuXG5hYm92ZSA9IGZyb20td2lkdGhcblxudG8td2lkdGgoc2NhbGUtcG9pbnQsIGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2JldHdlZW4oMSwgc2NhbGUtcG9pbnQsIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxuYmVsb3cgPSB0by13aWR0aFxuXG5tb2JpbGUoYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgaWYgLWlzLXN0cmluZyhvcmllbnRhdGlvbilcbiAgICBvcmllbnRhdGlvbiA9IGNvbnZlcnQob3JpZW50YXRpb24pXG4gIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICBkZW5zaXR5ID0gY29udmVydChkZW5zaXR5KVxuICArYmVsb3cocnVwdHVyZS5tb2JpbGUtY3V0b2ZmLCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbnRhYmxldChhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICtiZXR3ZWVuKHJ1cHR1cmUubW9iaWxlLWN1dG9mZiwgcnVwdHVyZS5kZXNrdG9wLWN1dG9mZiwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MpXG4gICAge2Jsb2NrfVxuXG5kZXNrdG9wKGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2Fib3ZlKHJ1cHR1cmUuZGVza3RvcC1jdXRvZmYsIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxuaGQoYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgaWYgLWlzLXN0cmluZyhvcmllbnRhdGlvbilcbiAgICBvcmllbnRhdGlvbiA9IGNvbnZlcnQob3JpZW50YXRpb24pXG4gIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICBkZW5zaXR5ID0gY29udmVydChkZW5zaXR5KVxuICArYWJvdmUocnVwdHVyZS5oZC1jdXRvZmYsIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxuZGVuc2l0eShkZW5zaXR5LCBvcmllbnRhdGlvbiA9IG51bGwsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgc2VsZWN0ZWQgPSBzZWxlY3RvcigpXG4gIGlmIG5vdCAocnVwdHVyZS5yYXN0ZXJpc2UtbWVkaWEtcXVlcmllcylcbiAgICBjb25kaXRpb25zID0gKClcbiAgICBmb3IgcXVlcnkgaW4gLWRlbnNpdHktcXVlcmllcyhkZW5zaXR5KVxuICAgICAgY29uZGl0aW9uID0gJ29ubHkgc2NyZWVuIGFuZCAlcycgJSAocXVlcnkpXG4gICAgICBpZiBvcmllbnRhdGlvblxuICAgICAgICBjb25kaXRpb24gPSBjb25kaXRpb24gKyAnIGFuZCAob3JpZW50YXRpb246ICVzKScgJSAob3JpZW50YXRpb24pXG4gICAgICBwdXNoKGNvbmRpdGlvbnMsIGNvbmRpdGlvbilcbiAgICBjb25kaXRpb24gPSBqb2luKCcsICcsIGNvbmRpdGlvbnMpXG4gICAgQG1lZGlhIGNvbmRpdGlvblxuICAgICAge2Jsb2NrfVxuICAgIGlmIGZhbGxiYWNrLWNsYXNzXG4gICAgICArY3JlYXRlLWZhbGxiYWNrLWNsYXNzKHNlbGVjdGVkLCBmYWxsYmFjay1jbGFzcylcbiAgICAgICAge2Jsb2NrfVxuXG5waXhlbC1yYXRpbyA9IGRlbnNpdHlcblxucmV0aW5hKG9yaWVudGF0aW9uID0gbnVsbCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICArZGVuc2l0eSgncmV0aW5hJywgb3JpZW50YXRpb24sIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxubGFuZHNjYXBlKGRlbnNpdHkgPSBudWxsLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIHNlbGVjdGVkID0gc2VsZWN0b3IoKVxuICBpZiBub3QgKHJ1cHR1cmUucmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXMpXG4gICAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgICBpZiBkZW5zaXR5XG4gICAgICArcGl4ZWwtcmF0aW8oZGVuc2l0eSwgb3JpZW50YXRpb246IGxhbmRzY2FwZSwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgIHtibG9ja31cbiAgICBlbHNlXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKVxuICAgICAgICB7YmxvY2t9XG4gICAgICBpZiBmYWxsYmFjay1jbGFzc1xuICAgICAgICArY3JlYXRlLWZhbGxiYWNrLWNsYXNzKHNlbGVjdGVkLCBmYWxsYmFjay1jbGFzcylcbiAgICAgICAgICB7YmxvY2t9XG5cbnBvcnRyYWl0KGRlbnNpdHkgPSBudWxsLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIHNlbGVjdGVkID0gc2VsZWN0b3IoKVxuICBpZiBub3QgKHJ1cHR1cmUucmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXMpXG4gICAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgICBpZiBkZW5zaXR5XG4gICAgICArcGl4ZWwtcmF0aW8oZGVuc2l0eSwgb3JpZW50YXRpb246IHBvcnRyYWl0LCBmYWxsYmFjay1jbGFzcylcbiAgICAgICAge2Jsb2NrfVxuICAgIGVsc2VcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdClcbiAgICAgICAge2Jsb2NrfVxuICAgICAgaWYgZmFsbGJhY2stY2xhc3NcbiAgICAgICAgK2NyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgICAge2Jsb2NrfVxuIl19 */