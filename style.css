*{margin:0;padding:0;-moz-box-sizing:border-box;box-sizing:border-box}*::after,*::before{-moz-box-sizing:border-box;box-sizing:border-box}body{background-color:#eceee6;padding:0}a{text-decoration:none;color:#267e64}a:hover{color:#455652;text-decoration:underline}img,iframe,embed{width:100%}.container{background-color:#fff;margin:0 auto;max-width:1200px}[class*=col-]{display:table-cell;vertical-align:middle}[class*=__container]{margin:0 auto;max-width:1200px}[class*=col-1-12]{width:8.333333333333332%}[class*=col-2-12]{width:16.666666666666664%}[class*=col-3-12]{width:25%}[class*=col-4-12]{width:33.33333333333333%}[class*=col-5-12]{width:41.66666666666667%}[class*=col-6-12]{width:50%}[class*=col-7-12]{width:58.333333333333336%}[class*=col-8-12]{width:66.66666666666666%}[class*=col-9-12]{width:75%}[class*=col-10-12]{width:83.33333333333334%}[class*=col-11-12]{width:91.66666666666666%}[class*=col-12-12]{width:100%}.test--col-2-12{background-color:#f00}[class*=__items]{list-style:none;margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}a{background:transparent}a:hover,a:active{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}q{quotes:"\201C" "\201D" "\2018" "\2019"}q:before,q:after{content:'';content:none}sub,sup{font-size:12px;font-size:.75rem;line-height:0;position:relative;vertical-align:baseline}sup{top:-8px;top:-.5rem}sub{bottom:-4px;bottom:-.25rem}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}input[type=checkbox],input[type=radio]{-moz-box-sizing:border-box;box-sizing:border-box;padding:0}html{font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}body{color:#333;font-family:sans-serif;-moz-background-size:auto 24px;background-size:auto 24px;margin:0}header{padding:32px 16px;padding:2rem 1rem}.brand__logo--col-2-12{background-color:#ccc}.social-nav{background-color:#ccc}.banner-splash{background:url(img/Commerce_150_hero-1.jpg) no-repeat 0 0;-moz-background-size:cover;background-size:cover;height:450px;width:100%}.main__content--col-6-12{background-color:#fff}.main__heading{color:#267e64;font-size:32px;font-size:2rem}/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */