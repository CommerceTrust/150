*{margin:0;padding:0;-moz-box-sizing:border-box;box-sizing:border-box}*::after,*::before{-moz-box-sizing:border-box;box-sizing:border-box}body{background-color:#eceee6;padding:0}a{text-decoration:none;color:#267e64}a:hover{color:#455652;text-decoration:underline}img,iframe,embed{width:100%}.container{background-color:#fff;margin:0 auto;max-width:1200px}[class*=col-]{display:table-cell;vertical-align:middle}[class*=__container]{margin:0 auto;max-width:1200px}[class*=col-1-12]{width:8.333333333333332%}[class*=col-2-12]{width:16.666666666666664%}[class*=col-3-12]{width:25%}[class*=col-4-12]{width:33.33333333333333%}[class*=col-5-12]{width:41.66666666666667%}[class*=col-6-12]{width:50%}[class*=col-7-12]{width:58.333333333333336%}[class*=col-8-12]{width:66.66666666666666%}[class*=col-9-12]{width:75%}[class*=col-10-12]{width:83.33333333333334%}[class*=col-11-12]{width:91.66666666666666%}[class*=col-12-12]{width:100%}.test--col-2-12{background-color:#f00}[class*=__items]{list-style:none;margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}a{background:transparent}a:hover,a:active{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}q{quotes:"\201C" "\201D" "\2018" "\2019"}q:before,q:after{content:'';content:none}sub,sup{font-size:12px;font-size:.75rem;line-height:0;position:relative;vertical-align:baseline}sup{top:-8px;top:-.5rem}sub{bottom:-4px;bottom:-.25rem}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}input[type=checkbox],input[type=radio]{-moz-box-sizing:border-box;box-sizing:border-box;padding:0}html{font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}body{color:#333;font-family:sans-serif;-moz-background-size:auto 24px;background-size:auto 24px;margin:0}/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvZ2xvYmFsLnN0eWwiLCJiYXNlL2ltYWdlcy5zdHlsIiwiYmFzZS9sYXlvdXQuc3R5bCIsImJhc2UvcmVzZXQuc3R5bCIsImJhc2UvdHlwb2dyYXBoeS5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsUUFBUSxFQUFSO0VBQ0EsU0FBUyxFQUFUO0VBQ0EsWUFBWSxXQUFaOztBQUVBO0FBQVU7RUFDUixZQUFZLFdBQVo7O0FBRUo7RUFDRSxrQkFBa0IsUUFBbEI7RUFDQSxTQUFTLEVBQVQ7O0FBRUY7RUFDRSxpQkFBaUIsS0FBakI7RUFDQSxPQUFNLFFBQU47O0FBQ0E7RUFDRSxPQUFNLFFBQU47RUFDQSxpQkFBaUIsVUFBakI7O0FDaEJKO0FBQUs7QUFBUTtFQUNYLE9BQU8sS0FBUDs7QUNGRjtFQUNFLGtCQUFrQixLQUFsQjtFQUNBLFFBQVEsT0FBUjtFQUNBLFdBQVcsT0FBWDs7QUFNRjtFQUNFLFNBQVMsV0FBVDtFQUNBLGdCQUFnQixPQUFoQjs7QUFLRjtFQUNFLFFBQVEsT0FBUjtFQUNBLFdBQVcsT0FBWDs7QUFRQTtFQUNFLE9BQXFCLG1CQUFyQjs7QUFERjtFQUNFLE9BQXFCLG9CQUFyQjs7QUFERjtFQUNFLE9BQXFCLElBQXJCOztBQURGO0VBQ0UsT0FBcUIsbUJBQXJCOztBQURGO0VBQ0UsT0FBcUIsbUJBQXJCOztBQURGO0VBQ0UsT0FBcUIsSUFBckI7O0FBREY7RUFDRSxPQUFxQixvQkFBckI7O0FBREY7RUFDRSxPQUFxQixtQkFBckI7O0FBREY7RUFDRSxPQUFxQixJQUFyQjs7QUFERjtFQUNFLE9BQXFCLG1CQUFyQjs7QUFERjtFQUNFLE9BQXFCLG1CQUFyQjs7QUFERjtFQUNFLE9BQXFCLEtBQXJCOztBQWtCSjtFQUNFLGtCQUFpQixLQUFqQjs7QUFJRjtFQUNFLFlBQVksS0FBWjtFQUNBLFFBQVEsRUFBUjs7QUNuQkY7QUFBUTtBQUNPO0FBQ1M7QUFDWTtBQUNRO0FBQ1E7QUFDUTtBQUNRO0FBQ0s7QUFDUztFQUVoRixTQUFTLE1BQVQ7O0FBRUY7QUFBTTtBQUNRO0VBRVosU0FBUyxhQUFUOztBQU1GO0VBQ0UsU0FBUyxLQUFUO0VBRUEsUUFBUSxFQUFSOztBQU1GO0FBQVU7RUFDUixTQUFTLEtBQVQ7O0FBUUY7RUFNRSwwQkFBMEIsS0FBMUI7RUFFQSxzQkFBc0IsS0FBdEI7O0FBVUY7RUFDRSxRQUFRLEVBQVI7O0FBUUY7RUFFRSxZQUFZLFlBQVo7O0FBS0E7QUFBUTtFQUVOLFNBQVMsRUFBVDs7QUFzQ0o7RUFDRSxlQUFlLFdBQWY7O0FBRUY7QUFBRTtFQUVBLGFBQWEsS0FBYjs7QUFLRjtFQUNFLFlBQVksT0FBWjs7QUFFRjtFQUNFLFlBQVksS0FBWjtFQUNBLE9BQU8sS0FBUDs7QUFRRjtBQUFLO0FBQ0s7QUFDSztFQUViLGFBQXNCLGlCQUF0QjtFQUdBLFdBQVcsSUFBWDs7QUFFRjtFQUNFLGFBQWEsSUFBYjtFQUNBLGFBQWEsU0FBYjtFQUNBLFdBQVcsV0FBWDs7QUFFRjtFQUNFLFFBQVEsZ0NBQVI7O0FBU0E7QUFBUztFQUVQLFNBQVMsR0FBVDtFQUNBLFNBQVMsS0FBVDs7QUFPSjtBQUFJO0VBRUYsV0FBVyxRQUFYO0VBQ0EsYUFBYSxFQUFiO0VBQ0EsVUFBVSxTQUFWO0VBQ0EsZ0JBQWdCLFNBQWhCOztBQUNGO0VBQ0UsS0FBSyxRQUFMOztBQUNGO0VBQ0UsUUFBUSxTQUFSOztBQWdDRjtFQUNFLFFBQVEsRUFBUjs7QUFNRjtFQUNFLFVBQVUsT0FBVjs7QUFLRjtFQUNFLFFBQVEsRUFBUjs7QUFTRjtFQUNFLFFBQVEsa0JBQVI7RUFDQSxRQUFRLE1BQVI7RUFDQSxTQUFTLHNCQUFUOztBQUtGO0VBQ0UsUUFBUSxFQUFSO0VBRUEsU0FBUyxFQUFUO0VBRUEsYUFBYSxPQUFiOztBQVNGO0FBQU87QUFDTztBQUNRO0VBRXBCLGFBQWEsUUFBYjtFQUVBLFdBQVcsS0FBWDtFQUVBLFFBQVEsRUFBUjtFQUVBLGdCQUFnQixTQUFoQjs7QUFNRjtBQUFRO0VBQ04sYUFBYSxPQUFiOztBQUtGO0FBQU87RUFFTCxnQkFBZ0IsS0FBaEI7O0FBUUY7QUFBTztBQUMyQjtBQUNxQjtFQUVyRCxvQkFBb0IsT0FBcEI7RUFFQSxRQUFRLFFBQVI7O0FBTUY7QUFBaUI7RUFFZixRQUFRLFFBQVI7O0FBSUE7O0VBQ0UsUUFBUSxFQUFSO0VBQ0EsU0FBUyxFQUFUOztBQUdKO0VBQ0UsVUFBVSxLQUFWO0VBRUEsZ0JBQWdCLElBQWhCOztBQU1GO0VBQ0UsaUJBQWlCLFNBQWpCO0VBQ0EsZ0JBQWdCLEVBQWhCOztBQUlBO0VBQ0Usb0JBQW9CLFVBQXBCO0VBRUEsaUJBQWlCLFlBQWpCO0VBQ0Esb0JBQW9CLFlBQXBCO0VBRUEsWUFBWSxZQUFaOztBQUdBO0FBQWdDO0VBRTlCLG9CQUFvQixLQUFwQjs7QUFLSjtBQUFtQjtFQUVqQixZQUFZLFdBQVo7RUFFQSxTQUFTLEVBQVQ7O0FDaldKO0VBQ0UsV0FBVyxLQUFYO0VBQ0EseUJBQXlCLFVBQXpCO0VBQ0Esd0JBQXdCLFlBQXhCOztBQUdGO0VBQ0UsT0FBTyxLQUFQO0VBRUEsYUFBYSxhQUFiO0VBRUEsaUJBQWlCLFVBQWpCO0VBQ0EsUUFBUSxFQUFSIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIipcbiAgbWFyZ2luOiAwXG4gIHBhZGRpbmc6IDBcbiAgYm94LXNpemluZzogYm9yZGVyLWJveFxuXG4gICY6OmFmdGVyLCAmOjpiZWZvcmVcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94XG5cbmJvZHlcbiAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVcbiAgcGFkZGluZzogMFxuXG5hXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICBjb2xvcjpncmVlblxuICAmOmhvdmVyXG4gICAgY29sb3I6bmlnaHRncmVlblxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lXG4iLCIvLyBSRVNQT05TSVZFIElNQUdFU1xuaW1nLCBpZnJhbWUsIGVtYmVkXG4gIHdpZHRoOiAxMDAlXG4iLCIuY29udGFpbmVyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZcbiAgbWFyZ2luOiAwIGF1dG9cbiAgbWF4LXdpZHRoOiAxMjAwcHhcblxuXG5cblxuXG5bY2xhc3MqPSdjb2wtJ11cbiAgZGlzcGxheTogdGFibGUtY2VsbFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlXG5cblxuLy8gQ09OVEFJTkVSXG4vLyAgVGhpcyBpcyB1c2VkIHRvIGNvbnN0cmFpbiB0aGUgY29udGVudCBvZiB0aGUgc2l0ZSB0byBhIHN0YW5kYXJkIHdpZHRoXG5bY2xhc3MqPSdfX2NvbnRhaW5lciddXG4gIG1hcmdpbjogMCBhdXRvXG4gIG1heC13aWR0aDogMTIwMHB4XG5cblxuXG4vLyBBbGwgY29sdW1ucyAxIC0gMTIgYXJlIG1hZGUgd2l0aCB0aGlzIGxpdHRsZSBmdW5jdGlvblxuY29sdW1ucyA9IDEyXG5cbmZvciBpIGluICgxLi5jb2x1bW5zKVxuICBbY2xhc3MqPWNvbC17aX0te2NvbHVtbnN9XVxuICAgIHdpZHRoOiAoaS9jb2x1bW5zKSAqIDEwMCVcblxuICAgIC8vYWRkIGluY2x1ZGUgbWVkaWEgcXVlcmllcyBoZXJlXG5cblxuLy8gY29sLTEtMTJcbi8vIGNvbC0yLTEyXG4vLyBjb2wtMy0xMlxuLy8gY29sLTQtMTJcbi8vIGNvbC01LTEyXG4vLyBjb2wtNi0xMlxuLy8gY29sLTctMTJcbi8vIGNvbC04LTEyXG4vLyBjb2wtOS0xMlxuLy8gY29sLTEwLTEyXG4vLyBjb2wtMTEtMTJcbi8vIGNvbC0xMi0xMlxuXG4udGVzdC0tY29sLTItMTJcbiAgYmFja2dyb3VuZC1jb2xvciByZWRcblxuLy8gSVRFTVNcbi8vICBJdGVtcyBhcmUgYWx3YXlzIGEgVUwgb3IgT0wuXG5bY2xhc3MqPSdfX2l0ZW1zJ11cbiAgbGlzdC1zdHlsZTogbm9uZVxuICBtYXJnaW46IDBcbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOb3JtYWxpemUuc2NzcyBiYXNlZCBvbiBOaWNvbGFzIEdhbGxhZ2hlciBhbmQgSm9uYXRoYW4gTmVhbCdzXG4vLyBub3JtYWxpemUuY3NzIHYyLjEuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBOb3JtYWxpemUuc2NzcyBzZXR0aW5nc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFNldCB0byB0cnVlIGlmIHlvdSB3YW50IHRvIGFkZCBzdXBwb3J0IGZvciBJRTYgYW5kIElFN1xuLy8gTm90aWNlOiBzZXR0aW5nIHRvIHRydWUgbWlnaHQgcmVuZGVyIHNvbWUgZWxlbWVudHNcbi8vIHNsaWdodGx5IGRpZmZlcmVudGx5IHRoYW4gd2hlbiBzZXQgdG8gZmFsc2VcbmxlZ2FjeV9zdXBwb3J0X2Zvcl9pZSA9IGZhbHNlXG4vLyBVc2VkIGFsc28gaW4gQ29tcGFzc1xuLy8gU2V0IHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGhlcmUgc28geW91IGRvbid0IGhhdmUgdG8gb3ZlcnJpZGUgaXQgbGF0ZXJcbm5vcm1hbGl6ZWRfZm9udF9mYW1pbHkgPSBzYW5zLXNlcmlmXG5ub3JtYWxpemVfaGVhZGluZ3MgPSB0cnVlXG4vLyBoMV9mb250X3NpemUgPSAyZW1cbi8vIGgyX2ZvbnRfc2l6ZSA9IDEuNWVtXG4vLyBoM19mb250X3NpemUgPSAxLjE3ZW1cbi8vIGg0X2ZvbnRfc2l6ZSA9IDFlbVxuLy8gaDVfZm9udF9zaXplID0gMC44M2VtXG4vLyBoNl9mb250X3NpemUgPSAwLjc1ZW1cbi8vIGgxX21hcmdpbiA9IDAuNjdlbSAwXG4vLyBoMl9tYXJnaW4gPSAwLjgzZW0gMFxuLy8gaDNfbWFyZ2luID0gMWVtIDBcbi8vIGg0X21hcmdpbiA9IDEuMzNlbSAwXG4vLyBoNV9tYXJnaW4gPSAxLjY3ZW0gMFxuLy8gaDZfbWFyZ2luID0gMi4zM2VtIDBcbmJhY2tncm91bmQgPSB3aGl0ZVxuY29sb3IgPSBibGFja1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBDb3JyZWN0cyBibG9jayBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFNi83LzgvOSAmIEZGM1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeVxuICBkaXNwbGF5OiBibG9ja1xuLy8gQ29ycmVjdHMgaW5saW5lLWJsb2NrIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUU2LzcvOC85ICYgRkYzXG5hdWRpbyxcbmNhbnZhcyxcbnZpZGVvXG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICBpZiBsZWdhY3lfc3VwcG9ydF9mb3JfaWVcbiAgICAqZGlzcGxheTogaW5saW5lXG4gICAgKnpvb206IDFcbi8vIDEuIFByZXZlbnRzIG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgJ2F1ZGlvJyB3aXRob3V0IGNvbnRyb2xzXG4vLyAyLiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1M1IGRldmljZXNcbmF1ZGlvOm5vdChbY29udHJvbHNdKVxuICBkaXNwbGF5OiBub25lXG4gIC8vIDFcbiAgaGVpZ2h0OiAwXG4gIC8vIDJcbi8vXG4vLyBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4vLyBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbi8vXG5baGlkZGVuXSwgdGVtcGxhdGVcbiAgZGlzcGxheTogbm9uZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEJhc2Vcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAxLiBDb3JyZWN0cyB0ZXh0IHJlc2l6aW5nIG9kZGx5IGluIElFNi83IHdoZW4gYm9keSBmb250LXNpemUgaXMgc2V0IHVzaW5nIGVtIHVuaXRzXG4vLyAgICBodHRwOi8vY2xhZ251dC5jb20vYmxvZy8zNDgvI2M3OTBcbi8vIDIuIFByZXZlbnRzIGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tXG4vLyAgICB3d3cuNDU2YmVyZWFzdHJlZXQuY29tL2FyY2hpdmUvMjAxMDEyL2NvbnRyb2xsaW5nX3RleHRfc2l6ZV9pbl9zYWZhcmlfZm9yX2lvc193aXRob3V0X2Rpc2FibGluZ191c2VyX3pvb20vXG5odG1sXG4gIGlmIGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZVxuICAgIGZvbnQtc2l6ZTogMTAwJVxuICAgIC8vIDFcbiAgLy9iYWNrZ3JvdW5kOiBiYWNrZ3JvdW5kO1xuICAvL2NvbG9yOiBjb2xvcjtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlXG4gIC8vIDJcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCVcbiAgLy8gMlxuLy8gQWRkcmVzc2VzIGZvbnQtZmFtaWx5IGluY29uc2lzdGVuY3kgYmV0d2VlbiAndGV4dGFyZWEnIGFuZCBvdGhlciBmb3JtIGVsZW1lbnRzLlxuaHRtbCxcbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWFcbiAgLy9mb250LWZhbWlseTogbm9ybWFsaXplZF9mb250X2ZhbWlseTtcbi8vIEFkZHJlc3NlcyBtYXJnaW5zIGhhbmRsZWQgaW5jb3JyZWN0bHkgaW4gSUU2LzdcbmJvZHlcbiAgbWFyZ2luOiAwXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTGlua3Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbi8vIDIuIEFkZHJlc3NlcyBvdXRsaW5lIGRpc3BsYXllZCBvZGRseSBpbiBDaHJvbWVcbi8vIDMuIEltcHJvdmVzIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vyc1xuLy8gICAgcGVvcGxlLm9wZXJhLmNvbS9wYXRyaWNrbC9leHBlcmltZW50cy9rZXlib2FyZC90ZXN0XG5hXG4gIC8vIDFcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnRcbiAgLy8gMlxuICAmOmZvY3VzXG4gICAgLy9vdXRsaW5lOiB0aGluIGRvdHRlZDtcbiAgLy8gM1xuICAmOmhvdmVyLFxuICAgICY6YWN0aXZlXG4gICAgb3V0bGluZTogMFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFR5cG9ncmFwaHlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBBZGRyZXNzZXMgZm9udCBzaXplcyBhbmQgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2Lzdcbi8vIEFkZHJlc3NlcyBmb250IHNpemVzIHdpdGhpbiAnc2VjdGlvbicgYW5kICdhcnRpY2xlJyBpbiBGRjQrLCBDaHJvbWUsIFM1XG4vKiBAaWYgXFxub3JtYWxpemVfaGVhZGluZ3MgPT0gdHJ1ZSB7XG4gICAgaDEge1xuICAgICAgICBmb250LXNpemU6IFxcaDFfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcaDFfbWFyZ2luO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiBcXGgyX2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXGgyX21hcmdpbjtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFxoM19mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFxoM19tYXJnaW47XG4gICAgfVxuXG4gICAgaDQge1xuICAgICAgICBmb250LXNpemU6IFxcaDRfZm9udF9zaXplO1xuICAgICAgICBtYXJnaW46IFxcaDRfbWFyZ2luO1xuICAgIH1cblxuICAgIGg1IHtcbiAgICAgICAgZm9udC1zaXplOiBcXGg1X2ZvbnRfc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBcXGg1X21hcmdpbjtcbiAgICB9XG5cbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogXFxoNl9mb250X3NpemU7XG4gICAgICAgIG1hcmdpbjogXFxoNl9tYXJnaW47XG4gICAgfVxufSAqL1xuLy8gQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LCBTNSwgQ2hyb21lXG5hYmJyW3RpdGxlXVxuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkXG4vLyBBZGRyZXNzZXMgc3R5bGUgc2V0IHRvICdib2xkZXInIGluIEZGMyssIFM0LzUsIENocm9tZVxuYixcbnN0cm9uZ1xuICBmb250LXdlaWdodDogYm9sZFxuaWYgbGVnYWN5X3N1cHBvcnRfZm9yX2llXG4gIGJsb2NrcXVvdGVcbiAgICBtYXJnaW46IDFlbSA0MHB4XG4vLyBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTNSwgQ2hyb21lXG5kZm5cbiAgZm9udC1zdHlsZTogaXRhbGljXG4vLyBBZGRyZXNzZXMgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRTYvNy84Lzlcbm1hcmtcbiAgYmFja2dyb3VuZDogI2ZmMFxuICBjb2xvcjogIzAwMFxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5pZiBsZWdhY3lfc3VwcG9ydF9mb3JfaWVcbiAgcCxcbiAgICBwcmVcbiAgICBtYXJnaW46IDFlbSAwXG4vLyBDb3JyZWN0cyBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUU2LCBTNC81LCBDaHJvbWVcbi8vIGVuLndpa2lwZWRpYS5vcmcvd2lraS9Vc2VyOkRhdmlkZ290aGJlcmcvVGVzdDU5XG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBzZXJpZlxuICBpZiBsZWdhY3lfc3VwcG9ydF9mb3JfaWVcbiAgICBfZm9udC1mYW1pbHk6ICdjb3VyaWVyIG5ldycsIG1vbm9zcGFjZVxuICBmb250LXNpemU6IDFlbVxuLy8gSW1wcm92ZXMgcmVhZGFiaWxpdHkgb2YgcHJlLWZvcm1hdHRlZCB0ZXh0IGluIGFsbCBicm93c2Vyc1xucHJlXG4gIHdoaXRlLXNwYWNlOiBwcmVcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZFxuLy8gU2V0IGNvbnNpc3RlbnQgcXVvdGUgdHlwZXMuXG5xXG4gIHF1b3RlczogXCJcXDIwMUNcIiBcIlxcMjAxRFwiIFwiXFwyMDE4XCIgXCJcXDIwMTlcIlxuLy8gMS4gQWRkcmVzc2VzIENTUyBxdW90ZXMgbm90IHN1cHBvcnRlZCBpbiBJRTYvN1xuLy8gMi4gQWRkcmVzc2VzIHF1b3RlIHByb3BlcnR5IG5vdCBzdXBwb3J0ZWQgaW4gUzRcbi8vIDFcbmlmIGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZVxuICBxXG4gICAgcXVvdGVzOiBub25lXG4vLyAyXG5xXG4gICY6YmVmb3JlLFxuICAgICY6YWZ0ZXJcbiAgICBjb250ZW50OiAnJ1xuICAgIGNvbnRlbnQ6IG5vbmVcbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuLyogL3NtYWxsIHtcbiAgICBmb250LXNpemU6IDgwJTtcbn0gKi9cbi8vIFByZXZlbnRzIHN1YiBhbmQgc3VwIGFmZmVjdGluZyBsaW5lLWhlaWdodCBpbiBhbGwgYnJvd3NlcnNcbi8vIGdpc3QuZ2l0aHViLmNvbS80MTM5MzBcbnN1YixcbnN1cFxuICBmb250LXNpemU6IC43NXJlbVxuICBsaW5lLWhlaWdodDogMFxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lXG5zdXBcbiAgdG9wOiAtMC41cmVtXG5zdWJcbiAgYm90dG9tOiAtMC4yNXJlbVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIExpc3RzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQWRkcmVzc2VzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIElFNi83XG5pZiBsZWdhY3lfc3VwcG9ydF9mb3JfaWVcbiAgZGwsXG4gICAgbWVudSxcbiAgICBvbCxcbiAgICB1bFxuICAgIC8vbWFyZ2luOiAxZW0gMDtcbmlmIGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZVxuICBkZFxuICAgIG1hcmdpbjogMCAwIDAgNDBweFxuLy8gQWRkcmVzc2VzIHBhZGRpbmdzIHNldCBkaWZmZXJlbnRseSBpbiBJRTYvN1xuaWYgbGVnYWN5X3N1cHBvcnRfZm9yX2llXG4gIG1lbnUsXG4gICAgb2wsXG4gICAgdWxcbiAgICAvL3BhZGRpbmc6IDAgMCAwIDQwcHg7XG4vLyBDb3JyZWN0cyBsaXN0IGltYWdlcyBoYW5kbGVkIGluY29ycmVjdGx5IGluIElFN1xubmF2XG4gIHVsLFxuICAgIG9sXG4gICAgaWYgbGVnYWN5X3N1cHBvcnRfZm9yX2llXG4gICAgICAvL2xpc3Qtc3R5bGUtaW1hZ2U6IG5vbmU7XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRW1iZWRkZWQgY29udGVudFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIDEuIFJlbW92ZXMgYm9yZGVyIHdoZW4gaW5zaWRlICdhJyBlbGVtZW50IGluIElFNi83LzgvOSwgRkYzXG4vLyAyLiBJbXByb3ZlcyBpbWFnZSBxdWFsaXR5IHdoZW4gc2NhbGVkIGluIElFN1xuLy8gICAgY29kZS5mbGlja3IuY29tL2Jsb2cvMjAwOC8xMS8xMi9vbi11aS1xdWFsaXR5LXRoZS1saXR0bGUtdGhpbmdzLWNsaWVudC1zaWRlLWltYWdlLXJlc2l6aW5nL1xuaW1nXG4gIGJvcmRlcjogMFxuICAvLyAxXG4gIGlmIGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZVxuICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWNcbiAgICAvLyAyXG4vLyBDb3JyZWN0cyBvdmVyZmxvdyBkaXNwbGF5ZWQgb2RkbHkgaW4gSUU5XG5zdmc6bm90KDpyb290KVxuICBvdmVyZmxvdzogaGlkZGVuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRmlndXJlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEFkZHJlc3NlcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUU2LzcvOC85LCBTNSwgTzExXG5maWd1cmVcbiAgbWFyZ2luOiAwXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRm9ybXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBDb3JyZWN0cyBtYXJnaW4gZGlzcGxheWVkIG9kZGx5IGluIElFNi83XG5pZiBsZWdhY3lfc3VwcG9ydF9mb3JfaWVcbiAgZm9ybVxuICAgIG1hcmdpbjogMFxuLy8gRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nXG5maWVsZHNldFxuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwXG4gIG1hcmdpbjogMCAycHhcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtXG4vLyAxLiBDb3JyZWN0cyBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFNi83LzgvOVxuLy8gMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuLy8gMy4gQ29ycmVjdHMgdGV4dCBub3Qgd3JhcHBpbmcgaW4gRkYzXG4vLyA0LiBDb3JyZWN0cyBhbGlnbm1lbnQgZGlzcGxheWVkIG9kZGx5IGluIElFNi83XG5sZWdlbmRcbiAgYm9yZGVyOiAwXG4gIC8vIDFcbiAgcGFkZGluZzogMFxuICAvLyAyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWxcbiAgLy8gM1xuICBpZiBsZWdhY3lfc3VwcG9ydF9mb3JfaWVcbiAgICAqbWFyZ2luLWxlZnQ6IC03cHhcbiAgICAvLyA0XG4vLyAxLiBDb3JyZWN0IGZvbnQgZmFtaWx5IG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gYWxsIGJyb3dzZXJzLlxuLy8gMi4gQ29ycmVjdHMgZm9udCBzaXplIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gYWxsIGJyb3dzZXJzXG4vLyAzLiBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUU2LzcsIEZGMyssIFM1LCBDaHJvbWVcbi8vIDQuIEltcHJvdmVzIGFwcGVhcmFuY2UgYW5kIGNvbnNpc3RlbmN5IGluIGFsbCBicm93c2Vyc1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYVxuICBmb250LWZhbWlseTogaW5oZXJpdFxuICAvLyAxXG4gIGZvbnQtc2l6ZTogMTAwJVxuICAvLyAyXG4gIG1hcmdpbjogMFxuICAvLyAzXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZVxuICAvLyA0XG4gIGlmIGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZVxuICAgICp2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlXG4gICAgLy8gNFxuLy8gQWRkcmVzc2VzIEZGMy80IHNldHRpbmcgbGluZS1oZWlnaHQgb24gJ2lucHV0JyB1c2luZyAhaW1wb3J0YW50IGluIHRoZSBVQSBzdHlsZXNoZWV0XG5idXR0b24sIGlucHV0XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWxcbi8vIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbi8vIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4vLyBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIENocm9tZSwgU2FmYXJpIDUrLCBhbmQgSUUgOCsuXG4vLyBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3ggNCsgYW5kIE9wZXJhLlxuYnV0dG9uLFxuc2VsZWN0XG4gIHRleHQtdHJhbnNmb3JtOiBub25lXG4vLyAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuLy8gICAgYW5kIGB2aWRlb2AgY29udHJvbHNcbi8vIDIuIENvcnJlY3RzIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgJ2lucHV0JyB0eXBlcyBpbiBpT1Ncbi8vIDMuIEltcHJvdmVzIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuLy8gICAgJ2lucHV0JyBhbmQgb3RoZXJzXG4vLyA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUU3IHdpdGhvdXQgYWZmZWN0aW5nIG5vcm1hbCB0ZXh0IGlucHV0c1xuLy8gICAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRTZcbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl1cbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b25cbiAgLy8gMlxuICBjdXJzb3I6IHBvaW50ZXJcbiAgLy8gM1xuICBpZiBsZWdhY3lfc3VwcG9ydF9mb3JfaWVcbiAgICAqb3ZlcmZsb3c6IHZpc2libGVcbiAgICAvLyA0XG4vLyBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzXG5idXR0b25bZGlzYWJsZWRdLFxuaW5wdXRbZGlzYWJsZWRdXG4gIGN1cnNvcjogZGVmYXVsdFxuLy8gUmVtb3ZlcyBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRkYzK1xuLy8gd3d3LnNpdGVwZW4uY29tL2Jsb2cvMjAwOC8wNS8xNC90aGUtZGV2aWxzLWluLXRoZS1kZXRhaWxzLWZpeGluZy1kb2pvcy10b29sYmFyLWJ1dHRvbnMvXG5idXR0b24sIGlucHV0XG4gICY6Oi1tb3otZm9jdXMtaW5uZXJcbiAgICBib3JkZXI6IDBcbiAgICBwYWRkaW5nOiAwXG4vLyAxLiBSZW1vdmVzIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFNi83LzgvOVxuLy8gMi4gSW1wcm92ZXMgcmVhZGFiaWxpdHkgYW5kIGFsaWdubWVudCBpbiBhbGwgYnJvd3NlcnNcbnRleHRhcmVhXG4gIG92ZXJmbG93OiBhdXRvXG4gIC8vIDFcbiAgdmVydGljYWwtYWxpZ246IHRvcFxuICAvLyAyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVGFibGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzXG50YWJsZVxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlXG4gIGJvcmRlci1zcGFjaW5nOiAwXG5pbnB1dFxuICAvLyAxLiBBZGRyZXNzZXMgYXBwZWFyYW5jZSBzZXQgdG8gc2VhcmNoZmllbGQgaW4gUzUsIENocm9tZVxuICAvLyAyLiBBZGRyZXNzZXMgYm94LXNpemluZyBzZXQgdG8gYm9yZGVyLWJveCBpbiBTNSwgQ2hyb21lIChpbmNsdWRlIC1tb3ogdG8gZnV0dXJlLXByb29mKVxuICAmW3R5cGU9XCJzZWFyY2hcIl1cbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZFxuICAgIC8vIDFcbiAgICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveFxuICAgIC8vIDJcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveFxuICAgIC8vIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgNSBhbmQgQ2hyb21lXG4gICAgLy8gb24gT1MgWC5cbiAgICAmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuICAgICAgICAmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uXG4gICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmVcbiAgLy8gMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAgLy8gMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAgLy8gMy4gUmVtb3ZlcyBleGNlc3MgcGFkZGluZyBpbiBJRTdcbiAgLy8gICAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUU2XG4gICZbdHlwZT1cImNoZWNrYm94XCJdLFxuICAgICZbdHlwZT1cInJhZGlvXCJdXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxuICAgIC8vIDFcbiAgICBwYWRkaW5nOiAwXG4gICAgLy8gMlxuICAgIGlmIGxlZ2FjeV9zdXBwb3J0X2Zvcl9pZVxuICAgICAgKmhlaWdodDogMTNweFxuICAgICAgLy8gM1xuICAgICAgKndpZHRoOiAxM3B4XG4gICAgICAvLyAzXG4iLCIvLyBWYXJzXG5iYXNlLWZvbnQtc2l6ZSA9IDE2cHhcbmJhc2UtbGluZS1oZWlnaHQgPSAxLjVcblxuXG4vLyBUeXBlZmFjZXNcbnNhbnMgPSAnc2Fucy1zZXJpZidcbnNlcmlmID0gJ3NlcmlmJ1xuXG5cbi8vIEZvbnQgd2VpZ2h0c1xueGxpZ2h0ID0gMjAwXG5saWdodCA9IDMwMFxubm9ybWFsID0gNDAwXG5zZW1pYm9sZCA9IDYwMFxuYm9sZCA9IDcwMFxuXG5cbi8vIExpbmUgaGVpZ2h0IGZ1bmN0aW9uXG5saW5lLWhlaWdodCgpXG4gIGJhc2UtZm9udC1zaXplICogYmFzZS1saW5lLWhlaWdodFxuXG5cbi8vIFZhciBtdXN0IGJlIHNwZWNpZmllZCBhZnRlciByZXR1cm5pbmcgdGhlIGxpbmUtaGVpZ2h0IGZ1bmN0aW9uXG5jYWwtbGluZS1oZWlnaHQgPSBsaW5lLWhlaWdodCgpXG5cblxuaHRtbFxuICBmb250LXNpemU6IGJhc2UtZm9udC1zaXplXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWRcblxuXG5ib2R5XG4gIGNvbG9yOiBjaGFyY29hbFxuICBsaW5lLWhlaWdodDogMS41XG4gIGZvbnQtZmFtaWx5OiBzYW5zXG4gIC8vYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCBsaW5lLWhlaWdodCgpIC0gMXB4LCBncmVlbiAxcHggLCB0cmFuc3BhcmVudClcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIGxpbmUtaGVpZ2h0KClcbiAgbWFyZ2luOiAwXG5cblxuXG4vLyBbY2xhc3MqPSdfX2hlYWRpbmcnXVxuLy8gICBjb2xvcjogZ3JlZW5cbi8vICAgZm9udC1mYW1pbHk6IHNlcmlmXG4vLyAgIGZvbnQtc2l6ZTogMi41cmVtXG4vLyAgIGZvbnQtd2VpZ2h0OiBub3JtYWxcbi8vICAgbGluZS1oZWlnaHQ6IDFcbi8vICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
/*# sourceMappingURL=data:application/json;base64, */